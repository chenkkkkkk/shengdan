{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nvar getRemainTimes = function getRemainTimes(time) {\n  if (!time) {\n    return {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0\n    };\n  }\n  var stime = Math.floor(time / 1e3);\n  return {\n    days: Math.floor(stime / 3600 / 24),\n    hours: Math.floor(stime / 3600 % 24),\n    minutes: Math.floor(stime / 60 % 60),\n    seconds: stime % 60,\n    milliseconds: time % 1e3\n  };\n};\nvar fillZero = function fillZero(num) {\n  var isMillieconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (isMillieconds) {\n    if (num >= 100) {\n      return num;\n    }\n    return num >= 10 ? \"0\".concat(num) : \"00\".concat(num);\n  }\n  return num >= 10 ? num : \"0\".concat(num);\n};\nvar getMark = function getMark(format, type) {\n  var _format$split, _format$split$call, _format$split$call$, _format$split$call$$s, _format$split$call$$s2;\n  return format === null || format === void 0 ? void 0 : (_format$split = format.split) === null || _format$split === void 0 ? void 0 : (_format$split$call = _format$split.call(format, type)) === null || _format$split$call === void 0 ? void 0 : (_format$split$call$ = _format$split$call[1]) === null || _format$split$call$ === void 0 ? void 0 : (_format$split$call$$s = _format$split$call$.split) === null || _format$split$call$$s === void 0 ? void 0 : (_format$split$call$$s2 = _format$split$call$$s.call(_format$split$call$, \"\")) === null || _format$split$call$$s2 === void 0 ? void 0 : _format$split$call$$s2[0];\n};\nvar getShowTimes = function getShowTimes(times, format) {\n  var _ref, _ref$toUpperCase, _format, _format2, _format3, _format4, _format5;\n  var milliseconds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  format = (_ref = format || \"DD:HH:mm:ss\") === null || _ref === void 0 ? void 0 : (_ref$toUpperCase = _ref.toUpperCase) === null || _ref$toUpperCase === void 0 ? void 0 : _ref$toUpperCase.call(_ref);\n  milliseconds && !format.includes(\":SSS\") && (format = format.concat(\":SSS\"));\n  var showTimes = [];\n  if (((_format = format) === null || _format === void 0 ? void 0 : _format.indexOf(\"DD\")) > -1) {\n    showTimes === null || showTimes === void 0 ? void 0 : showTimes.push({\n      mark: getMark(format, \"DD\"),\n      value: fillZero(times === null || times === void 0 ? void 0 : times.days)\n    });\n  }\n  if (((_format2 = format) === null || _format2 === void 0 ? void 0 : _format2.indexOf(\"HH\")) > -1) {\n    showTimes === null || showTimes === void 0 ? void 0 : showTimes.push({\n      mark: getMark(format, \"HH\"),\n      value: fillZero(times === null || times === void 0 ? void 0 : times.hours)\n    });\n  }\n  if (((_format3 = format) === null || _format3 === void 0 ? void 0 : _format3.indexOf(\"MM\")) > -1) {\n    showTimes === null || showTimes === void 0 ? void 0 : showTimes.push({\n      mark: getMark(format, \"MM\"),\n      value: fillZero(times === null || times === void 0 ? void 0 : times.minutes)\n    });\n  }\n  if (((_format4 = format) === null || _format4 === void 0 ? void 0 : _format4.indexOf(\"SS\")) > -1) {\n    showTimes === null || showTimes === void 0 ? void 0 : showTimes.push({\n      mark: getMark(format, \"SS\"),\n      value: fillZero(times === null || times === void 0 ? void 0 : times.seconds)\n    });\n  }\n  if (((_format5 = format) === null || _format5 === void 0 ? void 0 : _format5.indexOf(\"SSS\")) > -1) {\n    showTimes === null || showTimes === void 0 ? void 0 : showTimes.push({\n      mark: getMark(format, \"SSS\"),\n      value: fillZero(times === null || times === void 0 ? void 0 : times.milliseconds, true)\n    });\n  }\n  return showTimes;\n};\nvar getScreenFps = function () {\n  var _ref2, _ref2$find;\n  var _window = window,\n    requestAnimationFrame = _window.requestAnimationFrame,\n    mozRequestAnimationFrame = _window.mozRequestAnimationFrame,\n    webkitRequestAnimationFrame = _window.webkitRequestAnimationFrame;\n  var nextFrame = (_ref2 = [requestAnimationFrame, mozRequestAnimationFrame, webkitRequestAnimationFrame]) === null || _ref2 === void 0 ? void 0 : (_ref2$find = _ref2.find) === null || _ref2$find === void 0 ? void 0 : _ref2$find.call(_ref2, function (fn) {\n    return fn;\n  });\n  if (!nextFrame) {\n    console.error(\"requestAnimationFrame is not supported!\");\n    return;\n  }\n  return function () {\n    var targetCount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n    if (targetCount < 1) {\n      return;\n    }\n    var count = 0;\n    var beginDate = Date.now();\n    return new Promise(function (resolve) {\n      (function log() {\n        nextFrame === null || nextFrame === void 0 ? void 0 : nextFrame(function () {\n          if (++count >= targetCount) {\n            var diffDate = Date.now() - beginDate;\n            var fps = count / diffDate * 1e3;\n            return resolve(fps);\n          }\n          log();\n        });\n      })();\n    });\n  };\n}();\nexport { fillZero, getMark, getRemainTimes, getScreenFps, getShowTimes };","map":{"version":3,"mappings":"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","names":["getRemainTimes","time","days","hours","minutes","seconds","milliseconds","stime","floor","fillZero","num","isMillieconds","getMark","format","type","split","_format$split$call$$s","_format$split$call$$s2","getShowTimes","times","_ref","toUpperCase","_ref$toUpperCase","includes","concat","showTimes","_format","indexOf","push","mark","value","_format2","_format3","_format4","_format5","getScreenFps","window","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","_ref2","find","fn","nextFrame","console","error","targetCount","count","Date","now","Promise","resolve","log","diffDate","fps"],"sources":["../../../src/shared/useCountDown/utils.ts"],"sourcesContent":["import { TimeData, TdUseCountDownShowTimes } from './type';\n\n/**\n * getRemainTimes\n * @param time\n * @returns\n */\nexport const getRemainTimes = (time?: number): TimeData => {\n  if (!time) {\n    return {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n    };\n  }\n  const stime = Math.floor(time / 1000); // 秒\n  return {\n    days: Math.floor(stime / 3600 / 24),\n    hours: Math.floor((stime / 3600) % 24),\n    minutes: Math.floor((stime / 60) % 60),\n    seconds: stime % 60,\n    milliseconds: time % 1000,\n  };\n};\n\n/**\n * fillZero\n * @param num\n * @returns\n */\nexport const fillZero = (num: number, isMillieconds = false): string | number => {\n  if (isMillieconds) {\n    if (num >= 100) {\n      return num;\n    }\n\n    return num >= 10 ? `0${num}` : `00${num}`;\n  }\n\n  return num >= 10 ? num : `0${num}`;\n};\n\n/**\n * getMark\n * @param format\n * @param type\n * @returns\n */\nexport const getMark = (format: string, type: string): string => format?.split?.(type)?.[1]?.split?.('')?.[0];\n\n/**\n * getShowTimes\n * @param time\n * @returns\n */\nexport const getShowTimes = (times: TimeData, format: string, milliseconds = false): TdUseCountDownShowTimes => {\n  format = (format || 'DD:HH:mm:ss')?.toUpperCase?.();\n  milliseconds && !format.includes(':SSS') && (format = format.concat(':SSS'));\n  const showTimes: TdUseCountDownShowTimes = [];\n  if (format?.indexOf('DD') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'DD'),\n      value: fillZero(times?.days),\n    });\n  }\n  if (format?.indexOf('HH') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'HH'),\n      value: fillZero(times?.hours),\n    });\n  }\n  if (format?.indexOf('MM') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'MM'),\n      value: fillZero(times?.minutes),\n    });\n  }\n  if (format?.indexOf('SS') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'SS'),\n      value: fillZero(times?.seconds),\n    });\n  }\n  if (format?.indexOf('SSS') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'SSS'),\n      value: fillZero(times?.milliseconds, true),\n    });\n  }\n\n  return showTimes;\n};\n\n/**\n * @param {number} targetCount 不小于1的整数，表示经过targetCount帧之后返回结果\n * @return {Promise<number>}\n */\nexport const getScreenFps = (() => {\n  const { requestAnimationFrame, mozRequestAnimationFrame, webkitRequestAnimationFrame } = window as any;\n  // 先做一下兼容性处理\n  const nextFrame = [requestAnimationFrame, mozRequestAnimationFrame, webkitRequestAnimationFrame]?.find?.((fn) => fn);\n  //\n  if (!nextFrame) {\n    console.error('requestAnimationFrame is not supported!');\n    return;\n  }\n  return (targetCount = 50) => {\n    if (targetCount < 1) {\n      return;\n    }\n    let count = 0;\n    const beginDate = Date.now();\n    return new Promise((resolve) => {\n      (function log() {\n        nextFrame?.(() => {\n          if (++count >= targetCount) {\n            const diffDate = Date.now() - beginDate;\n            const fps = (count / diffDate) * 1000;\n            return resolve(fps);\n          }\n          log();\n        });\n      })();\n    });\n  };\n})();\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}