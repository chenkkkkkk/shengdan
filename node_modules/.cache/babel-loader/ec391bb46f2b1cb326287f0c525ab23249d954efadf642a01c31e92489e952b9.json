{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { defineComponent, getCurrentInstance, computed, resolveComponent, openBlock, createElementBlock, Fragment, createBlock, createCommentVNode, createElementVNode, normalizeClass, renderList, toDisplayString } from 'vue';\nimport config from '../config.js';\nimport CountDownProps from './props.js';\nimport { useCountDown } from '../shared/useCountDown/index.js';\nimport '../shared/index.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { renderTNode } from '../shared/render.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/typeof';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-countdown\");\nvar script = defineComponent({\n  name: name,\n  components: {\n    TNode: TNodeComponent\n  },\n  props: _objectSpread({}, CountDownProps),\n  setup: function setup(props) {\n    var _ref, _ref$test;\n    var _useCountDown = useCountDown(props),\n      time = _useCountDown.time,\n      showTimes = _useCountDown.showTimes;\n    var internalInstance = getCurrentInstance();\n    var hasChinese = (_ref = /.*[\\u4e00-\\u9fa5]+.*$/) === null || _ref === void 0 ? void 0 : (_ref$test = _ref.test) === null || _ref$test === void 0 ? void 0 : _ref$test.call(_ref, props === null || props === void 0 ? void 0 : props.format);\n    var contentLayout = computed(function () {\n      return renderTNode(internalInstance, \"content\");\n    });\n    return {\n      name: name,\n      time: time,\n      showTimes: showTimes,\n      hasChinese: hasChinese,\n      contentLayout: contentLayout\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  return openBlock(), createElementBlock(Fragment, null, [!_ctx.time ? (openBlock(), createBlock(_component_t_node, {\n    key: 0,\n    content: _ctx.contentLayout\n  }, null, 8, [\"content\"])) : createCommentVNode(\"\", true), createElementVNode(\"span\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \" \").concat(_ctx.name, \"--\").concat(_ctx.theme, \" \").concat(_ctx.name, \"--\").concat(_ctx.size, \" \").concat(!_ctx.hasChinese ? \"\" : \"\".concat(_ctx.name, \"--split-with-unit\")))\n  }, [_ctx.time ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList(_ctx.showTimes, function (item) {\n    return openBlock(), createElementBlock(Fragment, {\n      key: item.mark\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass(\"\".concat(_ctx.name, \"__digit\"))\n    }, toDisplayString(item.value), 3), item.mark ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      class: normalizeClass(\"\".concat(_ctx.name, \"__unit\"))\n    }, toDisplayString(item.mark), 3)) : createCommentVNode(\"\", true)], 64);\n  }), 128)) : createCommentVNode(\"\", true)], 2)], 64);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAEhB,aAAeG,eAAgB;EAC7BD;EACAE,YAAY;IAAEC,KAAM,EAANA;GAAM;EACpBC,KAAO,oBACFC,eACL;EACAC,sBAAMF,KAAO;IAAA;IACX,IAA4BG,6BAAaH,KAAK;MAAtCI;MAAMC,SAAU,iBAAVA,SAAU;IACxB,IAAMC,mBAAmBC,kBAAmB;IAC5C,IAAMC,UAAa,6FAAyBC,IAAO,8CAAhCC,SAAgCV,gEAAOW,MAAM;IAChE,IAAMC,gBAAgBC,QAAS;MAAA,OAAMC,WAAY,mBAAkB,SAAS,CAAC;KAAA;IAEtE;MACLlB;MACAQ;MACAC;MACAG;MACAI;KACF;EACF;AACF,CAAC;;;2DC3CkBG,IAAI,sBACnBC,YAAyCC;;IAAhCC,SAASH,IAAa;4DAEjCI,mBAOM;IAPCC,OAAUC,kCAAQ,sCAASN,YAASA,qBAAS,sCAAS,kCAAqBA,KAAInB;MACpEmB,IAAI,0BAClBO,kBAGU;IAAAC;GAAA,aAHeR,IAAS,sBAAjBS,IAAG;;MAAsBD,SAAK;QAC7CJ,mBAAsD;MAA/CC,sBAAUL,eAAInB;KAAc,sBAAK,MAAI,OAChC4B,IAAK,sBAAjBF,mBAAqE;;MAA7CF,sBAAUL,eAAInB;KAAa,sBAAK,KAAG","names":["prefix","config","name","defineComponent","components","TNode","props","CountDownProps","setup","useCountDown","time","showTimes","internalInstance","getCurrentInstance","hasChinese","test","_ref$test","format","contentLayout","computed","renderTNode","_ctx","_createBlock","_component_t_node","content","_createElementVNode","class","_normalizeClass","_createElementBlock","key","item"],"sources":["../../src/count-down/count-down.vue","../../src/count-down/count-down.vue?vue&type=template&id=2e8f619d&lang.js"],"sourcesContent":["<template>\n  <template v-if=\"!time\">\n    <t-node :content=\"contentLayout\"></t-node>\n  </template>\n  <span :class=\"`${name} ${name}--${theme} ${name}--${size} ${!hasChinese ? '' : `${name}--split-with-unit`}`\">\n    <template v-if=\"time\">\n      <template v-for=\"item in showTimes\" :key=\"item.mark\">\n        <span :class=\"`${name}__digit`\">{{ item.value }}</span>\n        <span v-if=\"item.mark\" :class=\"`${name}__unit`\">{{ item.mark }}</span>\n      </template>\n    </template>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance } from 'vue';\nimport config from '../config';\nimport CountDownProps from './props';\nimport { useCountDown } from '../shared/useCountDown';\nimport { renderTNode, TNode } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-countdown`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: {\n    ...CountDownProps,\n  },\n  setup(props) {\n    const { time, showTimes } = useCountDown(props);\n    const internalInstance = getCurrentInstance();\n    const hasChinese = /.*[\\u4e00-\\u9fa5]+.*$/?.test?.(props?.format);\n    const contentLayout = computed(() => renderTNode(internalInstance, 'content'));\n    // return\n    return {\n      name,\n      time,\n      showTimes,\n      hasChinese,\n      contentLayout,\n    };\n  },\n});\n</script>\n","<template>\n  <template v-if=\"!time\">\n    <t-node :content=\"contentLayout\"></t-node>\n  </template>\n  <span :class=\"`${name} ${name}--${theme} ${name}--${size} ${!hasChinese ? '' : `${name}--split-with-unit`}`\">\n    <template v-if=\"time\">\n      <template v-for=\"item in showTimes\" :key=\"item.mark\">\n        <span :class=\"`${name}__digit`\">{{ item.value }}</span>\n        <span v-if=\"item.mark\" :class=\"`${name}__unit`\">{{ item.mark }}</span>\n      </template>\n    </template>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance } from 'vue';\nimport config from '../config';\nimport CountDownProps from './props';\nimport { useCountDown } from '../shared/useCountDown';\nimport { renderTNode, TNode } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-countdown`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: {\n    ...CountDownProps,\n  },\n  setup(props) {\n    const { time, showTimes } = useCountDown(props);\n    const internalInstance = getCurrentInstance();\n    const hasChinese = /.*[\\u4e00-\\u9fa5]+.*$/?.test?.(props?.format);\n    const contentLayout = computed(() => renderTNode(internalInstance, 'content'));\n    // return\n    return {\n      name,\n      time,\n      showTimes,\n      hasChinese,\n      contentLayout,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}