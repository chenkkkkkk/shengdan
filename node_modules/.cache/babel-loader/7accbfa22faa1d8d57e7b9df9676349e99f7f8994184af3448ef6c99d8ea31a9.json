{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { defineComponent, toRefs, computed, ref, onMounted, nextTick, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createVNode, withCtx, createTextVNode, toDisplayString, Fragment, renderList, createBlock } from 'vue';\nimport config from '../config.js';\nimport PickerProps from './props.js';\nimport _Button from '../button/index.js';\nimport '../shared/index.js';\nimport script$1 from './picker-item.js';\nimport { useEmitEvent } from '../shared/useEmitEvent/index.js';\nimport { useVModel } from '../shared/useVModel/index.js';\nimport { useChildSlots } from '../shared/useChildSlots/index.js';\nimport { useExpose } from '../shared/useExpose/index.js';\nimport '../button/button.js';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'tdesign-icons-vue-next';\nimport '../shared/constants.js';\nimport '../button/props.js';\nimport '../shared/render-tnode.js';\nimport '../shared/render.js';\nimport '@babel/runtime/helpers/typeof';\nimport 'lodash/camelCase';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useTest/index.js';\nimport './style/css.js';\nimport '../button/type.js';\nimport './picker.class.js';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-picker\");\nvar getIndexFromColumns = function getIndexFromColumns(columns, value, column) {\n  var _columns$column;\n  var resultIndex;\n  (_columns$column = columns[column]) === null || _columns$column === void 0 ? void 0 : _columns$column.forEach(function (item, index) {\n    if (item.value === value) {\n      resultIndex = index;\n    }\n  });\n  return resultIndex;\n};\nvar script = defineComponent({\n  name: name,\n  components: {\n    TButton: _Button,\n    PickerItem: script$1\n  },\n  props: PickerProps,\n  emits: [\"change\", \"cancel\", \"pick\", \"update:modelValue\", \"update:value\"],\n  setup: function setup(props, context) {\n    var emitEvent = useEmitEvent(props, context.emit);\n    var _toRefs = toRefs(props),\n      value = _toRefs.value,\n      modelValue = _toRefs.modelValue;\n    var _useVModel = useVModel(value, modelValue, props.defaultValue, props.onChange),\n      _useVModel2 = _slicedToArray(_useVModel, 2),\n      pickerValue = _useVModel2[0],\n      setPickerValue = _useVModel2[1];\n    var confirmButtonText = computed(function () {\n      return props.confirmBtn;\n    });\n    var cancelButtonText = computed(function () {\n      return props.cancelBtn;\n    });\n    var curValueArray = ref(pickerValue.value.map(function (item) {\n      return item;\n    }));\n    var realColumns = computed(function () {\n      if (typeof props.columns === \"function\") {\n        var data = props.columns(curValueArray.value);\n        return data;\n      }\n      return props.columns;\n    });\n    var lastTimeValueArray = _toConsumableArray(curValueArray.value);\n    var curIndexArray = pickerValue.value.map(function (item, index) {\n      return getIndexFromColumns(realColumns.value, item, index);\n    });\n    var lastTimeIndexArray = _toConsumableArray(curIndexArray);\n    var pickerItemInstanceArray = ref([]);\n    onMounted(function () {\n      pickerItemInstanceArray.value = useChildSlots(\"t-picker-item\").map(function (item) {\n        return item.component;\n      });\n    });\n    var handleConfirm = function handleConfirm(e) {\n      lastTimeValueArray = _toConsumableArray(curValueArray.value);\n      lastTimeIndexArray = _toConsumableArray(curIndexArray);\n      setPickerValue(curValueArray.value);\n      emitEvent(\"confirm\", curValueArray.value, {\n        index: curIndexArray\n      });\n    };\n    var handleCancel = function handleCancel(e) {\n      curValueArray.value = _toConsumableArray(lastTimeValueArray);\n      curIndexArray = _toConsumableArray(lastTimeIndexArray);\n      pickerItemInstanceArray.value.forEach(function (item, index) {\n        var _item$exposed;\n        (_item$exposed = item.exposed) === null || _item$exposed === void 0 ? void 0 : _item$exposed.setIndex(curIndexArray[index]);\n      });\n      emitEvent(\"cancel\", {\n        e: e\n      });\n    };\n    var handlePick = function handlePick(context2, column) {\n      if (curValueArray.value[column] !== context2.value) {\n        curValueArray.value[column] = context2.value;\n        curIndexArray[column] = context2.index;\n        if (typeof props.columns === \"function\") {\n          var result = props.columns(curValueArray.value);\n          result.forEach(function (item, index) {\n            if (!item.filter(function (ele) {\n              return ele.value === curValueArray.value[index];\n            }).length) {\n              var _item$;\n              curValueArray.value[index] = (_item$ = item[0]) === null || _item$ === void 0 ? void 0 : _item$.value;\n              curIndexArray[index] = 0;\n              nextTick(function () {\n                var _pickerItemInstanceAr, _pickerItemInstanceAr2;\n                (_pickerItemInstanceAr = pickerItemInstanceArray.value[index]) === null || _pickerItemInstanceAr === void 0 ? void 0 : (_pickerItemInstanceAr2 = _pickerItemInstanceAr.exposed) === null || _pickerItemInstanceAr2 === void 0 ? void 0 : _pickerItemInstanceAr2.setIndex(0);\n              });\n            } else {\n              nextTick(function () {\n                var _pickerItemInstanceAr3, _pickerItemInstanceAr4;\n                (_pickerItemInstanceAr3 = pickerItemInstanceArray.value[index]) === null || _pickerItemInstanceAr3 === void 0 ? void 0 : (_pickerItemInstanceAr4 = _pickerItemInstanceAr3.exposed) === null || _pickerItemInstanceAr4 === void 0 ? void 0 : _pickerItemInstanceAr4.setUpdateItems();\n              });\n            }\n          });\n        }\n        emitEvent(\"pick\", curValueArray.value, {\n          index: context2.index,\n          column: column\n        });\n      }\n    };\n    var setValues = function setValues(values) {\n      curValueArray.value = values;\n      setPickerValue(values);\n      nextTick(function () {\n        pickerItemInstanceArray.value.forEach(function (item, index) {\n          var _item$exposed2;\n          (_item$exposed2 = item.exposed) === null || _item$exposed2 === void 0 ? void 0 : _item$exposed2.setValue(values[index]);\n        });\n      });\n    };\n    useExpose({\n      setValues: setValues\n    });\n    return {\n      name: name,\n      pickerValue: pickerValue,\n      confirmButtonText: confirmButtonText,\n      cancelButtonText: cancelButtonText,\n      handleConfirm: handleConfirm,\n      handleCancel: handleCancel,\n      handlePick: handlePick,\n      realColumns: realColumns\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_button = resolveComponent(\"t-button\");\n  var _component_picker_item = resolveComponent(\"picker-item\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__toolbar\"))\n  }, [createVNode(_component_t_button, {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__cancel\")),\n    variant: \"text\",\n    onClick: _ctx.handleCancel\n  }, {\n    default: withCtx(function () {\n      return [createTextVNode(toDisplayString(_ctx.cancelButtonText), 1)];\n    }),\n    _: 1\n  }, 8, [\"class\", \"onClick\"]), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__title\"))\n  }, toDisplayString(_ctx.title), 3), createVNode(_component_t_button, {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__confirm\")),\n    variant: \"text\",\n    onClick: _ctx.handleConfirm\n  }, {\n    default: withCtx(function () {\n      return [createTextVNode(toDisplayString(_ctx.confirmButtonText), 1)];\n    }),\n    _: 1\n  }, 8, [\"class\", \"onClick\"])], 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__main\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"-item__group\"))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.realColumns, function (item, index) {\n    return openBlock(), createBlock(_component_picker_item, {\n      key: index,\n      options: item,\n      \"default-value\": _ctx.pickerValue[index],\n      \"render-label\": _ctx.renderLabel,\n      onPick: function onPick($event) {\n        return _ctx.handlePick($event, index);\n      }\n    }, null, 8, [\"options\", \"default-value\", \"render-label\", \"onPick\"]);\n  }), 128))], 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__mask\"))\n  }, null, 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__indicator\"))\n  }, null, 2)], 2)], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":"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","names":["prefix","config","name","getIndexFromColumns","columns","column","forEach","item","index","value","resultIndex","defineComponent","components","TButton","PickerItem","props","emits","setup","context","emitEvent","emit","toRefs","modelValue","useVModel","defaultValue","onChange","_useVModel2","pickerValue","setPickerValue","confirmButtonText","confirmBtn","cancelButtonText","cancelBtn","ref","map","computed","data","lastTimeValueArray","curValueArray","curIndexArray","onMounted","pickerItemInstanceArray","useChildSlots","component","handleConfirm","e","lastTimeIndexArray","handleCancel","setIndex","handlePick","result","ele","length","nextTick","_pickerItemInstanceAr","exposed","_pickerItemInstanceAr4","setUpdateItems","setValues","values","setValue","useExpose","realColumns","class","_ctx","_createElementVNode","_createVNode","_component_t_button","variant","onClick","_openBlock","_component_picker_item","key","options","onPick","$event"],"sources":["../../src/picker/picker.vue","../../src/picker/picker.vue?vue&type=template&id=44aa980c&lang.js"],"sourcesContent":["<template>\n  <div :class=\"`${name}`\">\n    <div :class=\"`${name}__toolbar`\">\n      <t-button :class=\"`${name}__cancel`\" variant=\"text\" @click=\"handleCancel\">{{ cancelButtonText }}</t-button>\n      <div :class=\"`${name}__title`\">{{ title }}</div>\n      <t-button :class=\"`${name}__confirm`\" variant=\"text\" @click=\"handleConfirm\">{{ confirmButtonText }}</t-button>\n    </div>\n    <div :class=\"`${name}__main`\">\n      <div :class=\"`${name}-item__group`\">\n        <picker-item\n          v-for=\"(item, index) in realColumns\"\n          :key=\"index\"\n          :options=\"item\"\n          :default-value=\"pickerValue[index]\"\n          :render-label=\"renderLabel\"\n          @pick=\"handlePick($event, index)\"\n        />\n      </div>\n      <div :class=\"`${name}__mask`\"></div>\n      <div :class=\"`${name}__indicator`\"></div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, nextTick, defineComponent, SetupContext, toRefs, onMounted, ref } from 'vue';\nimport config from '../config';\nimport PickerProps from './props';\nimport { PickerValue, PickerColumn, PickerColumnItem } from './type';\nimport TButton from '../button';\nimport { useEmitEvent, useVModel, useChildSlots, useExpose } from '../shared';\nimport PickerItem from './picker-item.vue';\n\nconst { prefix } = config;\nconst name = `${prefix}-picker`;\n// 通过value和columns，生成对应的indexArray\nconst getIndexFromColumns = (columns: PickerColumn[], value: PickerValue, column: number) => {\n  let resultIndex;\n  columns[column]?.forEach((item: PickerColumnItem, index: number) => {\n    if (item.value === value) {\n      resultIndex = index;\n    }\n  });\n  return resultIndex;\n};\nexport default defineComponent({\n  name,\n  components: { TButton, PickerItem },\n  props: PickerProps,\n  emits: ['change', 'cancel', 'pick', 'update:modelValue', 'update:value'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const { value, modelValue } = toRefs(props);\n    const [pickerValue, setPickerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const confirmButtonText = computed(() => props.confirmBtn);\n    const cancelButtonText = computed(() => props.cancelBtn);\n    const curValueArray = ref(pickerValue.value.map((item: PickerValue) => item));\n    const realColumns = computed(() => {\n      if (typeof props.columns === 'function') {\n        const data = props.columns(curValueArray.value);\n        return data;\n      }\n      return props.columns;\n    });\n    let lastTimeValueArray = [...curValueArray.value];\n    let curIndexArray = pickerValue.value.map((item: PickerValue, index: number) => {\n      return getIndexFromColumns(realColumns.value, item, index);\n    });\n    let lastTimeIndexArray = [...curIndexArray];\n    const pickerItemInstanceArray = ref([]) as any;\n    onMounted(() => {\n      // 获取pickerItem实例，用于更新每个item的value和index\n      pickerItemInstanceArray.value = useChildSlots('t-picker-item').map((item) => item.component);\n    });\n    const handleConfirm = (e: MouseEvent) => {\n      // 点击确认后，更新最近一次的picker状态\n      lastTimeValueArray = [...curValueArray.value];\n      lastTimeIndexArray = [...curIndexArray];\n      setPickerValue(curValueArray.value);\n      emitEvent('confirm', curValueArray.value, { index: curIndexArray });\n    };\n    const handleCancel = (e: MouseEvent) => {\n      // 点击取消后，重置最近一次的picker状态\n      curValueArray.value = [...lastTimeValueArray];\n      curIndexArray = [...lastTimeIndexArray];\n      pickerItemInstanceArray.value.forEach((item: any, index: number) => {\n        item.exposed?.setIndex(curIndexArray[index]);\n      });\n      emitEvent('cancel', { e });\n    };\n    const handlePick = (context: any, column: number) => {\n      if (curValueArray.value[column] !== context.value) {\n        curValueArray.value[column] = context.value;\n        curIndexArray[column] = context.index;\n        // 当使用cascade或者dateTimePicker时，需要更新子节点的value和index\n        if (typeof props.columns === 'function') {\n          const result = props.columns(curValueArray.value);\n          result.forEach((item: PickerColumnItem[], index: number) => {\n            if (!item.filter((ele: PickerColumnItem) => ele.value === curValueArray.value[index]).length) {\n              curValueArray.value[index] = item[0]?.value;\n              curIndexArray[index] = 0;\n              nextTick(() => {\n                pickerItemInstanceArray.value[index]?.exposed?.setIndex(0);\n              });\n            } else {\n              nextTick(() => {\n                pickerItemInstanceArray.value[index]?.exposed?.setUpdateItems();\n              });\n            }\n          });\n        }\n        emitEvent('pick', curValueArray.value, { index: context.index, column });\n      }\n    };\n\n    const setValues = (values: string[]) => {\n      curValueArray.value = values;\n      setPickerValue(values);\n      // 等columns更新完后，再更新value\n      nextTick(() => {\n        pickerItemInstanceArray.value.forEach((item: any, index: number) => {\n          item.exposed?.setValue(values[index]);\n        });\n      });\n    };\n\n    useExpose({\n      setValues,\n    });\n\n    return {\n      name,\n      pickerValue,\n      confirmButtonText,\n      cancelButtonText,\n      handleConfirm,\n      handleCancel,\n      handlePick,\n      realColumns,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"`${name}`\">\n    <div :class=\"`${name}__toolbar`\">\n      <t-button :class=\"`${name}__cancel`\" variant=\"text\" @click=\"handleCancel\">{{ cancelButtonText }}</t-button>\n      <div :class=\"`${name}__title`\">{{ title }}</div>\n      <t-button :class=\"`${name}__confirm`\" variant=\"text\" @click=\"handleConfirm\">{{ confirmButtonText }}</t-button>\n    </div>\n    <div :class=\"`${name}__main`\">\n      <div :class=\"`${name}-item__group`\">\n        <picker-item\n          v-for=\"(item, index) in realColumns\"\n          :key=\"index\"\n          :options=\"item\"\n          :default-value=\"pickerValue[index]\"\n          :render-label=\"renderLabel\"\n          @pick=\"handlePick($event, index)\"\n        />\n      </div>\n      <div :class=\"`${name}__mask`\"></div>\n      <div :class=\"`${name}__indicator`\"></div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, nextTick, defineComponent, SetupContext, toRefs, onMounted, ref } from 'vue';\nimport config from '../config';\nimport PickerProps from './props';\nimport { PickerValue, PickerColumn, PickerColumnItem } from './type';\nimport TButton from '../button';\nimport { useEmitEvent, useVModel, useChildSlots, useExpose } from '../shared';\nimport PickerItem from './picker-item.vue';\n\nconst { prefix } = config;\nconst name = `${prefix}-picker`;\n// 通过value和columns，生成对应的indexArray\nconst getIndexFromColumns = (columns: PickerColumn[], value: PickerValue, column: number) => {\n  let resultIndex;\n  columns[column]?.forEach((item: PickerColumnItem, index: number) => {\n    if (item.value === value) {\n      resultIndex = index;\n    }\n  });\n  return resultIndex;\n};\nexport default defineComponent({\n  name,\n  components: { TButton, PickerItem },\n  props: PickerProps,\n  emits: ['change', 'cancel', 'pick', 'update:modelValue', 'update:value'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const { value, modelValue } = toRefs(props);\n    const [pickerValue, setPickerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const confirmButtonText = computed(() => props.confirmBtn);\n    const cancelButtonText = computed(() => props.cancelBtn);\n    const curValueArray = ref(pickerValue.value.map((item: PickerValue) => item));\n    const realColumns = computed(() => {\n      if (typeof props.columns === 'function') {\n        const data = props.columns(curValueArray.value);\n        return data;\n      }\n      return props.columns;\n    });\n    let lastTimeValueArray = [...curValueArray.value];\n    let curIndexArray = pickerValue.value.map((item: PickerValue, index: number) => {\n      return getIndexFromColumns(realColumns.value, item, index);\n    });\n    let lastTimeIndexArray = [...curIndexArray];\n    const pickerItemInstanceArray = ref([]) as any;\n    onMounted(() => {\n      // 获取pickerItem实例，用于更新每个item的value和index\n      pickerItemInstanceArray.value = useChildSlots('t-picker-item').map((item) => item.component);\n    });\n    const handleConfirm = (e: MouseEvent) => {\n      // 点击确认后，更新最近一次的picker状态\n      lastTimeValueArray = [...curValueArray.value];\n      lastTimeIndexArray = [...curIndexArray];\n      setPickerValue(curValueArray.value);\n      emitEvent('confirm', curValueArray.value, { index: curIndexArray });\n    };\n    const handleCancel = (e: MouseEvent) => {\n      // 点击取消后，重置最近一次的picker状态\n      curValueArray.value = [...lastTimeValueArray];\n      curIndexArray = [...lastTimeIndexArray];\n      pickerItemInstanceArray.value.forEach((item: any, index: number) => {\n        item.exposed?.setIndex(curIndexArray[index]);\n      });\n      emitEvent('cancel', { e });\n    };\n    const handlePick = (context: any, column: number) => {\n      if (curValueArray.value[column] !== context.value) {\n        curValueArray.value[column] = context.value;\n        curIndexArray[column] = context.index;\n        // 当使用cascade或者dateTimePicker时，需要更新子节点的value和index\n        if (typeof props.columns === 'function') {\n          const result = props.columns(curValueArray.value);\n          result.forEach((item: PickerColumnItem[], index: number) => {\n            if (!item.filter((ele: PickerColumnItem) => ele.value === curValueArray.value[index]).length) {\n              curValueArray.value[index] = item[0]?.value;\n              curIndexArray[index] = 0;\n              nextTick(() => {\n                pickerItemInstanceArray.value[index]?.exposed?.setIndex(0);\n              });\n            } else {\n              nextTick(() => {\n                pickerItemInstanceArray.value[index]?.exposed?.setUpdateItems();\n              });\n            }\n          });\n        }\n        emitEvent('pick', curValueArray.value, { index: context.index, column });\n      }\n    };\n\n    const setValues = (values: string[]) => {\n      curValueArray.value = values;\n      setPickerValue(values);\n      // 等columns更新完后，再更新value\n      nextTick(() => {\n        pickerItemInstanceArray.value.forEach((item: any, index: number) => {\n          item.exposed?.setValue(values[index]);\n        });\n      });\n    };\n\n    useExpose({\n      setValues,\n    });\n\n    return {\n      name,\n      pickerValue,\n      confirmButtonText,\n      cancelButtonText,\n      handleConfirm,\n      handleCancel,\n      handlePick,\n      realColumns,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}