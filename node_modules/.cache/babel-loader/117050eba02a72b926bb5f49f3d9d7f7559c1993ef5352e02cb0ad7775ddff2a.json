{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { defineComponent, computed, getCurrentInstance, resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, toDisplayString, createCommentVNode } from 'vue';\nimport { useElementBounding } from '@vueuse/core';\nimport { BacktopIcon } from 'tdesign-icons-vue-next';\nimport '../shared/index.js';\nimport BackTopProps from './props.js';\nimport config from '../config.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { useEmitEvent } from '../shared/useEmitEvent/index.js';\nimport { renderTNode } from '../shared/render.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/typeof';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-back-top\");\nvar script = defineComponent({\n  name: name,\n  components: {\n    TNode: TNodeComponent,\n    TIconBackTop: BacktopIcon\n  },\n  props: BackTopProps,\n  setup: function setup(props, context) {\n    var emitEvent = useEmitEvent(props, context.emit);\n    var el = computed(function () {\n      return props.target ? props.target() : window.document.documentElement;\n    });\n    var _useElementBounding = useElementBounding(el),\n      top = _useElementBounding.top;\n    var classes = computed(function () {\n      var _ref;\n      return _ref = {}, _defineProperty(_ref, \"\".concat(name), true), _defineProperty(_ref, \"\".concat(prefix, \"-is-fixed\"), props.fixed), _defineProperty(_ref, \"\".concat(name, \"--\").concat(props.theme), true), _ref;\n    });\n    var internalInstance = getCurrentInstance();\n    var iconTNode = computed(function () {\n      var _context$slots;\n      if ((_context$slots = context.slots) !== null && _context$slots !== void 0 && _context$slots.icon || typeof props.icon === \"function\") {\n        return renderTNode(internalInstance, \"icon\");\n      }\n      return false;\n    });\n    var clickBackBtn = function clickBackBtn() {\n      window.document.documentElement.scrollTop += top.value;\n      emitEvent(\"to-top\");\n    };\n    return {\n      name: name,\n      classes: classes,\n      iconTNode: iconTNode,\n      el: el,\n      top: top,\n      clickBackBtn: clickBackBtn\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  var _component_t_icon_back_top = resolveComponent(\"t-icon-back-top\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.classes),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.clickBackBtn && _ctx.clickBackBtn.apply(_ctx, arguments);\n    })\n  }, [_ctx.iconTNode ? (openBlock(), createBlock(_component_t_node, {\n    key: 0,\n    content: _ctx.iconTNode\n  }, null, 8, [\"content\"])) : (openBlock(), createBlock(_component_t_icon_back_top, {\n    key: 1\n  })), _ctx.text ? (openBlock(), createElementBlock(\"span\", {\n    key: 2,\n    class: normalizeClass(\"\".concat(_ctx.name, \"__text\")),\n    style: {\n      \"min-width\": \"12px\",\n      \"max-width\": \"24px\",\n      width: \"auto\",\n      display: \"inline-block\"\n    }\n  }, toDisplayString(_ctx.text), 3)) : createCommentVNode(\"\", true)], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAChB,aAAeG,eAAgB;EAC7BD;EACAE,YAAY;IAAEC;IAAOC,YAAa,EAAbA;GAAa;EAClCC,KAAO;EACPC,OAAMD,sBAAOE,OAAuB;IAClC,IAAMC,SAAY,gBAAaH,KAAO,UAAQI,IAAI;IAC5C,SAAKC,SAAS,YAAM;MACxB,OAAOL,MAAMM,MAAS,SAAMA,MAAO,KAAIC,OAAOC,QAAS;IACzD,CAAC;IACD,IAAgBC,yCAAmBC,EAAE;MAA7BC;IACF,cAAUN,SAAS,YAAM;MAAA;MACtB,kDACDV,IAAS,QACTF,wDAAoBO,KAAM,yCAC1BL,IAAS,qBAAMiB,KAAU;IAEjC,CAAC;IAED,IAAMC,mBAAmBC,kBAAmB;IACtC,gBAAYT,SAAS,YAAM;MAAA;MAC/B,IAAI,0BAAQU,KAAO,2CAAfC,cAAeC,SAAQ,OAAOjB,MAAMiB,SAAS,UAAY;QACpD,mBAAYJ,kBAAkB,MAAM;MAC7C;MACO;IACT,CAAC;IAED,IAAMK,eAAe,SAAfA,eAAqB;MAClBX,gBAASY,eAAgB,cAAaR,GAAI;MACjDR,UAAU,QAAQ;KACpB;IAEO;MACLR;MACAyB;MACAC;MACAX;MACAC;MACAO;KACF;EACF;AACF,CAAC;;;;oBC/DC,qBASK;IATCI,qBAAO,MAAOF;IAAGG;aAAOC,KAAYN;IAAA;MAC1BM,IAAS,2BAAvBC,YAA+CC;;IAArBC,SAASH,IAAS;4CAC5CC,WAAyB;IAAAG;EAAA,KAEjBJ,IAAI,sBADZK,mBAKA;;IAHGP,gCAAUE,KAAI7B;IACdmC,OAAO;MAAoF;MAAA;MAAAC;MAAAC;IAAA;qBACxFR,IAAG","names":["prefix","config","name","defineComponent","components","TNode","TIconBackTop","props","setup","context","emitEvent","emit","computed","target","window","document","useElementBounding","el","top","theme","internalInstance","getCurrentInstance","slots","_context$slots","icon","clickBackBtn","documentElement","classes","iconTNode","class","onClick","_ctx","_createBlock","_component_t_node","content","key","_createElementBlock","style","width","display"],"sources":["../../src/back-top/back-top.vue","../../src/back-top/back-top.vue?vue&type=template&id=5fe7dc9e&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classes\" @click=\"clickBackBtn\">\n    <t-node v-if=\"iconTNode\" :content=\"iconTNode\" />\n    <t-icon-back-top v-else />\n    <span\n      v-if=\"text\"\n      :class=\"`${name}__text`\"\n      :style=\"{ 'min-width': '12px', 'max-width': '24px', width: 'auto', display: 'inline-block' }\"\n      >{{ text }}</span\n    >\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, SetupContext, getCurrentInstance, h } from 'vue';\nimport { useElementBounding } from '@vueuse/core';\nimport { BacktopIcon as TIconBackTop } from 'tdesign-icons-vue-next';\n\nimport { useEmitEvent, renderTNode, TNode } from '../shared';\nimport BackTopProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-back-top`;\nexport default defineComponent({\n  name,\n  components: { TNode, TIconBackTop },\n  props: BackTopProps,\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const el = computed(() => {\n      return props.target ? props.target() : window.document.documentElement;\n    });\n    const { top } = useElementBounding(el);\n    const classes = computed(() => {\n      return {\n        [`${name}`]: true,\n        [`${prefix}-is-fixed`]: props.fixed,\n        [`${name}--${props.theme}`]: true,\n      };\n    });\n\n    const internalInstance = getCurrentInstance();\n    const iconTNode = computed(() => {\n      if (context.slots?.icon || typeof props.icon === 'function') {\n        return renderTNode(internalInstance, 'icon');\n      }\n      return false;\n    });\n\n    const clickBackBtn = () => {\n      window.document.documentElement.scrollTop += top.value;\n      emitEvent('to-top');\n    };\n\n    return {\n      name,\n      classes,\n      iconTNode,\n      el,\n      top,\n      clickBackBtn,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"classes\" @click=\"clickBackBtn\">\n    <t-node v-if=\"iconTNode\" :content=\"iconTNode\" />\n    <t-icon-back-top v-else />\n    <span\n      v-if=\"text\"\n      :class=\"`${name}__text`\"\n      :style=\"{ 'min-width': '12px', 'max-width': '24px', width: 'auto', display: 'inline-block' }\"\n      >{{ text }}</span\n    >\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, SetupContext, getCurrentInstance, h } from 'vue';\nimport { useElementBounding } from '@vueuse/core';\nimport { BacktopIcon as TIconBackTop } from 'tdesign-icons-vue-next';\n\nimport { useEmitEvent, renderTNode, TNode } from '../shared';\nimport BackTopProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-back-top`;\nexport default defineComponent({\n  name,\n  components: { TNode, TIconBackTop },\n  props: BackTopProps,\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const el = computed(() => {\n      return props.target ? props.target() : window.document.documentElement;\n    });\n    const { top } = useElementBounding(el);\n    const classes = computed(() => {\n      return {\n        [`${name}`]: true,\n        [`${prefix}-is-fixed`]: props.fixed,\n        [`${name}--${props.theme}`]: true,\n      };\n    });\n\n    const internalInstance = getCurrentInstance();\n    const iconTNode = computed(() => {\n      if (context.slots?.icon || typeof props.icon === 'function') {\n        return renderTNode(internalInstance, 'icon');\n      }\n      return false;\n    });\n\n    const clickBackBtn = () => {\n      window.document.documentElement.scrollTop += top.value;\n      emitEvent('to-top');\n    };\n\n    return {\n      name,\n      classes,\n      iconTNode,\n      el,\n      top,\n      clickBackBtn,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}