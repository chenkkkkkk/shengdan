{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { defineComponent, toRefs, computed, provide, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport props from './props.js';\nimport config from '../config.js';\nimport '../shared/index.js';\nimport { useVModel } from '../shared/useVModel/index.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/render.js';\nimport '@babel/runtime/helpers/typeof';\nimport 'lodash/camelCase';\nimport '../shared/render-tnode.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/defineProperty';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-collapse\");\nvar script = defineComponent({\n  name: name,\n  props: props,\n  emits: [\"update:value\", \"change\"],\n  setup: function setup(props2, context) {\n    var _toRefs = toRefs(props2),\n      value = _toRefs.value,\n      modelValue = _toRefs.modelValue;\n    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange),\n      _useVModel2 = _slicedToArray(_useVModel, 2),\n      activeValue = _useVModel2[0],\n      setActiveValue = _useVModel2[1];\n    var calcActiveValues = function calcActiveValues(activeValues, panelValue, expandMutex) {\n      var hit = activeValues.indexOf(panelValue);\n      if (hit > -1) {\n        return activeValues.filter(function (item) {\n          return item !== panelValue;\n        });\n      }\n      return expandMutex ? [panelValue] : activeValues.concat(panelValue);\n    };\n    var onPanelChange = function onPanelChange(value2) {\n      if (Array.isArray(activeValue.value)) {\n        var val = calcActiveValues(activeValue.value, value2, props2.expandMutex);\n        setActiveValue(val);\n      }\n    };\n    var disabled = computed(function () {\n      return props2.disabled;\n    });\n    var expandIcon = computed(function () {\n      return props2.expandIcon;\n    });\n    provide(\"collapse\", {\n      activeValue: activeValue,\n      disabled: disabled,\n      expandIcon: expandIcon,\n      onPanelChange: onPanelChange,\n      defaultExpandAll: props2.defaultExpandAll\n    });\n    return {\n      prefix: prefix,\n      classPrefix: name,\n      activeValue: activeValue\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.classPrefix)\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAChB,aAAeG,eAAgB;EAC7BD;EACAE;EACAC,OAAO,CAAC,gBAAgB,QAAQ;EAChCC,OAAMF,uBAAOG,OAAuB;IAClC,IAA8BC,iBAAOJ,MAAK;MAAlCK;MAAOC,UAAW,WAAXA,UAAW;IACpB,iBAAgCC,UAAUF,OAAOC,UAAYN,SAAMQ,YAAcR,SAAMS,QAAQ;MAAAC;MAA9FC,WAAa;MAAAC,cAAc;IAClC,IAAMC,gBAAmB,YAAnBA,gBAAmB,CAACC,YAAqB,cAAiBC,WAAyB;MACjF,UAAMD,YAAa,SAAQE,UAAU;MAE3C,IAAIC,MAAM,CAAI;QACZ,OAAOH,YAAa,QAAO,UAACI;UAAA,OAASA,SAASF,UAAU;SAAA;MAC1D;MAEA,OAAOD,cAAc,CAACC,UAAU,CAAI,gBAAaG,OAAOH,UAAU;KACpE;IAEM,oBAAgB,SAAhBI,cAAiBf,MAA2B;MAChD,IAAIgB,KAAM,SAAQV,WAAY,MAAK,CAAG;QACpC,IAAMW,MAAMT,gBAAiB,aAAYR,KAAOA,UAAOL,OAAMe,WAAW;QAExEH,eAAeU,GAAG;MACpB;KACF;IAEA,IAAMC,QAAW,YAAS;MAAA,OAAMvB,OAAMuB,QAAQ;KAAA;IAC9C,IAAMC,UAAa,YAAS;MAAA,OAAMxB,OAAMwB,UAAU;KAAA;IAElDC,QAAyB,UAAY;MACnCd;MACAY;MACAC;MACAJ;MACAM,kBAAkB1B,MAAM;IAC1B,CAAC;IAEM;MACLJ;MACA+B,WAAa;MACbhB;KACF;EACF;AACF,CAAC;;oBChEC,qBAEK;IAFCiB,qBAAO,MAAWD;MACtBE,WAAYC","names":["prefix","config","name","defineComponent","props","emits","setup","context","toRefs","value","modelValue","useVModel","defaultValue","onChange","_useVModel2","activeValue","setActiveValue","calcActiveValues","activeValues","expandMutex","panelValue","hit","item","concat","onPanelChange","Array","val","disabled","expandIcon","provide","defaultExpandAll","classPrefix","class","_renderSlot","_ctx"],"sources":["../../src/collapse/collapse.vue","../../src/collapse/collapse.vue?vue&type=template&id=2b8dacf6&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classPrefix\">\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { toRefs, provide, SetupContext, defineComponent, computed, Ref, ComputedRef } from 'vue';\nimport props from './props';\nimport config from '../config';\nimport { useVModel } from '../shared';\nimport { CollapseValue, TdCollapseProps } from './type';\n\nexport interface CollapseProvide {\n  activeValue: Ref<CollapseValue | undefined>;\n  disabled: ComputedRef<boolean>;\n  expandIcon: ComputedRef<TdCollapseProps['expandIcon']>;\n  onPanelChange: (name: string | number) => void;\n  defaultExpandAll: boolean;\n}\n\nconst { prefix } = config;\nconst name = `${prefix}-collapse`;\nexport default defineComponent({\n  name,\n  props,\n  emits: ['update:value', 'change'],\n  setup(props, context: SetupContext) {\n    const { value, modelValue } = toRefs(props);\n    const [activeValue, setActiveValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const calcActiveValues = (activeValues: any[], panelValue: any, expandMutex: boolean) => {\n      const hit = activeValues.indexOf(panelValue);\n\n      if (hit > -1) {\n        return activeValues.filter((item) => item !== panelValue);\n      }\n\n      return expandMutex ? [panelValue] : activeValues.concat(panelValue);\n    };\n\n    const onPanelChange = (value: string | number) => {\n      if (Array.isArray(activeValue.value)) {\n        const val = calcActiveValues(activeValue.value, value, props.expandMutex);\n\n        setActiveValue(val);\n      }\n    };\n\n    const disabled = computed(() => props.disabled);\n    const expandIcon = computed(() => props.expandIcon);\n\n    provide<CollapseProvide>('collapse', {\n      activeValue,\n      disabled,\n      expandIcon,\n      onPanelChange,\n      defaultExpandAll: props.defaultExpandAll,\n    });\n\n    return {\n      prefix,\n      classPrefix: name,\n      activeValue,\n    };\n  },\n});\n</script>\n\n<style></style>\n","<template>\n  <div :class=\"classPrefix\">\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { toRefs, provide, SetupContext, defineComponent, computed, Ref, ComputedRef } from 'vue';\nimport props from './props';\nimport config from '../config';\nimport { useVModel } from '../shared';\nimport { CollapseValue, TdCollapseProps } from './type';\n\nexport interface CollapseProvide {\n  activeValue: Ref<CollapseValue | undefined>;\n  disabled: ComputedRef<boolean>;\n  expandIcon: ComputedRef<TdCollapseProps['expandIcon']>;\n  onPanelChange: (name: string | number) => void;\n  defaultExpandAll: boolean;\n}\n\nconst { prefix } = config;\nconst name = `${prefix}-collapse`;\nexport default defineComponent({\n  name,\n  props,\n  emits: ['update:value', 'change'],\n  setup(props, context: SetupContext) {\n    const { value, modelValue } = toRefs(props);\n    const [activeValue, setActiveValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const calcActiveValues = (activeValues: any[], panelValue: any, expandMutex: boolean) => {\n      const hit = activeValues.indexOf(panelValue);\n\n      if (hit > -1) {\n        return activeValues.filter((item) => item !== panelValue);\n      }\n\n      return expandMutex ? [panelValue] : activeValues.concat(panelValue);\n    };\n\n    const onPanelChange = (value: string | number) => {\n      if (Array.isArray(activeValue.value)) {\n        const val = calcActiveValues(activeValue.value, value, props.expandMutex);\n\n        setActiveValue(val);\n      }\n    };\n\n    const disabled = computed(() => props.disabled);\n    const expandIcon = computed(() => props.expandIcon);\n\n    provide<CollapseProvide>('collapse', {\n      activeValue,\n      disabled,\n      expandIcon,\n      onPanelChange,\n      defaultExpandAll: props.defaultExpandAll,\n    });\n\n    return {\n      prefix,\n      classPrefix: name,\n      activeValue,\n    };\n  },\n});\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}