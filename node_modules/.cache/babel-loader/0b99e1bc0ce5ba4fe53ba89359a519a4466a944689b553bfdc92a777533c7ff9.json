{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { defineComponent, computed, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, renderSlot, vShow } from 'vue';\nimport config from '../config.js';\nimport props from './props.js';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-overlay\");\nvar script = defineComponent({\n  name: name,\n  props: props,\n  setup: function setup(props2) {\n    var classes = computed(function () {\n      var _ref;\n      return _ref = {}, _defineProperty(_ref, \"\".concat(name), true), _defineProperty(_ref, \"\".concat(name, \"--active\"), props2.visible), _defineProperty(_ref, \"\".concat(name, \"--transparent\"), props2.transparent), _ref;\n    });\n    var rootStyles = computed(function () {\n      return props2.customStyle || props2.zIndex || props2.duration ? (props2.customStyle && \"\".concat(props2.customStyle, \";\")) + (props2.zIndex && \"z-index:\".concat(props2.zIndex, \";\")) + (props2.duration && \"transition-duration:\".concat(props2.duration, \"ms;\")) : void 0;\n    });\n    var handleTouchMove = function handleTouchMove(e) {\n      if (props2.preventScrollThrough) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n    var handleClick = function handleClick(e) {\n      var _props2$onClick;\n      (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 ? void 0 : _props2$onClick.call(props2, {\n        e: e\n      });\n    };\n    return {\n      name: name,\n      classes: classes,\n      rootStyles: rootStyles,\n      handleClick: handleClick,\n      handleTouchMove: handleTouchMove\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.name\n  }, {\n    default: withCtx(function () {\n      return [withDirectives(createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.classes),\n        style: normalizeStyle(_ctx.rootStyles),\n        onClick: _cache[0] || (_cache[0] = function () {\n          return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n        }),\n        onTouchmove: _cache[1] || (_cache[1] = function () {\n          return _ctx.handleTouchMove && _ctx.handleTouchMove.apply(_ctx, arguments);\n        })\n      }, [renderSlot(_ctx.$slots, \"default\")], 38), [[vShow, _ctx.visible]])];\n    }),\n    _: 3\n  }, 8, [\"name\"]);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;AAaA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAEhB,aAAeG,eAAgB;EAC7BD;EACAE;EACAC,sBAAMD,MAAO;IACL,cAAUE,SAAS;MAAA;MAAA,kDACnBJ,IAAS,0CACTA,MAAiBE,mBAAM,SACvBF,wCAAsBE,wBAAM;IAAA,CAChC;IAEF,IAAMG,UAAa,YAAS;MAAA,OAC1BH,OAAMI,WAAeJ,WAAMK,UAAUL,MAAM,aACtCA,OAAMI,WAAe,IAAGJ,iBAAMI,WAC9BJ,kBAAMK,UAAqBL,yBAAMK,iBACjCL,MAAM,2CAAmCA,OAAMM,QAChD;KACN;IAEM,sBAAkB,SAAlBC,gBAAmBC,CAAkB;MACzC,IAAIR,OAAMS,oBAAsB;QAC9BD,EAAEE,eAAgB;QAClBF,EAAEG,cAAe;MACnB;KACF;IACM,kBAAc,SAAdC,YAAeJ,CAAkB;MAAA;MACrCR,yBAAM,cAANA,yEAAM,EAAU;QAAEQ;MAAE,CAAC;KACvB;IAEO;MACLV;MACAe;MACAV;MACAS;MACAL;KACF;EACF;AACF,CAAC;;sBCnDCO,WAIY;IAJChB,IAAM,OAAIA;EAAA;qBACrB;MAAA,OAEK,gBAFLiB,mBAEK;QAFkBC,qBAAO,MAAOH;QAAGI,qBAAO,MAAUd;QAAGe;iBAAOC,KAAWP;SAAA;QAAGQ;iBAAWD,KAAeZ;QAAA;UACzGc,WAAOF,sCADI,OAAOG","names":["prefix","config","name","defineComponent","props","setup","computed","rootStyles","customStyle","zIndex","duration","handleTouchMove","e","preventScrollThrough","stopPropagation","preventDefault","handleClick","classes","_createBlock","_createElementVNode","class","style","onClick","_ctx","onTouchmove","_renderSlot","visible"],"sources":["../../src/overlay/overlay.vue","../../src/overlay/overlay.vue?vue&type=template&id=6ee67b7b&lang.js"],"sourcesContent":["<template>\n  <Transition :name=\"name\">\n    <div v-show=\"visible\" :class=\"classes\" :style=\"rootStyles\" @click=\"handleClick\" @touchmove=\"handleTouchMove\">\n      <slot />\n    </div>\n  </Transition>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue';\nimport config from '../config';\nimport props from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-overlay`;\n\nexport default defineComponent({\n  name,\n  props,\n  setup(props) {\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${name}--active`]: props.visible,\n      [`${name}--transparent`]: props.transparent,\n    }));\n\n    const rootStyles = computed(() =>\n      props.customStyle || props.zIndex || props.duration\n        ? (props.customStyle && `${props.customStyle};`) +\n          (props.zIndex && `z-index:${props.zIndex};`) +\n          (props.duration && `transition-duration:${props.duration}ms;`)\n        : undefined,\n    );\n\n    const handleTouchMove = (e: TouchEvent) => {\n      if (props.preventScrollThrough) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n    const handleClick = (e: MouseEvent) => {\n      props.onClick?.({ e });\n    };\n\n    return {\n      name,\n      classes,\n      rootStyles,\n      handleClick,\n      handleTouchMove,\n    };\n  },\n});\n</script>\n","<template>\n  <Transition :name=\"name\">\n    <div v-show=\"visible\" :class=\"classes\" :style=\"rootStyles\" @click=\"handleClick\" @touchmove=\"handleTouchMove\">\n      <slot />\n    </div>\n  </Transition>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue';\nimport config from '../config';\nimport props from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-overlay`;\n\nexport default defineComponent({\n  name,\n  props,\n  setup(props) {\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${name}--active`]: props.visible,\n      [`${name}--transparent`]: props.transparent,\n    }));\n\n    const rootStyles = computed(() =>\n      props.customStyle || props.zIndex || props.duration\n        ? (props.customStyle && `${props.customStyle};`) +\n          (props.zIndex && `z-index:${props.zIndex};`) +\n          (props.duration && `transition-duration:${props.duration}ms;`)\n        : undefined,\n    );\n\n    const handleTouchMove = (e: TouchEvent) => {\n      if (props.preventScrollThrough) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n    const handleClick = (e: MouseEvent) => {\n      props.onClick?.({ e });\n    };\n\n    return {\n      name,\n      classes,\n      rootStyles,\n      handleClick,\n      handleTouchMove,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}