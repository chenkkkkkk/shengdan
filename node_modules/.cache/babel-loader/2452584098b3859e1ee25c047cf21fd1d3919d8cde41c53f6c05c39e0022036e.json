{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { defineComponent, ref, openBlock, createElementBlock, normalizeClass, Fragment, renderList, renderSlot, createElementVNode, normalizeStyle, toDisplayString } from 'vue';\nimport config from '../config.js';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-action-sheet\");\nvar script = defineComponent({\n  props: {\n    items: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: [\"selected\"],\n  setup: function setup(props, context) {\n    var handleSelected = function handleSelected(index) {\n      context.emit(\"selected\", index);\n    };\n    return {\n      name: ref(name),\n      handleSelected: handleSelected\n    };\n  }\n});\nvar _hoisted_1 = [\"disabled\", \"onClick\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__menu\"))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.items, function (item, index) {\n    return openBlock(), createElementBlock(\"button\", {\n      key: index,\n      class: normalizeClass(\"\".concat(_ctx.name, \"__cell\")),\n      disabled: item.disabled,\n      onClick: function onClick($event) {\n        return _ctx.handleSelected(index);\n      }\n    }, [renderSlot(_ctx.$slots, \"cell\", {\n      item: item\n    }, function () {\n      return [createElementVNode(\"div\", {\n        class: normalizeClass(\"\".concat(_ctx.name, \"__cell-text\")),\n        style: normalizeStyle({\n          color: item.color\n        })\n      }, toDisplayString(item.label), 7)];\n    })], 10, _hoisted_1);\n  }), 128))], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;AAsBA,IAAQA,SAAWC,OAAXD;AAER,IAAME,OAAUF;AAEhB,aAAeG,eAAgB;EAC7BC,KAAO;IACLC,KAAO;MACLC,IAAM;MACNC,QAAU;IACZ;GACF;EACAC,OAAO,CAAC,UAAU;EAClBC,OAAML,sBAAOM,OAAuB;IAC5B,qBAAiB,SAAjBC,eAAkBC,KAAkB;MAChCF,aAAK,YAAYE,KAAK;KAChC;IAEO;MACLV,MAAMW,IAAIX,IAAI;MACdS;KACF;EACF;AACF,CAAC;;;oBC3CC,qBAYK;IAZCG,sBAAUC,eAAIb;OAClBc,mCAUQ,WATkB,6BAAhB,gBAAMJ,KAAK;sBADrB,qBAUQ;MARLK,GAAK;MACLH,gCAAUC,KAAIb;MACdgB,UAAUC,IAAK;MACfC,OAAK;QAAA,OAAEL,IAAc,gBAACH,KAAK;MAAA;QAE5BS,WAEMN,IAFa;MAAAI;OAAnB;MAAA,OAEM,CADJG,mBAAuF;QAAjFR,gCAAUC,KAAIb;QAAgBqB,OAAKC;UAAAC,KAAW,OAAKA;;OAAY,sBAAK","names":["prefix","config","name","defineComponent","props","items","type","required","emits","setup","context","handleSelected","index","ref","class","_ctx","_openBlock","key","disabled","item","onClick","_renderSlot","_createElementVNode","style","_normalizeStyle","color"],"sources":["../../src/action-sheet/menu-list.vue","../../src/action-sheet/menu-list.vue?vue&type=template&id=54824633&lang.js"],"sourcesContent":["<template>\n  <div :class=\"`${name}__menu`\">\n    <button\n      v-for=\"(item, index) in items\"\n      :key=\"index\"\n      :class=\"`${name}__cell`\"\n      :disabled=\"item.disabled\"\n      @click=\"handleSelected(index)\"\n    >\n      <slot name=\"cell\" :item=\"item\">\n        <div :class=\"`${name}__cell-text`\" :style=\"{ color: item.color }\">{{ item.label }}</div>\n      </slot>\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, SetupContext, defineComponent, PropType } from 'vue';\n\nimport config from '../config';\nimport { ActionSheetItem } from './type';\n\nconst { prefix } = config;\n\nconst name = `${prefix}-action-sheet`;\n\nexport default defineComponent({\n  props: {\n    items: {\n      type: Array as PropType<ActionSheetItem[]>,\n      required: true,\n    },\n  },\n  emits: ['selected'],\n  setup(props, context: SetupContext) {\n    const handleSelected = (index: number) => {\n      context.emit('selected', index);\n    };\n\n    return {\n      name: ref(name),\n      handleSelected,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"`${name}__menu`\">\n    <button\n      v-for=\"(item, index) in items\"\n      :key=\"index\"\n      :class=\"`${name}__cell`\"\n      :disabled=\"item.disabled\"\n      @click=\"handleSelected(index)\"\n    >\n      <slot name=\"cell\" :item=\"item\">\n        <div :class=\"`${name}__cell-text`\" :style=\"{ color: item.color }\">{{ item.label }}</div>\n      </slot>\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, SetupContext, defineComponent, PropType } from 'vue';\n\nimport config from '../config';\nimport { ActionSheetItem } from './type';\n\nconst { prefix } = config;\n\nconst name = `${prefix}-action-sheet`;\n\nexport default defineComponent({\n  props: {\n    items: {\n      type: Array as PropType<ActionSheetItem[]>,\n      required: true,\n    },\n  },\n  emits: ['selected'],\n  setup(props, context: SetupContext) {\n    const handleSelected = (index: number) => {\n      context.emit('selected', index);\n    };\n\n    return {\n      name: ref(name),\n      handleSelected,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}