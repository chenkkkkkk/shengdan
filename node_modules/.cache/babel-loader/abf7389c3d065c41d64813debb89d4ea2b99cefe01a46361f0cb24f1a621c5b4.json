{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { h, defineComponent, getCurrentInstance, computed, toRefs, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, createElementVNode } from 'vue';\nimport { LoadingIcon } from 'tdesign-icons-vue-next';\nimport '../shared/index.js';\nimport ClASSNAMES from '../shared/constants.js';\nimport ButtonProps from './props.js';\nimport config from '../config.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { useEmitEvent } from '../shared/useEmitEvent/index.js';\nimport { renderContent, renderTNode } from '../shared/render.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/typeof';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-button\");\nvar loadingContent = h(LoadingIcon);\nvar script = defineComponent({\n  name: name,\n  components: {\n    TNode: TNodeComponent\n  },\n  props: ButtonProps,\n  emits: [\"click\"],\n  setup: function setup(props, context) {\n    var emitEvent = useEmitEvent(props, context.emit);\n    var internalInstance = getCurrentInstance();\n    var buttonClass = computed(function () {\n      var _ref;\n      return [\"\".concat(name), props.size ? ClASSNAMES.SIZE[props.size] : \"\", \"\".concat(name, \"--\").concat(props.variant), (_ref = {}, _defineProperty(_ref, \"\".concat(name, \"--\").concat(props.theme), props.theme), _defineProperty(_ref, \"\".concat(name, \"--shape-\").concat(props.shape), props.shape), _defineProperty(_ref, \"\".concat(name, \"--ghost\"), props.ghost), _defineProperty(_ref, \"\".concat(prefix, \"-is-block\"), props.block), _defineProperty(_ref, ClASSNAMES.STATUS.disabled, props.disabled), _defineProperty(_ref, ClASSNAMES.STATUS.loading, props.loading), _ref)];\n    });\n    var buttonContent = computed(function () {\n      return renderContent(internalInstance, \"default\", \"content\");\n    });\n    var iconContent = computed(function () {\n      return props.loading ? loadingContent : renderTNode(internalInstance, \"icon\");\n    });\n    var onClick = function onClick(e) {\n      if (!props.loading && !props.disabled) {\n        emitEvent(\"click\", e);\n      } else {\n        e.stopPropagation();\n      }\n    };\n    return _objectSpread(_objectSpread({\n      name: name\n    }, toRefs(props)), {}, {\n      buttonContent: buttonContent,\n      iconContent: iconContent,\n      buttonClass: buttonClass,\n      onClick: onClick\n    });\n  }\n});\nvar _hoisted_1 = [\"disabled\", \"aria-disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  return openBlock(), createElementBlock(\"button\", {\n    class: normalizeClass(_ctx.buttonClass),\n    disabled: _ctx.disabled,\n    role: \"button\",\n    \"aria-disabled\": _ctx.disabled,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.onClick && _ctx.onClick.apply(_ctx, arguments);\n    })\n  }, [createVNode(_component_t_node, {\n    content: _ctx.iconContent\n  }, null, 8, [\"content\"]), createElementVNode(\"span\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__text\"))\n  }, [createVNode(_component_t_node, {\n    content: _ctx.buttonContent\n  }, null, 8, [\"content\"])], 2)], 10, _hoisted_1);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAEhB,IAAMG,iBAAiBC,EAAEC,WAAW;AAEpC,aAAeC,eAAgB;EAC7BJ;EACAK,YAAY;IAAEC,KAAM,EAANA;GAAM;EACpBC,KAAO;EACPC,OAAO,CAAC,OAAO;EACfC,OAAMF,sBAAOG,OAAuB;IAClC,IAAMC,SAAY,gBAAaJ,KAAO,UAAQK,IAAI;IAClD,IAAMC,mBAAmBC,kBAAmB;IACtC,kBAAcC,SAAS;MAAA;MAAA,OAAM,CAC9Bf,eACHO,OAAM,QAAOS,UAAW,MAAKT,MAAMU,IAAQ,QACxCjB,6BAASO,KAAM,uDAEZP,IAAS,qBAAMkB,QAAUX,KAAM,yCAC/BP,IAAe,2BAAMmB,QAAUZ,KAAM,yCACrCP,MAAgBO,iBAAM,yCACtBT,sBAAoBS,KAAM,OAC7BS,mCAAWI,MAAO,WAAWb,KAAM,UACnCS,mCAAWI,MAAO,UAAUb,KAAM,SAEtC;KAAA;IACD,IAAMc,gBAAgBN,QAAS;MAAA,OAAMO,cAAcT,gBAAkB,aAAW,SAAS,CAAC;KAAA;IACpF,kBAAcE,SAAS;MAAA,OAAOR,MAAMgB,UAAUtB,cAAiB,eAAYY,gBAAkB,QAAM,CAAE;KAAA;IACrG,cAAU,SAAVW,QAAWC,CAAa;MAC5B,IAAI,CAAClB,MAAMgB,OAAW,KAAChB,MAAMmB,QAAU;QACrCf,UAAU,SAASc,CAAC;MACtB,CAAO;QACLA,EAAEE,eAAgB;MACpB;KACF;IACO;MACL3B;KACG4B,SAAOrB,KAAK;MACfc;MACAQ;MACAC;MACAN;IAAA;EAEJ;AACF,CAAC;;;;oBC5DC,qBAKQ;IALCO,qBAAO,MAAWD;IAAGJ,UAAUM,IAAQ;IAAEC,IAAK;IAAU,iBAAeD,IAAQ;IAAGR;aAAOQ,KAAOR;IAAA;MACvGU,YAAuCC;IAA9BC,OAAS,OAAWP;EAAA,0BAC7BQ,mBAEM;IAFCN,sBAAUC,eAAIhC;MACnBkC,YAAyCC;IAAhCC,OAAS,OAAaf;EAAA","names":["prefix","config","name","loadingContent","h","LoadingIcon","defineComponent","components","TNode","props","emits","setup","context","emitEvent","emit","internalInstance","getCurrentInstance","computed","CLASSNAMES","size","theme","shape","STATUS","buttonContent","renderContent","loading","onClick","e","disabled","stopPropagation","toRefs","iconContent","buttonClass","class","_ctx","role","_createVNode","_component_t_node","content","_createElementVNode"],"sources":["../../src/button/button.vue","../../src/button/button.vue?vue&type=template&id=22bbac14&lang.js"],"sourcesContent":["<template>\n  <button :class=\"buttonClass\" :disabled=\"disabled\" role=\"button\" :aria-disabled=\"disabled\" @click=\"onClick\">\n    <t-node :content=\"iconContent\"></t-node>\n    <span :class=\"`${name}__text`\">\n      <t-node :content=\"buttonContent\"></t-node>\n    </span>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { computed, toRefs, defineComponent, getCurrentInstance, h, SetupContext } from 'vue';\nimport { LoadingIcon } from 'tdesign-icons-vue-next';\nimport { useEmitEvent, renderContent, renderTNode, TNode } from '../shared';\nimport CLASSNAMES from '../shared/constants';\nimport ButtonProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-button`;\n\nconst loadingContent = h(LoadingIcon);\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: ButtonProps,\n  emits: ['click'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const internalInstance = getCurrentInstance();\n    const buttonClass = computed(() => [\n      `${name}`,\n      props.size ? CLASSNAMES.SIZE[props.size] : '',\n      `${name}--${props.variant}`,\n      {\n        [`${name}--${props.theme}`]: props.theme,\n        [`${name}--shape-${props.shape}`]: props.shape,\n        [`${name}--ghost`]: props.ghost,\n        [`${prefix}-is-block`]: props.block,\n        [CLASSNAMES.STATUS.disabled]: props.disabled,\n        [CLASSNAMES.STATUS.loading]: props.loading,\n      },\n    ]);\n    const buttonContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n    const iconContent = computed(() => (props.loading ? loadingContent : renderTNode(internalInstance, 'icon')));\n    const onClick = (e: Event) => {\n      if (!props.loading && !props.disabled) {\n        emitEvent('click', e);\n      } else {\n        e.stopPropagation();\n      }\n    };\n    return {\n      name,\n      ...toRefs(props),\n      buttonContent,\n      iconContent,\n      buttonClass,\n      onClick,\n    };\n  },\n});\n</script>\n","<template>\n  <button :class=\"buttonClass\" :disabled=\"disabled\" role=\"button\" :aria-disabled=\"disabled\" @click=\"onClick\">\n    <t-node :content=\"iconContent\"></t-node>\n    <span :class=\"`${name}__text`\">\n      <t-node :content=\"buttonContent\"></t-node>\n    </span>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { computed, toRefs, defineComponent, getCurrentInstance, h, SetupContext } from 'vue';\nimport { LoadingIcon } from 'tdesign-icons-vue-next';\nimport { useEmitEvent, renderContent, renderTNode, TNode } from '../shared';\nimport CLASSNAMES from '../shared/constants';\nimport ButtonProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-button`;\n\nconst loadingContent = h(LoadingIcon);\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: ButtonProps,\n  emits: ['click'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const internalInstance = getCurrentInstance();\n    const buttonClass = computed(() => [\n      `${name}`,\n      props.size ? CLASSNAMES.SIZE[props.size] : '',\n      `${name}--${props.variant}`,\n      {\n        [`${name}--${props.theme}`]: props.theme,\n        [`${name}--shape-${props.shape}`]: props.shape,\n        [`${name}--ghost`]: props.ghost,\n        [`${prefix}-is-block`]: props.block,\n        [CLASSNAMES.STATUS.disabled]: props.disabled,\n        [CLASSNAMES.STATUS.loading]: props.loading,\n      },\n    ]);\n    const buttonContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n    const iconContent = computed(() => (props.loading ? loadingContent : renderTNode(internalInstance, 'icon')));\n    const onClick = (e: Event) => {\n      if (!props.loading && !props.disabled) {\n        emitEvent('click', e);\n      } else {\n        e.stopPropagation();\n      }\n    };\n    return {\n      name,\n      ...toRefs(props),\n      buttonContent,\n      iconContent,\n      buttonClass,\n      onClick,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}