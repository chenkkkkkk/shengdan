{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { ref, defineComponent, h, createApp, nextTick } from 'vue';\nimport script from './dialog.js';\nimport './style/css.js';\nimport '../button/index.js';\nimport '../button/button.js';\nimport 'tdesign-icons-vue-next';\nimport '../shared/index.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../config.js';\nimport '../shared/render.js';\nimport '@babel/runtime/helpers/typeof';\nimport 'lodash/camelCase';\nimport '../shared/render-tnode.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '../button/props.js';\nimport '../button/type.js';\nimport '../popup/index.js';\nimport '../popup/popup.js';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '../popup/props.js';\nimport '../overlay/index.js';\nimport '../overlay/overlay.js';\nimport '../overlay/props.js';\nimport '../popup/type.js';\nimport './props.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar DialogPropsDefault = {\n  title: \"\\u6E29\\u99A8\\u63D0\\u9192\",\n  content: \"\",\n  type: \"\",\n  confirmBtn: \"\\u786E\\u8BA4\",\n  cancelBtn: \"\\u53D6\\u6D88\",\n  visible: false,\n  zIndex: 2500,\n  showOverlay: true,\n  width: \"320px\",\n  closeOnOverlayClick: false\n};\nvar instance;\nfunction create(props) {\n  var visible = ref(false);\n  var root = document.createElement(\"div\");\n  document.body.appendChild(root);\n  var propsObject = _objectSpread(_objectSpread({}, DialogPropsDefault), typeof props === \"string\" ? {\n    content: props\n  } : props);\n  if (instance) {\n    instance.clear();\n  }\n  instance = defineComponent({\n    render: function render() {\n      return h(script, _objectSpread(_objectSpread({}, propsObject), {}, {\n        visible: visible.value,\n        onConfirm: function onConfirm(context) {\n          if (typeof propsObject.onConfirm === \"function\") {\n            propsObject.onConfirm(context);\n          }\n          visible.value = false;\n        },\n        onCancel: function onCancel(context) {\n          if (typeof propsObject.onCancel === \"function\") {\n            propsObject.onCancel(context);\n          }\n          visible.value = false;\n        },\n        onOverlayClick: function onOverlayClick(context) {\n          if (typeof propsObject.onOverlayClick === \"function\") {\n            propsObject.onOverlayClick(context);\n          }\n          visible.value = false;\n        },\n        onClose: function onClose(context) {\n          root.remove();\n          if (typeof propsObject.onClose === \"function\") {\n            propsObject.onClose(context);\n          }\n        }\n      }));\n    }\n  });\n  instance.clear = function () {\n    root.remove();\n  };\n  createApp(instance).mount(root);\n  nextTick(function () {\n    visible.value = true;\n  });\n  return instance;\n}\n[\"show\", \"alert\", \"confirm\"].forEach(function (type) {\n  script[type] = function (options) {\n    var props = {\n      content: \"\",\n      type: type\n    };\n    if (typeof options === \"string\") {\n      props.content = options;\n    } else {\n      props = _objectSpread(_objectSpread({}, props), options);\n    }\n    return create(props);\n  };\n});\nscript.install = function (app) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  app.component(name || script.name, script);\n  app.config.globalProperties.$dialog = script;\n  app.provide(\"$dialog\", script);\n};\nvar DialogPlugin = script;\nexport { DialogPlugin, DialogPropsDefault, DialogPlugin as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,IAAMA,kBAAqB;EAChCC,KAAO;EACPC,OAAS;EACTC,IAAM;EACNC,UAAY;EACZC,SAAW;EACXC,OAAS;EACTC,MAAQ;EACRC,WAAa;EACbC,KAAO;EACPC,mBAAqB;AACvB;AAEA,IAAIC;AAEJ,SAASC,OAAOC,KAAyD;EACjE,cAAUC,IAAI,KAAK;EACnB,WAAOC,QAAS,eAAc,KAAK;EAChCA,cAAKC,YAAYC,IAAI;EAE9B,IAAMC,WAAc,mCACflB,qBACC,OAAOa,UAAU,WAAW;IAAEX,SAASW;GAAU,SACvD;EAEA,IAAIF,QAAU;IACZA,SAASQ,KAAM;EAEjB;EAGAR,WAAWS,eAAgB;IACzBC,QAAQ;MAAA,OAENC,EAAEC,MAAQ,kCACLL;QACHZ,SAASA,OAAQ;QACjBkB,WAAW,SAACC,iBAA+B;UACrC,WAAOP,WAAY,eAAc,UAAY;YAC/CA,YAAYM,UAAUC,OAAO;UAC/B;UACAnB,QAAQoB,KAAQ;SAClB;QACAC,UAAU,SAACF,gBAA+B;UACpC,WAAOP,WAAY,cAAa,UAAY;YAC9CA,YAAYS,SAASF,OAAO;UAC9B;UACAnB,QAAQoB,KAAQ;SAClB;QACAE,gBAAgB,SAACH,sBAA+B;UAC1C,WAAOP,WAAY,oBAAmB,UAAY;YACpDA,YAAYU,eAAeH,OAAO;UACpC;UACAnB,QAAQoB,KAAQ;SAClB;QACAG,SAAS,SAACJ,eAAgC;UACxCR,KAAKa,MAAO;UACR,WAAOZ,WAAY,aAAY,UAAY;YAC7CA,YAAYW,QAAQJ,OAAO;UAC7B;QACF;OACD;IAAA;EACL,CAAC;EAEDd,SAASQ,QAAQ,YAAM;IACrBF,KAAKa,MAAO;GACd;EAGUC,kBAAQ,CAAE,OAAMd,IAAI;EAE9Be,SAAS,YAAM;IACb1B,QAAQoB,KAAQ;EAClB,CAAC;EAEM;AACT;AAEC,CAAC,QAAQ,OAAS,WAAS,CAAmB,SAAQ,UAACvB,IAA2B;EAC1EoB,eAAQ,UAACU,OAA6C;IAC3D,IAAIpB,KAAa;MAAEX,OAAS;MAAIC,IAAK,EAALA;KAAK;IAEjC,WAAO8B,YAAY,QAAU;MAC/BpB,MAAMX,OAAU;IAClB,CAAO;MACLW,QAAaA,qCAAO,CAAGoB,SAAQ;IACjC;IAEA,OAAOrB,OAAOC,KAAK;GACrB;AACF,CAAC;AAEDU,OAAOW,OAAU,aAACC,GAAU,EAAc;EAAA,IAAdC,2EAAO,EAAO;EACxCD,IAAIE,SAAU,SAAQd,MAAO,OAAMA,MAAM;EAGrCY,WAAOG,iBAAiBC,OAAU;EAClCJ,YAAQ,WAAWZ,MAAM;AAC/B;AAWO,IAAMiB,YAA2D","names":["DialogPropsDefault","title","content","type","confirmBtn","cancelBtn","visible","zIndex","showOverlay","width","closeOnOverlayClick","instance","create","props","ref","document","appendChild","root","propsObject","clear","defineComponent","render","h","Dialog","onConfirm","context","value","onCancel","onOverlayClick","onClose","remove","createApp","nextTick","options","install","app","name","component","globalProperties","$dialog","DialogPlugin"],"sources":["../../src/dialog/index.ts"],"sourcesContent":["import { createApp, defineComponent, h, VNode, App, ref, DefineComponent, nextTick } from 'vue';\n\nimport Dialog from './dialog.vue';\nimport { WithInstallType } from '../shared';\nimport { DialogCloseContext, TdDialogProps } from './type';\n\nimport './style';\n\nexport type DialogType = 'alert' | 'confirm' | 'show';\n\nexport const DialogPropsDefault = {\n  title: '温馨提醒',\n  content: '',\n  type: '',\n  confirmBtn: '确认',\n  cancelBtn: '取消',\n  visible: false,\n  zIndex: 2500,\n  showOverlay: true,\n  width: '320px',\n  closeOnOverlayClick: false,\n};\n\nlet instance: DefineComponent;\n\nfunction create(props: Partial<TdDialogProps> | string): DefineComponent {\n  const visible = ref(false);\n  const root = document.createElement('div');\n  document.body.appendChild(root);\n\n  const propsObject = {\n    ...DialogPropsDefault,\n    ...(typeof props === 'string' ? { content: props } : props),\n  };\n\n  if (instance) {\n    instance.clear();\n    // instance = null;\n  }\n\n  // eslint-disable-next-line vue/one-component-per-file\n  instance = defineComponent({\n    render: (): VNode =>\n      // @ts-ignore\n      h(Dialog, {\n        ...propsObject,\n        visible: visible.value,\n        onConfirm: (context: { e: MouseEvent }) => {\n          if (typeof propsObject.onConfirm === 'function') {\n            propsObject.onConfirm(context);\n          }\n          visible.value = false;\n        },\n        onCancel: (context: { e: MouseEvent }) => {\n          if (typeof propsObject.onCancel === 'function') {\n            propsObject.onCancel(context);\n          }\n          visible.value = false;\n        },\n        onOverlayClick: (context: { e: MouseEvent }) => {\n          if (typeof propsObject.onOverlayClick === 'function') {\n            propsObject.onOverlayClick(context);\n          }\n          visible.value = false;\n        },\n        onClose: (context: DialogCloseContext) => {\n          root.remove();\n          if (typeof propsObject.onClose === 'function') {\n            propsObject.onClose(context);\n          }\n        },\n      }),\n  });\n\n  instance.clear = () => {\n    root.remove();\n  };\n\n  // eslint-disable-next-line vue/one-component-per-file\n  createApp(instance).mount(root);\n\n  nextTick(() => {\n    visible.value = true;\n  });\n\n  return instance;\n}\n\n(['show', 'alert', 'confirm'] as DialogType[]).forEach((type: DialogType): void => {\n  Dialog[type] = (options: Partial<TdDialogProps> | string) => {\n    let props: any = { content: '', type };\n\n    if (typeof options === 'string') {\n      props.content = options;\n    } else {\n      props = { ...props, ...options };\n    }\n\n    return create(props);\n  };\n});\n\nDialog.install = (app: App, name = '') => {\n  app.component(name || Dialog.name, Dialog);\n\n  // 添加插件入口\n  app.config.globalProperties.$dialog = Dialog;\n  app.provide('$dialog', Dialog);\n};\n\ntype DialogApi = {\n  /** 通用对话框 */\n  show: (options: Partial<TdDialogProps> | string) => void;\n  /** 基础对话框 */\n  alert: (options: Partial<TdDialogProps> | string) => void;\n  /** 选择对话框 */\n  confirm: (options: Partial<TdDialogProps> | string) => void;\n};\n\nexport const DialogPlugin: WithInstallType<typeof Dialog> & DialogApi = Dialog as any;\nexport default DialogPlugin;\n\ndeclare module '@vue/runtime-core' {\n  // Bind to `this` keyword\n  export interface ComponentCustomProperties {\n    $dialog: DialogApi;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}