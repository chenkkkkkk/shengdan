{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { ref } from 'vue';\nvar isElement = function isElement(node) {\n  var ELEMENT_NODE_TYPE = 1;\n  return node.tagName !== \"HTML\" && node.tagName !== \"BODY\" && node.nodeType === ELEMENT_NODE_TYPE;\n};\nfunction useTouch() {\n  var startY = ref(0);\n  var deltaY = ref(0);\n  var start = function start(event) {\n    startY.value = event.touches[0].clientY;\n    deltaY.value = 0;\n  };\n  var move = function move(event) {\n    var touch = event.touches[0];\n    deltaY.value = touch.clientY - startY.value;\n  };\n  return {\n    startY: startY,\n    deltaY: deltaY,\n    start: start,\n    move: move\n  };\n}\nvar easeDistance = function easeDistance(distance, pullDistance) {\n  if (distance > pullDistance) {\n    if (distance < pullDistance * 2) {\n      distance = pullDistance + (distance - pullDistance) / 2;\n    } else {\n      distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4;\n    }\n  }\n  return Math.round(distance);\n};\nvar getScrollParent = function getScrollParent(node) {\n  var res = node;\n  while (res && isElement(res)) {\n    if (/auto|scroll/i.test(window.getComputedStyle(res).overflowY)) {\n      return res;\n    }\n    res = res.parentNode;\n  }\n};\nvar isReachTop = function isReachTop(e) {\n  var scrollParent = getScrollParent(e.target);\n  return !scrollParent || !scrollParent.scrollTop;\n};\nexport { easeDistance, getScrollParent, isReachTop, useTouch };","map":{"version":3,"mappings":";;;;;;;AAEA,IAAMA,YAAY,SAAZA,UAAaC,IAAkB;EACnC,IAAMC,iBAAoB;EAC1B,OAAOD,KAAKE,OAAY,eAAUF,KAAKE,OAAY,eAAUF,KAAKG,QAAa;AACjF;AAEO,SAASC,QAAW;EACnB,aAASC,IAAI,CAAC;EACd,aAASA,IAAI,CAAC;EACd,YAAQ,SAARC,MAASC,KAAsB;IAC5BC,eAAQD,KAAM,SAAQ,CAAG;IAChCE,OAAOC,KAAQ;GACjB;EACM,WAAO,SAAPC,KAAQJ,KAAsB;IAC5B,YAAQA,MAAMK,OAAQ;IACrBH,eAAQI,KAAM,WAAUL,MAAO;GACxC;EACO;IACLA;IACAC;IACAH;IACAK;GACF;AACF;AAEa,mBAAe,SAAfG,aAAgBC,UAAkBC,YAAyB;EACtE,IAAID,WAAWC,YAAc;IACvB,eAAWA,eAAe,CAAG;MACpBD,2BAAgBA,WAAWC,YAAgB;IACxD,CAAO;MACLD,WAAWC,YAAe,UAAOD,QAAW,kBAAe,CAAK;IAClE;EACF;EACO,YAAKE,MAAMF,QAAQ;AAC5B;IAEaG,kBAAkB,SAAlBA,gBAAmBlB,IAAkB;EAChD,IAAImB,GAAM;EACH,cAAOpB,SAAU,IAAG,CAAG;IAC5B,IAAI,eAAeqB,IAAK,QAAOC,iBAAiBF,GAAG,EAAEG,SAAS,CAAG;MACxD;IACT;IACAH,MAAMA,GAAI;EACZ;AACF;IAEaI,aAAa,SAAbA,WAAcC,CAAkB;EACrC,mBAAeN,eAAgB,GAAEO,MAAiB;EACjD,QAACC,YAAgB,KAACA,YAAa;AACxC","names":["isElement","node","ELEMENT_NODE_TYPE","tagName","nodeType","useTouch","ref","start","event","startY","deltaY","value","move","touches","touch","easeDistance","distance","pullDistance","round","getScrollParent","res","test","getComputedStyle","overflowY","isReachTop","e","target","scrollParent"],"sources":["../../src/pull-down-refresh/useTouch.ts"],"sourcesContent":["import { ref } from 'vue';\n\nconst isElement = (node: Element) => {\n  const ELEMENT_NODE_TYPE = 1;\n  return node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === ELEMENT_NODE_TYPE;\n};\n\nexport function useTouch() {\n  const startY = ref(0);\n  const deltaY = ref(0);\n  const start = (event: TouchEvent) => {\n    startY.value = event.touches[0].clientY;\n    deltaY.value = 0;\n  };\n  const move = (event: TouchEvent) => {\n    const touch = event.touches[0];\n    deltaY.value = touch.clientY - startY.value;\n  };\n  return {\n    startY,\n    deltaY,\n    start,\n    move,\n  };\n}\n// 缓动函数\nexport const easeDistance = (distance: number, pullDistance: number) => {\n  if (distance > pullDistance) {\n    if (distance < pullDistance * 2) {\n      distance = pullDistance + (distance - pullDistance) / 2;\n    } else {\n      distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4;\n    }\n  }\n  return Math.round(distance);\n};\n// 获取最新的可滚动父元素\nexport const getScrollParent = (node: Element) => {\n  let res = node;\n  while (res && isElement(res)) {\n    if (/auto|scroll/i.test(window.getComputedStyle(res).overflowY)) {\n      return res;\n    }\n    res = res.parentNode as Element;\n  }\n};\n// 确保可滚动的父元素此时处于未滚动状态\nexport const isReachTop = (e: TouchEvent) => {\n  const scrollParent = getScrollParent(e.target as Element);\n  return !scrollParent || !scrollParent.scrollTop;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}