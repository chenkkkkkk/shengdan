{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { defineComponent, getCurrentInstance, inject, computed, h, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createVNode } from 'vue';\nimport { CloseIcon, CheckIcon } from 'tdesign-icons-vue-next';\nimport StepItemProps from './step-item-props.js';\nimport '../shared/index.js';\nimport config from '../config.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { renderTNode } from '../shared/render.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/typeof';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-step\");\nvar script = defineComponent({\n  name: name,\n  components: {\n    TNode: TNodeComponent\n  },\n  props: StepItemProps,\n  setup: function setup(props) {\n    var internalInstance = getCurrentInstance();\n    var proxy = internalInstance.proxy;\n    var stepsProvide = inject(\"stepsProvide\", void 0);\n    stepsProvide.relation(proxy);\n    var index = computed(function () {\n      return stepsProvide.state.children.indexOf(proxy);\n    });\n    var theme = computed(function () {\n      return stepsProvide.theme;\n    });\n    var dot = computed(function () {\n      return theme.value === \"dot\" && stepsProvide.layout === \"vertical\";\n    });\n    var iconNode = computed(function () {\n      return renderTNode(internalInstance, \"icon\");\n    });\n    var iconContent = computed(function () {\n      if (dot.value) {\n        return \"\";\n      }\n      if (props.status === \"error\") {\n        return h(CloseIcon);\n      }\n      if (index.value < current.value && readonly.value) {\n        return h(CheckIcon);\n      }\n      if (typeof iconNode.value === \"boolean\") {\n        return iconNode.value ? index.value + 1 : \"\";\n      }\n      return iconNode.value;\n    });\n    var titleContent = computed(function () {\n      return renderTNode(internalInstance, \"title\");\n    });\n    var descContent = computed(function () {\n      return renderTNode(internalInstance, \"content\");\n    });\n    var extraContent = computed(function () {\n      return renderTNode(internalInstance, \"extra\");\n    });\n    var current = computed(function () {\n      return stepsProvide.current.value || stepsProvide.defaultCurrent || 0;\n    });\n    var stepsStatus = computed(function () {\n      return stepsProvide.status;\n    });\n    var readonly = computed(function () {\n      return stepsProvide.readonly;\n    });\n    var rootClassName = computed(function () {\n      return [name, _defineProperty({}, \"\".concat(name, \"--default\"), !readonly.value), _defineProperty({}, \"\".concat(name, \"--\").concat(currentStatus.value), currentStatus.value)];\n    });\n    var innerClassName = computed(function () {\n      if (typeof iconNode.value === \"boolean\") {\n        return [\"\".concat(name, \"__inner\")];\n      }\n      return [\"\".concat(name, \"__inner\"), \"\".concat(name, \"__inner__icon\")];\n    });\n    var iconClassName = computed(function () {\n      return [\"\".concat(name, \"-icon__number\"), _defineProperty({}, \"\".concat(name, \"-icon__dot\"), dot.value)];\n    });\n    var currentStatus = computed(function () {\n      var status = props.status;\n      if (status !== \"default\") return status;\n      if (index.value < current.value) return \"finish\";\n      if (index.value === current.value) return \"process\";\n      return \"\";\n    });\n    var onClickIcon = function onClickIcon(e) {\n      if (!readonly.value && !dot.value) {\n        stepsProvide.onClickItem(index.value, current.value, e);\n      }\n    };\n    return {\n      dot: dot,\n      name: name,\n      theme: theme,\n      index: index,\n      current: current,\n      readonly: readonly,\n      iconNode: iconNode,\n      stepsStatus: stepsStatus,\n      descContent: descContent,\n      iconContent: iconContent,\n      onClickIcon: onClickIcon,\n      titleContent: titleContent,\n      extraContent: extraContent,\n      rootClassName: rootClassName,\n      currentStatus: currentStatus,\n      iconClassName: iconClassName,\n      innerClassName: innerClassName\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.rootClassName)\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.innerClassName),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.onClickIcon && _ctx.onClickIcon.apply(_ctx, arguments);\n    })\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"-icon\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.iconClassName)\n  }, [createVNode(_component_t_node, {\n    content: _ctx.iconContent\n  }, null, 8, [\"content\"])], 2)], 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"-content\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"-title\"))\n  }, [createVNode(_component_t_node, {\n    content: _ctx.titleContent\n  }, null, 8, [\"content\"])], 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"-description\"))\n  }, [createVNode(_component_t_node, {\n    content: _ctx.descContent\n  }, null, 8, [\"content\"])], 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"-extra\"))\n  }, [createVNode(_component_t_node, {\n    content: _ctx.extraContent\n  }, null, 8, [\"content\"])], 2)], 2)], 2)], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":"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","names":["prefix","config","name","defineComponent","components","TNode","props","setup","internalInstance","getCurrentInstance","proxy","inject","stepsProvide","relation","computed","state","children","theme","value","layout","iconNode","renderTNode","dot","status","h","TCloseIcon","index","current","readonly","TCheckIcon","titleContent","descContent","extraContent","defaultCurrent","stepsStatus","currentStatus","iconClassName","onClickIcon","e","onClickItem","iconContent","rootClassName","innerClassName","class","_createElementVNode","onClick","_ctx","_createVNode","_component_t_node","content"],"sources":["../../src/steps/step-item.vue","../../src/steps/step-item.vue?vue&type=template&id=2839f478&lang.js"],"sourcesContent":["<template>\n  <div :class=\"rootClassName\">\n    <div :class=\"innerClassName\" @click=\"onClickIcon\">\n      <div :class=\"`${name}-icon`\">\n        <div :class=\"iconClassName\">\n          <t-node :content=\"iconContent\"></t-node>\n        </div>\n      </div>\n      <div :class=\"`${name}-content`\">\n        <div :class=\"`${name}-title`\">\n          <t-node :content=\"titleContent\"></t-node>\n        </div>\n        <div :class=\"`${name}-description`\">\n          <t-node :content=\"descContent\"></t-node>\n        </div>\n        <div :class=\"`${name}-extra`\">\n          <t-node :content=\"extraContent\"></t-node>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, inject, defineComponent, getCurrentInstance, ComponentInternalInstance, h } from 'vue';\nimport { CloseIcon as TCloseIcon, CheckIcon as TCheckIcon } from 'tdesign-icons-vue-next';\n\nimport StepItemProps from './step-item-props';\nimport { renderTNode, TNode } from '../shared';\n\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-step`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: StepItemProps,\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const { proxy } = internalInstance as ComponentInternalInstance;\n    const stepsProvide: any = inject('stepsProvide', undefined);\n    stepsProvide.relation(proxy);\n\n    const index = computed(() => stepsProvide.state.children.indexOf(proxy));\n    const theme = computed(() => stepsProvide.theme);\n    const dot = computed(() => theme.value === 'dot' && stepsProvide.layout === 'vertical');\n    const iconNode = computed(() => renderTNode(internalInstance, 'icon'));\n\n    const iconContent = computed(() => {\n      if (dot.value) {\n        return '';\n      }\n      if (props.status === 'error') {\n        return h(TCloseIcon);\n      }\n      if (index.value < current.value && readonly.value) {\n        return h(TCheckIcon);\n      }\n      if (typeof iconNode.value === 'boolean') {\n        return iconNode.value ? index.value + 1 : '';\n      }\n      return iconNode.value;\n    });\n    const titleContent = computed(() => renderTNode(internalInstance, 'title'));\n    const descContent = computed(() => renderTNode(internalInstance, 'content'));\n    const extraContent = computed(() => renderTNode(internalInstance, 'extra'));\n\n    const current = computed(() => stepsProvide.current.value || stepsProvide.defaultCurrent || 0);\n\n    const stepsStatus = computed(() => stepsProvide.status);\n    const readonly = computed(() => stepsProvide.readonly);\n\n    const rootClassName = computed(() => [\n      name,\n      { [`${name}--default`]: !readonly.value },\n      { [`${name}--${currentStatus.value}`]: currentStatus.value },\n    ]);\n    const innerClassName = computed(() => {\n      if (typeof iconNode.value === 'boolean') {\n        return [`${name}__inner`];\n      }\n      return [`${name}__inner`, `${name}__inner__icon`];\n    });\n    const iconClassName = computed(() => [`${name}-icon__number`, { [`${name}-icon__dot`]: dot.value }]);\n\n    const currentStatus = computed(() => {\n      const { status } = props;\n      if (status !== 'default') return status;\n      if (index.value < current.value) return 'finish';\n      if (index.value === current.value) return 'process';\n      return '';\n    });\n\n    const onClickIcon = (e: MouseEvent) => {\n      if (!readonly.value && !dot.value) {\n        stepsProvide.onClickItem(index.value, current.value, e);\n      }\n    };\n\n    return {\n      dot,\n      name,\n      theme,\n      index,\n      current,\n      readonly,\n      iconNode,\n      stepsStatus,\n      descContent,\n      iconContent,\n      onClickIcon,\n      titleContent,\n      extraContent,\n      rootClassName,\n      currentStatus,\n      iconClassName,\n      innerClassName,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"rootClassName\">\n    <div :class=\"innerClassName\" @click=\"onClickIcon\">\n      <div :class=\"`${name}-icon`\">\n        <div :class=\"iconClassName\">\n          <t-node :content=\"iconContent\"></t-node>\n        </div>\n      </div>\n      <div :class=\"`${name}-content`\">\n        <div :class=\"`${name}-title`\">\n          <t-node :content=\"titleContent\"></t-node>\n        </div>\n        <div :class=\"`${name}-description`\">\n          <t-node :content=\"descContent\"></t-node>\n        </div>\n        <div :class=\"`${name}-extra`\">\n          <t-node :content=\"extraContent\"></t-node>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, inject, defineComponent, getCurrentInstance, ComponentInternalInstance, h } from 'vue';\nimport { CloseIcon as TCloseIcon, CheckIcon as TCheckIcon } from 'tdesign-icons-vue-next';\n\nimport StepItemProps from './step-item-props';\nimport { renderTNode, TNode } from '../shared';\n\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-step`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: StepItemProps,\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const { proxy } = internalInstance as ComponentInternalInstance;\n    const stepsProvide: any = inject('stepsProvide', undefined);\n    stepsProvide.relation(proxy);\n\n    const index = computed(() => stepsProvide.state.children.indexOf(proxy));\n    const theme = computed(() => stepsProvide.theme);\n    const dot = computed(() => theme.value === 'dot' && stepsProvide.layout === 'vertical');\n    const iconNode = computed(() => renderTNode(internalInstance, 'icon'));\n\n    const iconContent = computed(() => {\n      if (dot.value) {\n        return '';\n      }\n      if (props.status === 'error') {\n        return h(TCloseIcon);\n      }\n      if (index.value < current.value && readonly.value) {\n        return h(TCheckIcon);\n      }\n      if (typeof iconNode.value === 'boolean') {\n        return iconNode.value ? index.value + 1 : '';\n      }\n      return iconNode.value;\n    });\n    const titleContent = computed(() => renderTNode(internalInstance, 'title'));\n    const descContent = computed(() => renderTNode(internalInstance, 'content'));\n    const extraContent = computed(() => renderTNode(internalInstance, 'extra'));\n\n    const current = computed(() => stepsProvide.current.value || stepsProvide.defaultCurrent || 0);\n\n    const stepsStatus = computed(() => stepsProvide.status);\n    const readonly = computed(() => stepsProvide.readonly);\n\n    const rootClassName = computed(() => [\n      name,\n      { [`${name}--default`]: !readonly.value },\n      { [`${name}--${currentStatus.value}`]: currentStatus.value },\n    ]);\n    const innerClassName = computed(() => {\n      if (typeof iconNode.value === 'boolean') {\n        return [`${name}__inner`];\n      }\n      return [`${name}__inner`, `${name}__inner__icon`];\n    });\n    const iconClassName = computed(() => [`${name}-icon__number`, { [`${name}-icon__dot`]: dot.value }]);\n\n    const currentStatus = computed(() => {\n      const { status } = props;\n      if (status !== 'default') return status;\n      if (index.value < current.value) return 'finish';\n      if (index.value === current.value) return 'process';\n      return '';\n    });\n\n    const onClickIcon = (e: MouseEvent) => {\n      if (!readonly.value && !dot.value) {\n        stepsProvide.onClickItem(index.value, current.value, e);\n      }\n    };\n\n    return {\n      dot,\n      name,\n      theme,\n      index,\n      current,\n      readonly,\n      iconNode,\n      stepsStatus,\n      descContent,\n      iconContent,\n      onClickIcon,\n      titleContent,\n      extraContent,\n      rootClassName,\n      currentStatus,\n      iconClassName,\n      innerClassName,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}