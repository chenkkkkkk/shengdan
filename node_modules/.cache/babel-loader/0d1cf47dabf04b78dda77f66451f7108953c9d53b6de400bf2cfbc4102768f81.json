{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { defineComponent, inject, getCurrentInstance, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport config from '../config.js';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-swiper-item\");\nvar script = defineComponent({\n  name: name,\n  setup: function setup() {\n    var parent = inject(\"parent\");\n    parent.relation(getCurrentInstance());\n    return {\n      name: name\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.name)\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;AASA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAEhB,aAAeG,eAAgB;EAC7BD;EACAE,KAAQ;IACA,aAASC,OAAO,QAAQ;IACvBC,gBAASC,oBAAoB;IAC7B;MACLL;KACF;EACF;AACF,CAAC;;oBCpBC,qBAEK;IAFCM,qBAAO,MAAIN;MACfO,WAAOC","names":["prefix","config","name","defineComponent","setup","inject","parent","getCurrentInstance","class","_renderSlot","_ctx"],"sources":["../../src/swiper/swiper-item.vue","../../src/swiper/swiper-item.vue?vue&type=template&id=cbfd4418&lang.js"],"sourcesContent":["<template>\n  <div :class=\"name\">\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance, inject } from 'vue';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-swiper-item`;\n\nexport default defineComponent({\n  name,\n  setup() {\n    const parent = inject('parent') as any;\n    parent.relation(getCurrentInstance());\n    return {\n      name,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"name\">\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance, inject } from 'vue';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-swiper-item`;\n\nexport default defineComponent({\n  name,\n  setup() {\n    const parent = inject('parent') as any;\n    parent.relation(getCurrentInstance());\n    return {\n      name,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}