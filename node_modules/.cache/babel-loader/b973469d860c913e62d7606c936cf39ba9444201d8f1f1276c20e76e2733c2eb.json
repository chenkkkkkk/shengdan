{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nvar RadioProps = {\n  align: {\n    type: String,\n    default: \"left\",\n    validator: function validator(val) {\n      return [\"left\", \"right\"].includes(val);\n    }\n  },\n  checked: {\n    type: Boolean,\n    default: void 0\n  },\n  modelValue: {\n    type: Boolean,\n    default: void 0\n  },\n  defaultChecked: Boolean,\n  content: {\n    type: [String, Function]\n  },\n  contentDisabled: Boolean,\n  default: {\n    type: [String, Function]\n  },\n  disabled: {\n    type: Boolean,\n    default: void 0\n  },\n  icon: {\n    type: [String, Array],\n    default: \"fill-circle\"\n  },\n  label: {\n    type: [String, Function]\n  },\n  name: {\n    type: String,\n    default: \"\"\n  },\n  value: {\n    type: [String, Number, Boolean],\n    default: false\n  },\n  onChange: Function\n};\nexport { RadioProps as default };","map":{"version":3,"mappings":";;;;;;AASA,iBAAe;EAEbA,KAAO;IACLC,IAAM;IACNC,OAAS;IACTC,8BAAUC,GAAqC;MAC7C,OAAO,CAAC,QAAQ,OAAO,EAAEC,SAASD,GAAI;IACxC;GACF;EAEAE,OAAS;IACPL,IAAM;IACNC,OAAS;GACX;EACAK,UAAY;IACVN,IAAM;IACNC,OAAS;GACX;EAEAM,cAAgB;EAEhBC,OAAS;IACPR,MAAM,CAACS,QAAQC,QAAQ;GACzB;EAEAC,eAAiB;EAEjBV,OAAS;IACPD,MAAM,CAACS,QAAQC,QAAQ;GACzB;EAEAE,QAAU;IACRZ,IAAM;IACNC,OAAS;GACX;EAEAY,IAAM;IACJb,MAAM,CAACS,QAAQK,KAAK;IACpBb,OAAS;GACX;EAEAc,KAAO;IACLf,MAAM,CAACS,QAAQC,QAAQ;GACzB;EAEAM,IAAM;IACJhB,IAAM;IACNC,OAAS;GACX;EAEAgB,KAAO;IACLjB,IAAM,GAACS,MAAQ,UAAQS,OAAO;IAC9BjB,OAAS;GACX;EAEAkB,QAAU;AACZ","names":["align","type","default","validator","val","includes","checked","modelValue","defaultChecked","content","String","Function","contentDisabled","disabled","icon","Array","label","name","value","Boolean","onChange"],"sources":["../../src/radio/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdRadioProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 复选框和内容相对位置 */\n  align: {\n    type: String as PropType<TdRadioProps['align']>,\n    default: 'left' as TdRadioProps['align'],\n    validator(val: TdRadioProps['align']): boolean {\n      return ['left', 'right'].includes(val!);\n    },\n  },\n  /** 是否选中 */\n  checked: {\n    type: Boolean,\n    default: undefined,\n  },\n  modelValue: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 是否选中，非受控属性 */\n  defaultChecked: Boolean,\n  /** 单选内容 */\n  content: {\n    type: [String, Function] as PropType<TdRadioProps['content']>,\n  },\n  /** 是否禁用组件内容（content）触发选中 */\n  contentDisabled: Boolean,\n  /** 单选按钮内容，同 label */\n  default: {\n    type: [String, Function] as PropType<TdRadioProps['default']>,\n  },\n  /** 是否为禁用态 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 自定义选中图标和非选中图标。示例：[选中态图标地址，非选中态图标地址]。值为 fill-circle 表示图标为填充型图标，值为 stroke-line 表示图标为描边型图标 */\n  icon: {\n    type: [String, Array] as PropType<TdRadioProps['icon']>,\n    default: 'fill-circle',\n  },\n  /** 主文案 */\n  label: {\n    type: [String, Function] as PropType<TdRadioProps['label']>,\n  },\n  /** HTML 元素原生属性 */\n  name: {\n    type: String,\n    default: '',\n  },\n  /** 单选按钮的值 */\n  value: {\n    type: [String, Number, Boolean] as PropType<TdRadioProps['value']>,\n    default: false,\n  },\n  /** 选中状态变化时触发 */\n  onChange: Function as PropType<TdRadioProps['onChange']>,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}