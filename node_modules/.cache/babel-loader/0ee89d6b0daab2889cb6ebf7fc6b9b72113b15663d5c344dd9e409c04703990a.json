{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { getCurrentInstance } from 'vue';\nvar withInstall = function withInstall(comp) {\n  var c = comp;\n  c.install = function (app, name) {\n    var defaultName = c.name;\n    app.component(name || defaultName, comp);\n  };\n  return c;\n};\nfunction extendAPI(apis) {\n  var instance = getCurrentInstance();\n  if (instance && instance.proxy) {\n    Object.assign(instance.proxy, apis);\n  }\n}\nexport { withInstall as default, extendAPI, withInstall };","map":{"version":3,"mappings":";;;;;;;IAGaA,cAAc,SAAdA,YAAkBC,IAAwB;EACrD,IAAMC,CAAI;EAERA,YAAU,UAACC,KAAUC,IAAkB;IACvC,IAAMC,cAAcH,CAAE;IAClBC,cAAUC,IAAQ,iBAAaH,IAAI;GACzC;EAEO;AACT;AAIO,SAASK,UAAmCC,IAAS;EAC1D,IAAMC,WAAWC,kBAAmB;EAChC,gBAAYD,SAASE,KAAO;IACvBC,cAAOH,QAAS,QAAOD,IAAI;EACpC;AACF","names":["withInstall","comp","c","app","name","defaultName","extendAPI","apis","instance","getCurrentInstance","proxy","Object"],"sources":["../../src/shared/component.ts"],"sourcesContent":["import { App, Plugin, getCurrentInstance } from 'vue';\n\nexport type WithInstallType<T> = T & Plugin;\nexport const withInstall = <T>(comp: T): T & Plugin => {\n  const c = comp as any;\n\n  c.install = (app: App, name?: string) => {\n    const defaultName = c.name;\n    app.component(name || defaultName, comp);\n  };\n\n  return c as T & Plugin;\n};\n\nexport default withInstall;\n\nexport function extendAPI<T = Record<string, any>>(apis: T) {\n  const instance = getCurrentInstance();\n  if (instance && instance.proxy) {\n    Object.assign(instance.proxy, apis);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}