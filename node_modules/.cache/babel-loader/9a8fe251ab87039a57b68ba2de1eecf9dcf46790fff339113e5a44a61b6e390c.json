{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\nimport { defineComponent, toRefs, computed, ref, reactive, getCurrentInstance, toRaw, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createBlock, Fragment, createTextVNode, toDisplayString, createCommentVNode, createVNode, renderList, Transition, withCtx, withDirectives, mergeProps, vShow } from 'vue';\nimport script$2 from './steps.js';\nimport config from '../config.js';\nimport CascaderProps from './props.js';\nimport '../shared/index.js';\nimport script$1 from './cascader-item.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { useEmitEvent } from '../shared/useEmitEvent/index.js';\nimport { useVModel } from '../shared/useVModel/index.js';\nimport { renderTNode } from '../shared/render.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/defineProperty';\nimport '@babel/runtime/helpers/typeof';\nimport './cascader-item-prop.js';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-cascader\");\nvar script = defineComponent({\n  name: name,\n  components: {\n    CloseIcon: CloseIcon,\n    CascaderItem: script$1,\n    TNode: TNodeComponent,\n    CascaderSteps: script$2\n  },\n  props: CascaderProps,\n  emits: [\"change\", \"cancel\", \"pick\", \"click-tab\", \"update:modelValue\", \"update:value\"],\n  setup: function setup(props, context) {\n    var emitEvent = useEmitEvent(props, context.emit);\n    var _toRefs = toRefs(props),\n      value = _toRefs.value,\n      modelValue = _toRefs.modelValue;\n    var _useVModel = useVModel(value, modelValue, props.defaultValue, props.onChange),\n      _useVModel2 = _slicedToArray(_useVModel, 2),\n      cascaderValue = _useVModel2[0],\n      setCascaderValue = _useVModel2[1];\n    var title = computed(function () {\n      return props.title || \"\\u6807\\u9898\";\n    });\n    var closeIcon = computed(function () {\n      return props.closeIcon || false;\n    });\n    var stepIndex = ref(0);\n    var selectedIndexes = reactive([]);\n    var items = reactive([props.options]);\n    var steps = reactive([\"\\u9009\\u62E9\\u9009\\u9879\"]);\n    var onCancel = function onCancel(e) {\n      emitEvent(\"cancel\", {\n        e: e\n      });\n    };\n    var onStepsChange = function onStepsChange(index) {\n      stepIndex.value = index;\n      emitEvent(\"click-tab\", index);\n    };\n    var internalInstance = getCurrentInstance();\n    var closeBtnTNode = computed(function () {\n      return renderTNode(internalInstance, \"closeIcon\");\n    });\n    var titleTNode = computed(function () {\n      return renderTNode(internalInstance, \"title\");\n    });\n    var onPick = function onPick(item, index, level, e) {\n      var _item$children;\n      if (item.disabled) {\n        return;\n      }\n      selectedIndexes[level] = index;\n      selectedIndexes.length = level + 1;\n      steps[level] = item.label;\n      emitEvent(\"pick\", item.value, index, {\n        e: e\n      });\n      if (item !== null && item !== void 0 && (_item$children = item.children) !== null && _item$children !== void 0 && _item$children.length) {\n        items[level + 1] = item.children;\n        items.length = level + 2;\n        stepIndex.value += 1;\n        steps[level + 1] = \"\\u9009\\u62E9\\u9009\\u9879\";\n        steps.length = level + 2;\n      } else {\n        setCascaderValue(item.value);\n        emitEvent(\"change\", item.value, items.map(function (item2, index2) {\n          return toRaw(item2[selectedIndexes[index2]]);\n        }), {\n          e: e\n        });\n      }\n    };\n    return {\n      closeBtnTNode: closeBtnTNode,\n      titleTNode: titleTNode,\n      stepIndex: stepIndex,\n      name: name,\n      title: title,\n      closeIcon: closeIcon,\n      cascaderValue: cascaderValue,\n      steps: steps,\n      selectedIndexes: selectedIndexes,\n      items: items,\n      setCascaderValue: setCascaderValue,\n      emitEvent: emitEvent,\n      onCancel: onCancel,\n      onPick: onPick,\n      onStepsChange: onStepsChange\n    };\n  }\n});\nvar _hoisted_1 = {\n  style: {\n    \"width\": \"100%\"\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  var _component_close_icon = resolveComponent(\"close-icon\");\n  var _component_cascader_steps = resolveComponent(\"cascader-steps\");\n  var _component_cascader_item = resolveComponent(\"cascader-item\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__wrapper\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__title\"))\n  }, [!(typeof _ctx.titleTNode === \"string\") ? (openBlock(), createBlock(_component_t_node, {\n    key: 0,\n    content: _ctx.titleTNode\n  }, null, 8, [\"content\"])) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [createTextVNode(toDisplayString(_ctx.title), 1)], 64))], 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__close-btn\")),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.onCancel && _ctx.onCancel.apply(_ctx, arguments);\n    })\n  }, [!(typeof _ctx.closeBtnTNode === \"boolean\") ? (openBlock(), createBlock(_component_t_node, {\n    key: 0,\n    content: _ctx.closeBtnTNode\n  }, null, 8, [\"content\"])) : typeof _ctx.closeIcon === \"boolean\" && _ctx.closeIcon ? (openBlock(), createBlock(_component_close_icon, {\n    key: 1,\n    size: \"24\"\n  })) : createCommentVNode(\"\", true)], 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__content\"))\n  }, [createVNode(_component_cascader_steps, {\n    value: _ctx.stepIndex,\n    items: _ctx.steps,\n    \"onUpdate:value\": _ctx.onStepsChange\n  }, null, 8, [\"value\", \"items\", \"onUpdate:value\"]), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__options-title\"))\n  }, \"\\u9009\\u9879\\u6807\\u9898\", 2), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__options-content\"))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.items, function (options, index) {\n    return openBlock(), createElementBlock(\"div\", {\n      key: index,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, [createVNode(Transition, {\n      appear: \"\",\n      name: \"slide\"\n    }, {\n      default: withCtx(function () {\n        return [withDirectives(createElementVNode(\"div\", _hoisted_1, [(openBlock(true), createElementBlock(Fragment, null, renderList(options, function (item, idx) {\n          return openBlock(), createBlock(_component_cascader_item, mergeProps({\n            key: item.value\n          }, item, {\n            active: _ctx.selectedIndexes[index] === idx,\n            onClick: function onClick($event) {\n              return _ctx.onPick(item, idx, index, $event);\n            }\n          }), null, 16, [\"active\", \"onClick\"]);\n        }), 128))], 512), [[vShow, _ctx.stepIndex === index]])];\n      }),\n      _: 2\n    }, 1024)]);\n  }), 128))], 2)], 2)], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":"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","names":["prefix","config","name","defineComponent","components","CloseIcon","CascaderItem","TNode","CascaderSteps","props","emits","setup","context","emitEvent","emit","toRefs","value","modelValue","useVModel","defaultValue","onChange","_useVModel2","cascaderValue","setCascaderValue","title","closeIcon","ref","reactive","items","options","steps","onCancel","e","onStepsChange","index","stepIndex","internalInstance","getCurrentInstance","computed","titleTNode","renderTNode","onPick","item","level","disabled","selectedIndexes","length","children","_item$children","map","toRaw","closeBtnTNode","style","class","_ctx","_createElementVNode","_createBlock","_component_t_node","content","_createElementBlock","key","onClick","_component_close_icon","size","_createVNode","_component_cascader_steps","_openBlock","_Transition","appear","_withDirectives","_hoisted_1","idx","_mergeProps","active","$event"],"sources":["../../src/cascader/cascader.vue","../../src/cascader/cascader.vue?vue&type=template&id=e23a73b4&lang.js"],"sourcesContent":["<template>\n  <div :class=\"`${name}__wrapper`\">\n    <div :class=\"`${name}__title`\">\n      <t-node v-if=\"!(typeof titleTNode === 'string')\" :content=\"titleTNode\" />\n      <template v-else>{{ title }}</template>\n    </div>\n    <div :class=\"`${name}__close-btn`\" @click=\"onCancel\">\n      <t-node v-if=\"!(typeof closeBtnTNode === 'boolean')\" :content=\"closeBtnTNode\" />\n      <close-icon v-else-if=\"typeof closeIcon === 'boolean' && closeIcon\" size=\"24\" />\n    </div>\n    <div :class=\"`${name}__content`\">\n      <cascader-steps :value=\"stepIndex\" :items=\"steps\" @update:value=\"onStepsChange\" />\n      <div :class=\"`${name}__options-title`\">选项标题</div>\n      <div :class=\"`${name}__options-content`\">\n        <div v-for=\"(options, index) in items\" :key=\"index\" style=\"width: 100%\">\n          <transition appear name=\"slide\">\n            <div v-show=\"stepIndex === index\" style=\"width: 100%\">\n              <cascader-item\n                v-for=\"(item, idx) in options\"\n                :key=\"item.value\"\n                v-bind=\"item\"\n                :active=\"selectedIndexes[index] === idx\"\n                @click=\"onPick(item, idx, index, $event)\"\n              />\n            </div>\n          </transition>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { CloseIcon } from 'tdesign-icons-vue-next';\nimport { defineComponent, toRefs, getCurrentInstance, SetupContext, computed, ref, toRaw, reactive } from 'vue';\nimport { TdCascaderItems, TdCascaderItem } from './type';\nimport CascaderSteps from './steps.vue';\nimport config from '../config';\nimport CascaderProps from './props';\nimport { useEmitEvent, useVModel, renderTNode, TNode } from '../shared';\nimport CascaderItem from './cascader-item.vue';\n\nconst { prefix } = config;\nconst name = `${prefix}-cascader`;\n\nexport default defineComponent({\n  name,\n  components: { CloseIcon, CascaderItem, TNode, CascaderSteps },\n  props: CascaderProps,\n  emits: ['change', 'cancel', 'pick', 'click-tab', 'update:modelValue', 'update:value'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const { value, modelValue } = toRefs(props);\n    const [cascaderValue, setCascaderValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const title = computed(() => props.title || '标题');\n    const closeIcon = computed(() => props.closeIcon || false);\n    const stepIndex = ref(0);\n    const selectedIndexes = reactive<number[]>([]);\n    const items = reactive<TdCascaderItems[]>([props.options]);\n    const steps = reactive(['选择选项']);\n    const onCancel = (e: MouseEvent) => {\n      emitEvent('cancel', { e });\n    };\n\n    const onStepsChange = (index: number) => {\n      stepIndex.value = index;\n      emitEvent('click-tab', index);\n    };\n\n    const internalInstance = getCurrentInstance();\n    const closeBtnTNode = computed(() => {\n      return renderTNode(internalInstance, 'closeIcon');\n    });\n    const titleTNode = computed(() => renderTNode(internalInstance, 'title'));\n\n    const onPick = (item: TdCascaderItem, index: number, level: number, e: MouseEvent) => {\n      if (item.disabled) {\n        return;\n      }\n      selectedIndexes[level] = index;\n      selectedIndexes.length = level + 1;\n      steps[level] = item.label;\n\n      emitEvent('pick', item.value, index, { e });\n\n      if (item?.children?.length) {\n        items[level + 1] = item.children;\n        items.length = level + 2;\n        stepIndex.value += 1;\n        steps[level + 1] = '选择选项';\n        steps.length = level + 2;\n      } else {\n        setCascaderValue(item.value);\n        emitEvent(\n          'change',\n          item.value,\n          items.map((item, index) => toRaw(item[selectedIndexes[index]])),\n          { e },\n        );\n      }\n    };\n\n    return {\n      closeBtnTNode,\n      titleTNode,\n      stepIndex,\n      name,\n      title,\n      closeIcon,\n      cascaderValue,\n      steps,\n      selectedIndexes,\n      items,\n      setCascaderValue,\n      emitEvent,\n      onCancel,\n      onPick,\n      onStepsChange,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"`${name}__wrapper`\">\n    <div :class=\"`${name}__title`\">\n      <t-node v-if=\"!(typeof titleTNode === 'string')\" :content=\"titleTNode\" />\n      <template v-else>{{ title }}</template>\n    </div>\n    <div :class=\"`${name}__close-btn`\" @click=\"onCancel\">\n      <t-node v-if=\"!(typeof closeBtnTNode === 'boolean')\" :content=\"closeBtnTNode\" />\n      <close-icon v-else-if=\"typeof closeIcon === 'boolean' && closeIcon\" size=\"24\" />\n    </div>\n    <div :class=\"`${name}__content`\">\n      <cascader-steps :value=\"stepIndex\" :items=\"steps\" @update:value=\"onStepsChange\" />\n      <div :class=\"`${name}__options-title`\">选项标题</div>\n      <div :class=\"`${name}__options-content`\">\n        <div v-for=\"(options, index) in items\" :key=\"index\" style=\"width: 100%\">\n          <transition appear name=\"slide\">\n            <div v-show=\"stepIndex === index\" style=\"width: 100%\">\n              <cascader-item\n                v-for=\"(item, idx) in options\"\n                :key=\"item.value\"\n                v-bind=\"item\"\n                :active=\"selectedIndexes[index] === idx\"\n                @click=\"onPick(item, idx, index, $event)\"\n              />\n            </div>\n          </transition>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { CloseIcon } from 'tdesign-icons-vue-next';\nimport { defineComponent, toRefs, getCurrentInstance, SetupContext, computed, ref, toRaw, reactive } from 'vue';\nimport { TdCascaderItems, TdCascaderItem } from './type';\nimport CascaderSteps from './steps.vue';\nimport config from '../config';\nimport CascaderProps from './props';\nimport { useEmitEvent, useVModel, renderTNode, TNode } from '../shared';\nimport CascaderItem from './cascader-item.vue';\n\nconst { prefix } = config;\nconst name = `${prefix}-cascader`;\n\nexport default defineComponent({\n  name,\n  components: { CloseIcon, CascaderItem, TNode, CascaderSteps },\n  props: CascaderProps,\n  emits: ['change', 'cancel', 'pick', 'click-tab', 'update:modelValue', 'update:value'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const { value, modelValue } = toRefs(props);\n    const [cascaderValue, setCascaderValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const title = computed(() => props.title || '标题');\n    const closeIcon = computed(() => props.closeIcon || false);\n    const stepIndex = ref(0);\n    const selectedIndexes = reactive<number[]>([]);\n    const items = reactive<TdCascaderItems[]>([props.options]);\n    const steps = reactive(['选择选项']);\n    const onCancel = (e: MouseEvent) => {\n      emitEvent('cancel', { e });\n    };\n\n    const onStepsChange = (index: number) => {\n      stepIndex.value = index;\n      emitEvent('click-tab', index);\n    };\n\n    const internalInstance = getCurrentInstance();\n    const closeBtnTNode = computed(() => {\n      return renderTNode(internalInstance, 'closeIcon');\n    });\n    const titleTNode = computed(() => renderTNode(internalInstance, 'title'));\n\n    const onPick = (item: TdCascaderItem, index: number, level: number, e: MouseEvent) => {\n      if (item.disabled) {\n        return;\n      }\n      selectedIndexes[level] = index;\n      selectedIndexes.length = level + 1;\n      steps[level] = item.label;\n\n      emitEvent('pick', item.value, index, { e });\n\n      if (item?.children?.length) {\n        items[level + 1] = item.children;\n        items.length = level + 2;\n        stepIndex.value += 1;\n        steps[level + 1] = '选择选项';\n        steps.length = level + 2;\n      } else {\n        setCascaderValue(item.value);\n        emitEvent(\n          'change',\n          item.value,\n          items.map((item, index) => toRaw(item[selectedIndexes[index]])),\n          { e },\n        );\n      }\n    };\n\n    return {\n      closeBtnTNode,\n      titleTNode,\n      stepIndex,\n      name,\n      title,\n      closeIcon,\n      cascaderValue,\n      steps,\n      selectedIndexes,\n      items,\n      setCascaderValue,\n      emitEvent,\n      onCancel,\n      onPick,\n      onStepsChange,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}