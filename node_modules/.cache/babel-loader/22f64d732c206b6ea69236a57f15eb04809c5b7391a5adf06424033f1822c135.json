{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createApp } from 'vue';\nimport script from './toast.js';\nimport './style/css.js';\nimport './type.js';\nimport 'tdesign-icons-vue-next';\nimport '../shared/index.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../config.js';\nimport '../shared/render.js';\nimport '@babel/runtime/helpers/typeof';\nimport 'lodash/camelCase';\nimport '../shared/render-tnode.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '../overlay/index.js';\nimport '../overlay/overlay.js';\nimport '../overlay/props.js';\nimport './props.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar instance = null;\nvar app;\nfunction Toast(props) {\n  var root = document.createElement(\"div\");\n  document.body.appendChild(root);\n  var propsObject = _objectSpread({\n    duration: 2e3\n  }, parseOptions(props));\n  if (instance) {\n    instance.clear();\n  }\n  instance = script;\n  instance.clear = function () {\n    clearTimeout(instance.timer);\n    app.unmount();\n    root.remove();\n  };\n  if (propsObject.duration && propsObject.duration > 0) {\n    instance.timer = setTimeout(instance.clear, propsObject.duration);\n  }\n  app = createApp(instance, _objectSpread({}, propsObject));\n  app.mount(root);\n  return instance;\n}\nToast.clear = function () {\n  if (instance) {\n    instance.clear();\n  }\n};\n[\"loading\", \"success\", \"fail\"].forEach(function (type) {\n  if (!type) {\n    return;\n  }\n  Toast[type] = function (options) {\n    var props = {\n      message: \"\",\n      theme: type\n    };\n    if (typeof options === \"string\") {\n      props.message = options;\n    } else {\n      props = _objectSpread(_objectSpread({}, props), options);\n    }\n    return Toast(props);\n  };\n});\nfunction parseOptions(message) {\n  if (typeof message === \"string\") {\n    return {\n      message: message\n    };\n  }\n  return message;\n}\nToast.install = function (app2) {\n  app2.config.globalProperties.$toast = Toast;\n};\nvar ToastPlugin = Toast;\nexport { ToastPlugin, ToastPlugin as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAIA,QAAgB;AACpB,IAAIC;AAGJ,SAASC,MAAMC,KAAsE;EAC7E,WAAOC,QAAS,eAAc,KAAK;EAChCA,cAAKC,YAAYC,IAAI;EAE9B,IAAMC,WAAc;IAClBC,QAAU;EAAA,GACPC,aAAaN,KAAK,EACvB;EAEA,IAAIH,QAAU;IACZA,SAASU,KAAM;EACjB;EAEWV;EAEXA,SAASU,QAAQ,YAAM;IACrBC,aAAaX,SAASY,KAAK;IAC3BX,IAAIY,OAAQ;IACZP,KAAKQ,MAAO;GACd;EAEA,IAAIP,WAAY,aAAYA,WAAY,YAAW,CAAG;IACpDP,SAASY,KAAQ,cAAWZ,QAAS,QAAOO,YAAYC,QAAQ;EAClE;EAEAP,MAAMc,SAAU,6BAAeR,YAAa;EAC5CN,IAAIe,MAAMV,IAAI;EAEP;AACT;AAEAJ,MAAMQ,QAAQ,YAAM;EAClB,IAAIV,QAAU;IACZA,SAASU,KAAM;EACjB;AACF;AAEC,CAAC,WAAW,SAAW,QAAM,CAA8B,SAAQ,UAACO,IAAe;EAClF,IAAI,CAACA,IAAM;IACT;EACF;EACMf,cAAQ,UAACgB,OAAmC;IAChD,IAAIf,KAAQ;MAAEgB,OAAS;MAAIC,OAAOH;KAAK;IAEnC,WAAOC,YAAY,QAAU;MAC/Bf,MAAMgB,OAAU;IAClB,CAAO;MACLhB,QAAaA,qCAAO,CAAGe,SAAQ;IACjC;IAEA,OAAOhB,MAAMC,KAAK;GACpB;AACF,CAAC;AAED,SAASM,aAAaU,OAA0C;EAC1D,WAAOA,YAAY,QAAU;IAC/B,OAAO;MAAEA,OAAQ,EAARA;KAAQ;EACnB;EACO;AACT;AAEAjB,KAAM,WAAU,UAACD,IAAa;EAG5BA,KAAIoB,MAAO,kBAAiBC,MAAS;AACvC;AAeO,IAAMC,WAA2D","names":["instance","app","Toast","props","document","appendChild","root","propsObject","duration","parseOptions","clear","clearTimeout","timer","unmount","remove","createApp","mount","type","options","message","theme","config","$toast","ToastPlugin"],"sources":["../../src/toast/index.ts"],"sourcesContent":["import { createApp, App, DefineComponent } from 'vue';\nimport vueToast from './toast.vue';\nimport { TdToastProps } from './type';\nimport { WithInstallType } from '../shared';\n\nimport './style';\n\nexport * from './type';\nexport type ToastProps = TdToastProps;\n\nlet instance: any = null;\nlet app: App<Element>;\n\n/** 展示提示 */\nfunction Toast(props: string | Partial<TdToastProps>): DefineComponent<TdToastProps> {\n  const root = document.createElement('div');\n  document.body.appendChild(root);\n\n  const propsObject = {\n    duration: 2000,\n    ...parseOptions(props),\n  };\n\n  if (instance) {\n    instance.clear();\n  }\n\n  instance = vueToast;\n\n  instance.clear = () => {\n    clearTimeout(instance.timer);\n    app.unmount();\n    root.remove();\n  };\n\n  if (propsObject.duration && propsObject.duration > 0) {\n    instance.timer = setTimeout(instance.clear, propsObject.duration);\n  }\n\n  app = createApp(instance, { ...propsObject });\n  app.mount(root);\n\n  return instance;\n}\n\nToast.clear = () => {\n  if (instance) {\n    instance.clear();\n  }\n};\n\n(['loading', 'success', 'fail'] as TdToastProps['theme'][]).forEach((type): void => {\n  if (!type) {\n    return;\n  }\n  Toast[type] = (options: TdToastProps | string) => {\n    let props = { message: '', theme: type } as unknown as TdToastProps;\n\n    if (typeof options === 'string') {\n      props.message = options;\n    } else {\n      props = { ...props, ...options };\n    }\n\n    return Toast(props);\n  };\n});\n\nfunction parseOptions(message?: Partial<TdToastProps> | string) {\n  if (typeof message === 'string') {\n    return { message };\n  }\n  return message;\n}\n\nToast.install = (app: App) => {\n  // 添加插件入口\n  // eslint-disable-next-line no-param-reassign\n  app.config.globalProperties.$toast = Toast;\n};\n\ntype ToastApi = {\n  /** 展示提示 */\n  (options?: Partial<TdToastProps> | string): void;\n  /** 展示加载提示 */\n  loading: (options?: Partial<TdToastProps> | string) => void;\n  /** 展示成功提示 */\n  success: (options?: Partial<TdToastProps> | string) => void;\n  /** 展示失败提示 */\n  fail: (options?: Partial<TdToastProps> | string) => void;\n  /** 关闭提示 */\n  clear: () => void;\n};\n\nexport const ToastPlugin: WithInstallType<typeof vueToast> & ToastApi = Toast as any;\nexport default ToastPlugin;\n\ndeclare module '@vue/runtime-core' {\n  // Bind to `this` keyword\n  export interface ComponentCustomProperties {\n    $toast: ToastApi;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}