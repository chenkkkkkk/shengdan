{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\nimport { defineComponent, getCurrentInstance, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, createVNode, createCommentVNode } from 'vue';\nimport config from '../config.js';\nimport TagProps from './props.js';\nimport '../shared/index.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { useEmitEvent } from '../shared/useEmitEvent/index.js';\nimport { renderContent, renderTNode } from '../shared/render.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/typeof';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-tag\");\nvar Tag = defineComponent({\n  name: name,\n  components: {\n    CloseIcon: CloseIcon,\n    TNode: TNodeComponent\n  },\n  props: TagProps,\n  emits: [\"close\", \"click\"],\n  setup: function setup(props, context) {\n    var emitEvent = useEmitEvent(props, context.emit);\n    var internalInstance = getCurrentInstance();\n    var tagContent = computed(function () {\n      return renderContent(internalInstance, \"default\", \"content\");\n    });\n    var iconContent = computed(function () {\n      return renderTNode(internalInstance, \"icon\");\n    });\n    var baseClass = name;\n    var tagStyle = computed(function () {\n      return props.maxWidth ? {\n        maxWidth: typeof props.maxWidth === \"number\" ? \"\".concat(props.maxWidth, \"px\") : props.maxWidth\n      } : {};\n    });\n    var classes = computed(function () {\n      var _ref;\n      return [\"\".concat(baseClass), \"\".concat(baseClass, \"--theme-\").concat(props.theme), \"\".concat(baseClass, \"--shape-\").concat(props.shape), \"\".concat(baseClass, \"--variant-\").concat(props.variant), \"\".concat(baseClass, \"--size-\").concat(props.size), (_ref = {}, _defineProperty(_ref, \"\".concat(prefix, \"-is-closable \").concat(baseClass, \"--closable\"), props.closable), _defineProperty(_ref, \"\".concat(prefix, \"-is-disabled \").concat(baseClass, \"--disabled\"), props.disabled), _ref)];\n    });\n    var onClickClose = function onClickClose(e) {\n      if (!props.disabled) {\n        emitEvent(\"close\", {\n          e: e\n        });\n      }\n    };\n    var handleClick = function handleClick(e) {\n      if (!props.disabled) {\n        emitEvent(\"click\", {\n          e: e\n        });\n      }\n    };\n    return {\n      baseClass: baseClass,\n      classes: classes,\n      tagStyle: tagStyle,\n      onClickClose: onClickClose,\n      handleClick: handleClick,\n      iconContent: iconContent,\n      tagContent: tagContent\n    };\n  }\n});\nvar _hoisted_1 = [\"aria-disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  var _component_close_icon = resolveComponent(\"close-icon\");\n  return openBlock(), createElementBlock(\"span\", {\n    class: normalizeClass(_ctx.classes),\n    style: normalizeStyle(_ctx.tagStyle),\n    \"aria-disabled\": _ctx.disabled,\n    role: \"button\",\n    onClick: _cache[1] || (_cache[1] = function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    })\n  }, [createElementVNode(\"span\", {\n    class: normalizeClass(\"\".concat(_ctx.baseClass, \"__icon\"))\n  }, [createVNode(_component_t_node, {\n    content: _ctx.iconContent\n  }, null, 8, [\"content\"])], 2), createElementVNode(\"span\", {\n    class: normalizeClass(\"\".concat(_ctx.baseClass, \"__text\"))\n  }, [createVNode(_component_t_node, {\n    content: _ctx.tagContent\n  }, null, 8, [\"content\"])], 2), _ctx.closable && !_ctx.disabled ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass(\"\".concat(_ctx.baseClass, \"__icon-close\")),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.onClickClose && _ctx.onClickClose.apply(_ctx, arguments);\n    })\n  }, [createVNode(_component_close_icon)], 2)) : createCommentVNode(\"\", true)], 14, _hoisted_1);\n}\nTag.render = render;\nexport { Tag as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAEVG,UAAMC,eAAgB;EAC1BF;EACAG,UAAY;IACVC;IACAC;GACF;EACAC,KAAO;EACPC,OAAO,CAAC,SAAS,OAAO;EACxBC,OAAMF,sBAAOG,OAAuB;IAClC,IAAMC,SAAY,gBAAaJ,KAAO,UAAQK,IAAI;IAClD,IAAMC,mBAAmBC,kBAAmB;IAC5C,IAAMC,aAAaC,QAAS;MAAA,OAAMC,cAAcJ,gBAAkB,aAAW,SAAS,CAAC;KAAA;IACvF,IAAMK,cAAcF,QAAS;MAAA,OAAMG,WAAY,mBAAkB,MAAM,CAAC;KAAA;IACxE,IAAMC,SAAY;IAEZ,eAAWJ,SAAS,YAAM;MAC9B,OAAOT,KAAM,YACT;QAAEc,UAAU,OAAOd,KAAM,cAAa,QAAW,aAAGA,KAAM,mBAAeA,KAAM;UAC/E,EAAC;IACP,CAAC;IAEK,cAAUS,SAAS;MAAA;MAAA,OAAM,WAC1BI,sBACAA,WAAoBb,wBAAM,mBAC1Ba,WAAoBb,wBAAM,mBAC1Ba,WAAsBb,0BAAM,qBAC5Ba,6BAAmBb,KAAM,oDAEtBR,MAAsB,qCAAwBQ,oBAAM,4CACpDR,MAAsB,oDAAwBQ,KAAM,UAE3D;KAAA;IAEK,mBAAe,SAAfe,aAAgBC,CAAwB;MACxC,KAAChB,MAAMiB,QAAU;QACTb,mBAAS;UAAEY;QAAE,CAAC;MAC1B;KACF;IAEM,kBAAc,SAAdE,YAAeF,CAAwB;MACvC,KAAChB,MAAMiB,QAAU;QACTb,mBAAS;UAAEY;QAAE,CAAC;MAC1B;KACF;IAEO;MACLH;MACAM;MACAC;MACAL;MACAG;MACAP;MACAH;KACF;EACF;AACF,CAAC;;;;;oBC9EC,qBAUM;IAVCa,qBAAO,MAAOF;IAAGG,qBAAO,MAAQF;IAAG,iBAAeG,IAAQ;IAAEC,IAAK;IAAUC;aAAOF,KAAWL;IAAA;MAClGQ,mBAEM;IAFCL,sBAAUE,eAASV;MACxBc,YAAuCC;IAA9BC,OAAS,OAAWlB;EAAA,+BAE/Be,mBAEM;IAFCL,sBAAUE,eAASV;MACxBc,YAAsCC;IAA7BC,OAAS,OAAUrB;EAAA,+BAElBe,kBAAaA,KAAQN,yBAAjCa,mBAEM;;IAF8BT,gCAAUE,KAASV;IAAiBY;aAAOF,KAAYR;IAAA;MACzFY,YAAaI","names":["prefix","config","name","Tag","defineComponent","components","CloseIcon","TNode","props","emits","setup","context","emitEvent","emit","internalInstance","getCurrentInstance","tagContent","computed","renderContent","iconContent","renderTNode","baseClass","maxWidth","onClickClose","e","disabled","handleClick","classes","tagStyle","class","style","_ctx","role","onClick","_createElementVNode","_createVNode","_component_t_node","content","_createElementBlock","_component_close_icon"],"sources":["../../src/tag/tag.vue","../../src/tag/tag.vue?vue&type=template&id=4fbd845a&lang.js"],"sourcesContent":["<template>\n  <span :class=\"classes\" :style=\"tagStyle\" :aria-disabled=\"disabled\" role=\"button\" @click=\"handleClick\">\n    <span :class=\"`${baseClass}__icon`\">\n      <t-node :content=\"iconContent\"></t-node>\n    </span>\n    <span :class=\"`${baseClass}__text`\">\n      <t-node :content=\"tagContent\"></t-node>\n    </span>\n    <span v-if=\"closable && !disabled\" :class=\"`${baseClass}__icon-close`\" @click=\"onClickClose\">\n      <close-icon />\n    </span>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { CloseIcon } from 'tdesign-icons-vue-next';\nimport { defineComponent, computed, getCurrentInstance, SetupContext } from 'vue';\nimport config from '../config';\nimport TagProps from './props';\nimport { useEmitEvent, renderContent, renderTNode, TNode } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-tag`;\n\nconst Tag = defineComponent({\n  name,\n  components: {\n    CloseIcon,\n    TNode,\n  },\n  props: TagProps,\n  emits: ['close', 'click'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const internalInstance = getCurrentInstance();\n    const tagContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n    const iconContent = computed(() => renderTNode(internalInstance, 'icon'));\n    const baseClass = name;\n\n    const tagStyle = computed(() => {\n      return props.maxWidth\n        ? { maxWidth: typeof props.maxWidth === 'number' ? `${props.maxWidth}px` : props.maxWidth }\n        : {};\n    });\n\n    const classes = computed(() => [\n      `${baseClass}`,\n      `${baseClass}--theme-${props.theme}`,\n      `${baseClass}--shape-${props.shape}`,\n      `${baseClass}--variant-${props.variant}`,\n      `${baseClass}--size-${props.size}`,\n      {\n        [`${prefix}-is-closable ${baseClass}--closable`]: props.closable,\n        [`${prefix}-is-disabled ${baseClass}--disabled`]: props.disabled,\n      },\n    ]);\n\n    const onClickClose = (e: MouseEvent): void => {\n      if (!props.disabled) {\n        emitEvent('close', { e });\n      }\n    };\n\n    const handleClick = (e: MouseEvent): void => {\n      if (!props.disabled) {\n        emitEvent('click', { e });\n      }\n    };\n\n    return {\n      baseClass,\n      classes,\n      tagStyle,\n      onClickClose,\n      handleClick,\n      iconContent,\n      tagContent,\n    };\n  },\n});\n\nexport default Tag;\n</script>\n","<template>\n  <span :class=\"classes\" :style=\"tagStyle\" :aria-disabled=\"disabled\" role=\"button\" @click=\"handleClick\">\n    <span :class=\"`${baseClass}__icon`\">\n      <t-node :content=\"iconContent\"></t-node>\n    </span>\n    <span :class=\"`${baseClass}__text`\">\n      <t-node :content=\"tagContent\"></t-node>\n    </span>\n    <span v-if=\"closable && !disabled\" :class=\"`${baseClass}__icon-close`\" @click=\"onClickClose\">\n      <close-icon />\n    </span>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { CloseIcon } from 'tdesign-icons-vue-next';\nimport { defineComponent, computed, getCurrentInstance, SetupContext } from 'vue';\nimport config from '../config';\nimport TagProps from './props';\nimport { useEmitEvent, renderContent, renderTNode, TNode } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-tag`;\n\nconst Tag = defineComponent({\n  name,\n  components: {\n    CloseIcon,\n    TNode,\n  },\n  props: TagProps,\n  emits: ['close', 'click'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const internalInstance = getCurrentInstance();\n    const tagContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n    const iconContent = computed(() => renderTNode(internalInstance, 'icon'));\n    const baseClass = name;\n\n    const tagStyle = computed(() => {\n      return props.maxWidth\n        ? { maxWidth: typeof props.maxWidth === 'number' ? `${props.maxWidth}px` : props.maxWidth }\n        : {};\n    });\n\n    const classes = computed(() => [\n      `${baseClass}`,\n      `${baseClass}--theme-${props.theme}`,\n      `${baseClass}--shape-${props.shape}`,\n      `${baseClass}--variant-${props.variant}`,\n      `${baseClass}--size-${props.size}`,\n      {\n        [`${prefix}-is-closable ${baseClass}--closable`]: props.closable,\n        [`${prefix}-is-disabled ${baseClass}--disabled`]: props.disabled,\n      },\n    ]);\n\n    const onClickClose = (e: MouseEvent): void => {\n      if (!props.disabled) {\n        emitEvent('close', { e });\n      }\n    };\n\n    const handleClick = (e: MouseEvent): void => {\n      if (!props.disabled) {\n        emitEvent('click', { e });\n      }\n    };\n\n    return {\n      baseClass,\n      classes,\n      tagStyle,\n      onClickClose,\n      handleClick,\n      iconContent,\n      tagContent,\n    };\n  },\n});\n\nexport default Tag;\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}