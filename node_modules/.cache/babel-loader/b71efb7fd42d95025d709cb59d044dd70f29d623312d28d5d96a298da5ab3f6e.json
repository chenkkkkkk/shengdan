{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { defineComponent, openBlock, createElementBlock, Fragment, renderList, createElementVNode, normalizeClass, toDisplayString, createCommentVNode } from 'vue';\nvar _hoisted_1 = {\n  key: 0,\n  class: \"t-cascader__steps\"\n};\nvar _hoisted_2 = [\"onClick\"];\nvar script = /* @__PURE__ */defineComponent({\n  __name: \"steps\",\n  props: {\n    items: Array,\n    value: Number\n  },\n  emits: [\"update:value\"],\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var handleClick = function handleClick(index) {\n      emit(\"update:value\", index);\n    };\n    return function (_ctx, _cache) {\n      return Array.isArray(__props.items) ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [(openBlock(true), createElementBlock(Fragment, null, renderList(__props.items, function (item, index) {\n        return openBlock(), createElementBlock(\"div\", {\n          key: index,\n          class: \"t-cascader__step\",\n          onClick: function onClick($event) {\n            return handleClick(index);\n          }\n        }, [createElementVNode(\"div\", {\n          class: normalizeClass({\n            \"t-cascader__step-dot\": true,\n            \"t-cascader__step-dot--active\": index === __props.value,\n            \"t-cascader__step-dot--last\": index === __props.items.length - 1\n          })\n        }, null, 2), createElementVNode(\"div\", {\n          class: normalizeClass({\n            \"t-cascader__step-label\": true,\n            \"t-cascader__step-label--active\": index === __props.value\n          })\n        }, toDisplayString(item), 3)], 8, _hoisted_2);\n      }), 128))])) : createCommentVNode(\"\", true);\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;IAgCM,kBAAc,SAAdA,YAAeC,KAAkB;MACrCC,KAAK,gBAAgBD,KAAK;KAC5B","names":["handleClick","index","emit"],"sources":["../../src/cascader/steps.vue"],"sourcesContent":["<template>\n  <div v-if=\"Array.isArray(items)\" class=\"t-cascader__steps\">\n    <div v-for=\"(item, index) in items\" :key=\"index\" class=\"t-cascader__step\" @click=\"handleClick(index)\">\n      <div\n        :class=\"{\n          't-cascader__step-dot': true,\n          't-cascader__step-dot--active': index === value,\n          't-cascader__step-dot--last': index === items.length - 1,\n        }\"\n      ></div>\n      <div\n        :class=\"{\n          't-cascader__step-label': true,\n          't-cascader__step-label--active': index === value,\n        }\"\n      >\n        {{ item }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { defineProps, defineEmits } from 'vue';\n\ndefineProps({\n  items: Array,\n  value: Number,\n});\n\nconst emit = defineEmits(['update:value']);\n\nconst handleClick = (index: number) => {\n  emit('update:value', index);\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}