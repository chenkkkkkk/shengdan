{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { getCurrentInstance, ref } from 'vue';\nfunction useVModel(value, modelValue, defaultValue, onChange) {\n  var propName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"value\";\n  var _getCurrentInstance = getCurrentInstance(),\n    emit = _getCurrentInstance.emit;\n  var internalValue = ref();\n  internalValue.value = defaultValue;\n  if (typeof value.value !== \"undefined\") {\n    return [value, function (newValue) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      emit === null || emit === void 0 ? void 0 : emit.apply(void 0, [\"update:\".concat(propName), newValue].concat(args));\n      onChange === null || onChange === void 0 ? void 0 : onChange.apply(void 0, [newValue].concat(args));\n    }];\n  }\n  if (typeof modelValue.value !== \"undefined\") {\n    return [modelValue, function (newValue) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      emit === null || emit === void 0 ? void 0 : emit.apply(void 0, [\"update:modelValue\", newValue].concat(args));\n      onChange === null || onChange === void 0 ? void 0 : onChange.apply(void 0, [newValue].concat(args));\n    }];\n  }\n  return [internalValue, function (newValue) {\n    internalValue.value = newValue;\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange.apply(void 0, [newValue].concat(args));\n  }];\n}\nvar UPDATE_MODEL = \"update:modelValue\";\nvar UPDATE_VALUE = \"update:value\";\nexport { UPDATE_MODEL, UPDATE_VALUE, useVModel };","map":{"version":3,"mappings":";;;;;;;AAIO,SAASA,UACdC,KACA,cACAC,YACA,YAG4B;EAAA,IAF5BC,+EAAW,OAEiB;EACtB,0BAAWC,kBAAmB;IAA5BC,IAAK,uBAALA,IAAK;EACb,IAAMC,gBAAgBC,GAAO;EAC7BD,cAAcL,KAAQ;EAGlB,WAAOA,KAAM,WAAU,WAAa;IAC/B,QACLA,OACA,UAACO,UAAsB;MAAA,kCAATC,IAAS;QAATA,IAAS;MAAA;MACrBJ,iFAAiBF,SAAYK,UAAU,CAAGC,YAAI;MACnCC,6FAAaD,IAAI;IAC9B,EACF;EACF;EAGI,WAAOE,UAAW,WAAU,WAAa;IACpC,QACLA,YACA,UAACH,UAAsB;MAAA,mCAATC,IAAS;QAATA,IAAS;MAAA;MACdJ,qFAAqBG,QAAU,SAAGC,IAAI;MAClCC,6FAAaD,IAAI;IAC9B,EACF;EACF;EAGO,QACLH,eACA,UAACE,UAAsB;IACrBF,cAAcL,KAAQ;IAAA,mCADVQ,IAAS;MAATA,IAAS;IAAA;IAEVC,6FAAaD,IAAI;EAC9B,EACF;AACF;AAGO,IAAMG,YAAe;AACrB,IAAMC,YAAe","names":["useVModel","value","defaultValue","propName","getCurrentInstance","emit","internalValue","ref","newValue","args","onChange","modelValue","UPDATE_MODEL","UPDATE_VALUE"],"sources":["../../../src/shared/useVModel/index.ts"],"sourcesContent":["import { ref, Ref, getCurrentInstance, ComponentInternalInstance } from 'vue';\n\nexport type ChangeHandler<T> = (value: T, ...args: any[]) => void;\n\nexport function useVModel<T>(\n  value: Ref<T>,\n  modelValue: Ref<T>,\n  defaultValue: T,\n  onChange?: (...args: any) => any,\n  propName = 'value',\n  // emit 和 eventName 用于支持 v-model 和 xxx.sync 语法糖\n): [Ref<T>, ChangeHandler<T>] {\n  const { emit } = getCurrentInstance() as ComponentInternalInstance;\n  const internalValue = ref<T>() as Ref<T>;\n  internalValue.value = defaultValue;\n\n  // 受控模式 v-model:propName\n  if (typeof value.value !== 'undefined') {\n    return [\n      value,\n      (newValue, ...args) => {\n        emit?.(`update:${propName}`, newValue, ...args);\n        onChange?.(newValue, ...args);\n      },\n    ];\n  }\n\n  // 受控模式:modelValue v-model\n  if (typeof modelValue.value !== 'undefined') {\n    return [\n      modelValue,\n      (newValue, ...args) => {\n        emit?.(`update:modelValue`, newValue, ...args);\n        onChange?.(newValue, ...args);\n      },\n    ];\n  }\n\n  // 非受控模式\n  return [\n    internalValue,\n    (newValue, ...args) => {\n      internalValue.value = newValue;\n      onChange?.(newValue, ...args);\n    },\n  ];\n}\n\n// emits name\nexport const UPDATE_MODEL = 'update:modelValue';\nexport const UPDATE_VALUE = 'update:value';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}