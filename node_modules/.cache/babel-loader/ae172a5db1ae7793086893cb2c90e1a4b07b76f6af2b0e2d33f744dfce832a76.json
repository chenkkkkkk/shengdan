{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { h, defineComponent, toRefs, inject, computed, getCurrentInstance, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, mergeProps, createVNode, createCommentVNode } from 'vue';\nimport { CheckIcon } from 'tdesign-icons-vue-next';\nimport '../shared/index.js';\nimport ClASSNAMES from '../shared/constants.js';\nimport config from '../config.js';\nimport RadioProps from './props.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { useVModel } from '../shared/useVModel/index.js';\nimport { NOOP } from '../shared/functions.js';\nimport { renderContent, renderTNode } from '../shared/render.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/typeof';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-radio\");\nvar iconDefault = [h(CheckIcon), \"\"];\nvar script = defineComponent({\n  name: name,\n  components: {\n    TNode: TNodeComponent\n  },\n  props: _objectSpread(_objectSpread({}, RadioProps), {}, {\n    borderless: {\n      type: Boolean,\n      value: false\n    }\n  }),\n  emits: [\"update:checked\", \"update:modelValue\", \"change\"],\n  setup: function setup(props, context) {\n    var _toRefs = toRefs(props),\n      checked = _toRefs.checked,\n      modelValue = _toRefs.modelValue;\n    var _useVModel = useVModel(checked, modelValue, props.defaultChecked, props.onChange, \"checked\"),\n      _useVModel2 = _slicedToArray(_useVModel, 2),\n      innerChecked = _useVModel2[0],\n      setInnerChecked = _useVModel2[1];\n    var rootGroupProps = inject(\"rootGroupProps\", {});\n    var rootGroupValue = inject(\"rootGroupValue\");\n    var rootGroupChange = inject(\"rootGroupChange\", NOOP);\n    var disabled = computed(function () {\n      return rootGroupProps.disabled !== void 0 ? rootGroupProps.disabled : props.disabled;\n    });\n    var radioChecked = computed(function () {\n      return rootGroupValue ? props.value === rootGroupValue.value : innerChecked.value;\n    });\n    var inputProps = computed(function () {\n      return {\n        name: rootGroupProps.name || props.name,\n        checked: radioChecked.value,\n        disabled: disabled.value,\n        value: props.value\n      };\n    });\n    var internalInstance = getCurrentInstance();\n    var labelContent = computed(function () {\n      return renderContent(internalInstance, \"default\", \"label\");\n    });\n    var radioContent = computed(function () {\n      return renderTNode(internalInstance, \"content\");\n    });\n    var iconContent = computed(function () {\n      if (!props.icon) {\n        return;\n      }\n      var curContent = \"\";\n      var iconIndex = radioChecked.value ? 0 : 1;\n      var isIconArray = Array.isArray(props.icon);\n      if (isIconArray) {\n        return curContent = props.icon[iconIndex];\n      }\n      return iconDefault[iconIndex];\n    });\n    var radioClasses = computed(function () {\n      var _ref;\n      return [\"\".concat(name), (_ref = {}, _defineProperty(_ref, ClASSNAMES.STATUS.checked, radioChecked.value), _defineProperty(_ref, ClASSNAMES.STATUS.disabled, disabled.value), _ref)];\n    });\n    var titleClasses = computed(function () {\n      var _ref2;\n      return [\"\".concat(name, \"__content-title\"), (_ref2 = {}, _defineProperty(_ref2, ClASSNAMES.STATUS.disabled, disabled.value), _defineProperty(_ref2, \"\".concat(name, \"__content-right-title\"), props.align === \"right\"), _ref2)];\n    });\n    var iconClass = computed(function () {\n      var _ref3;\n      return [\"\".concat(name, \"__icon\"), (_ref3 = {}, _defineProperty(_ref3, \"\".concat(name, \"__icon--checked\"), radioChecked.value), _defineProperty(_ref3, \"\".concat(name, \"__icon--disabled\"), disabled.value), _defineProperty(_ref3, \"\".concat(name, \"__icon--strock\"), props.icon === \"stroke-line\"), _defineProperty(_ref3, \"\".concat(name, \"__icon--custom\"), Array.isArray(props.icon)), _ref3)];\n    });\n    var radioContentChange = function radioContentChange(e) {\n      if (props.contentDisabled) {\n        return;\n      }\n      radioOrgChange(e);\n    };\n    var radioOrgChange = function radioOrgChange(e) {\n      if (disabled.value) {\n        return;\n      }\n      if (rootGroupChange !== NOOP && props.value !== void 0) {\n        rootGroupChange(props.value, e);\n      } else {\n        setInnerChecked(!radioChecked.value, {\n          e: e\n        });\n      }\n    };\n    return {\n      name: name,\n      iconClass: iconClass,\n      radioContent: radioContent,\n      labelContent: labelContent,\n      iconContent: iconContent,\n      radioContentChange: radioContentChange,\n      radioOrgChange: radioOrgChange,\n      radioClasses: radioClasses,\n      titleClasses: titleClasses,\n      inputProps: inputProps\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.radioClasses)\n  }, [createElementVNode(\"span\", {\n    class: normalizeClass([\"\".concat(_ctx.name, \"__content-wrap\")])\n  }, [_ctx.align === \"left\" ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass(\"\".concat(_ctx.name, \"__icon-wrap \").concat(_ctx.name, \"__icon-left-wrap\"))\n  }, [createElementVNode(\"input\", mergeProps({\n    type: \"radio\",\n    class: \"\".concat(_ctx.name, \"__original-left\")\n  }, _ctx.inputProps, {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.radioOrgChange && _ctx.radioOrgChange.apply(_ctx, arguments);\n    })\n  }), null, 16), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.iconClass)\n  }, [createVNode(_component_t_node, {\n    content: _ctx.iconContent\n  }, null, 8, [\"content\"])], 2)], 2)) : createCommentVNode(\"\", true), _ctx.labelContent || _ctx.radioContent ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass([\"\".concat(_ctx.name, \"__label-wrap\")])\n  }, [_ctx.labelContent ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass(_ctx.titleClasses),\n    onClick: _cache[1] || (_cache[1] = function () {\n      return _ctx.radioOrgChange && _ctx.radioOrgChange.apply(_ctx, arguments);\n    })\n  }, [createVNode(_component_t_node, {\n    content: _ctx.labelContent\n  }, null, 8, [\"content\"])], 2)) : createCommentVNode(\"\", true), _ctx.radioContent ? (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: normalizeClass(\"\".concat(_ctx.name, \"__content-inner\")),\n    onClick: _cache[2] || (_cache[2] = function () {\n      return _ctx.radioContentChange && _ctx.radioContentChange.apply(_ctx, arguments);\n    })\n  }, [createVNode(_component_t_node, {\n    content: _ctx.radioContent\n  }, null, 8, [\"content\"])], 2)) : createCommentVNode(\"\", true)], 2)) : createCommentVNode(\"\", true), _ctx.align === \"right\" ? (openBlock(), createElementBlock(\"span\", {\n    key: 2,\n    class: normalizeClass(\"\".concat(_ctx.name, \"__icon-wrap \").concat(_ctx.name, \"__icon-right-wrap\"))\n  }, [createElementVNode(\"input\", mergeProps({\n    type: \"radio\",\n    class: \"\".concat(_ctx.name, \"__original-right\")\n  }, _ctx.inputProps, {\n    onClick: _cache[3] || (_cache[3] = function () {\n      return _ctx.radioOrgChange && _ctx.radioOrgChange.apply(_ctx, arguments);\n    })\n  }), null, 16), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.iconClass)\n  }, [createVNode(_component_t_node, {\n    content: _ctx.iconContent\n  }, null, 8, [\"content\"])], 2)], 2)) : createCommentVNode(\"\", true)], 2), !_ctx.borderless ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(\"\".concat(_ctx.name, \"__border \").concat(_ctx.name, \"__border--\").concat(_ctx.align))\n  }, null, 2)) : createCommentVNode(\"\", true)], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":"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","names":["prefix","config","name","iconDefault","h","defineComponent","components","TNode","props","RadioProps","borderless","type","value","emits","setup","context","toRefs","checked","modelValue","useVModel","_useVModel2","innerChecked","setInnerChecked","rootGroupProps","inject","NOOP","computed","disabled","rootGroupValue","radioChecked","internalInstance","getCurrentInstance","labelContent","renderContent","radioContent","renderTNode","icon","curContent","isIconArray","isArray","ClASSNAMES","STATUS","align","Array","radioContentChange","e","contentDisabled","radioOrgChange","rootGroupChange","iconClass","iconContent","radioClasses","titleClasses","inputProps","class","_createElementVNode","_ctx","_createElementBlock","_normalizeClass","_mergeProps","onClick","_createVNode","_component_t_node","content"],"sources":["../../src/radio/radio.vue","../../src/radio/radio.vue?vue&type=template&id=9d043cf0&lang.js"],"sourcesContent":["<template>\n  <div :class=\"radioClasses\">\n    <span :class=\"[`${name}__content-wrap`]\">\n      <span v-if=\"align === 'left'\" :class=\"`${name}__icon-wrap ${name}__icon-left-wrap`\">\n        <input type=\"radio\" :class=\"`${name}__original-left`\" v-bind=\"inputProps\" @click=\"radioOrgChange\" />\n        <div :class=\"iconClass\">\n          <t-node :content=\"iconContent\"></t-node>\n        </div>\n      </span>\n      <span v-if=\"labelContent || radioContent\" :class=\"[`${name}__label-wrap`]\">\n        <span v-if=\"labelContent\" :class=\"titleClasses\" @click=\"radioOrgChange\">\n          <t-node :content=\"labelContent\"></t-node>\n        </span>\n        <div v-if=\"radioContent\" :class=\"`${name}__content-inner`\" @click=\"radioContentChange\">\n          <t-node :content=\"radioContent\"></t-node>\n        </div>\n      </span>\n      <span v-if=\"align === 'right'\" :class=\"`${name}__icon-wrap ${name}__icon-right-wrap`\">\n        <input type=\"radio\" :class=\"`${name}__original-right`\" v-bind=\"inputProps\" @click=\"radioOrgChange\" />\n        <div :class=\"iconClass\">\n          <t-node :content=\"iconContent\"></t-node>\n        </div>\n      </span>\n    </span>\n    <!--下边框 -->\n    <div v-if=\"!borderless\" :class=\"`${name}__border ${name}__border--${align}`\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject, computed, defineComponent, getCurrentInstance, h, SetupContext, Ref, toRefs } from 'vue';\nimport { CheckIcon } from 'tdesign-icons-vue-next';\nimport { renderContent, renderTNode, TNode, NOOP, useDefault, useVModel } from '../shared';\nimport ClASSNAMES from '../shared/constants';\nimport config from '../config';\nimport RadioProps from './props';\nimport { RadioValue, TdRadioGroupProps, TdRadioProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-radio`;\n\nconst iconDefault = [h(CheckIcon), ''];\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: {\n    ...RadioProps,\n    borderless: {\n      type: Boolean,\n      value: false,\n    },\n  },\n  emits: ['update:checked', 'update:modelValue', 'change'],\n  setup(props, context: SetupContext) {\n    const { checked, modelValue } = toRefs(props);\n    const [innerChecked, setInnerChecked] = useVModel(\n      checked,\n      modelValue,\n      props.defaultChecked,\n      props.onChange,\n      'checked',\n    );\n\n    const rootGroupProps = inject('rootGroupProps', {}) as TdRadioGroupProps;\n    const rootGroupValue = inject<Ref<RadioValue>>('rootGroupValue');\n    const rootGroupChange = inject('rootGroupChange', NOOP) as (val: RadioValue, e: Event) => void;\n    const disabled = computed(() => (rootGroupProps.disabled !== undefined ? rootGroupProps.disabled : props.disabled));\n    const radioChecked = computed(() => (rootGroupValue ? props.value === rootGroupValue.value : innerChecked.value));\n\n    // input props attribute\n    const inputProps = computed(() => ({\n      name: rootGroupProps.name || props.name,\n      checked: radioChecked.value,\n      disabled: disabled.value,\n      value: props.value,\n    }));\n\n    const internalInstance = getCurrentInstance();\n    const labelContent = computed(() => renderContent(internalInstance, 'default', 'label'));\n    const radioContent = computed(() => renderTNode(internalInstance, 'content'));\n    const iconContent = computed(() => {\n      if (!props.icon) {\n        return;\n      }\n      let curContent: any = '';\n      const iconIndex = radioChecked.value ? 0 : 1;\n      const isIconArray = Array.isArray(props.icon);\n      if (isIconArray) {\n        return (curContent = props.icon[iconIndex]);\n      }\n      return iconDefault[iconIndex];\n    });\n\n    const radioClasses = computed(() => [\n      `${name}`,\n      {\n        [ClASSNAMES.STATUS.checked]: radioChecked.value,\n        [ClASSNAMES.STATUS.disabled]: disabled.value,\n      },\n    ]);\n\n    const titleClasses = computed(() => [\n      `${name}__content-title`,\n      {\n        [ClASSNAMES.STATUS.disabled]: disabled.value,\n        [`${name}__content-right-title`]: props.align === 'right',\n      },\n    ]);\n\n    const iconClass = computed(() => [\n      `${name}__icon`,\n      {\n        [`${name}__icon--checked`]: radioChecked.value,\n        [`${name}__icon--disabled`]: disabled.value,\n        [`${name}__icon--strock`]: props.icon === 'stroke-line',\n        [`${name}__icon--custom`]: Array.isArray(props.icon),\n      },\n    ]);\n\n    const radioContentChange = (e: Event) => {\n      if (props.contentDisabled) {\n        return;\n      }\n      radioOrgChange(e);\n    };\n\n    const radioOrgChange = (e: Event) => {\n      if (disabled.value) {\n        return;\n      }\n      if (rootGroupChange !== NOOP && props.value !== undefined) {\n        rootGroupChange(props.value, e);\n      } else {\n        setInnerChecked(!radioChecked.value, { e });\n      }\n    };\n\n    return {\n      name,\n      iconClass,\n      radioContent,\n      labelContent,\n      iconContent,\n      radioContentChange,\n      radioOrgChange,\n      radioClasses,\n      titleClasses,\n      inputProps,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"radioClasses\">\n    <span :class=\"[`${name}__content-wrap`]\">\n      <span v-if=\"align === 'left'\" :class=\"`${name}__icon-wrap ${name}__icon-left-wrap`\">\n        <input type=\"radio\" :class=\"`${name}__original-left`\" v-bind=\"inputProps\" @click=\"radioOrgChange\" />\n        <div :class=\"iconClass\">\n          <t-node :content=\"iconContent\"></t-node>\n        </div>\n      </span>\n      <span v-if=\"labelContent || radioContent\" :class=\"[`${name}__label-wrap`]\">\n        <span v-if=\"labelContent\" :class=\"titleClasses\" @click=\"radioOrgChange\">\n          <t-node :content=\"labelContent\"></t-node>\n        </span>\n        <div v-if=\"radioContent\" :class=\"`${name}__content-inner`\" @click=\"radioContentChange\">\n          <t-node :content=\"radioContent\"></t-node>\n        </div>\n      </span>\n      <span v-if=\"align === 'right'\" :class=\"`${name}__icon-wrap ${name}__icon-right-wrap`\">\n        <input type=\"radio\" :class=\"`${name}__original-right`\" v-bind=\"inputProps\" @click=\"radioOrgChange\" />\n        <div :class=\"iconClass\">\n          <t-node :content=\"iconContent\"></t-node>\n        </div>\n      </span>\n    </span>\n    <!--下边框 -->\n    <div v-if=\"!borderless\" :class=\"`${name}__border ${name}__border--${align}`\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject, computed, defineComponent, getCurrentInstance, h, SetupContext, Ref, toRefs } from 'vue';\nimport { CheckIcon } from 'tdesign-icons-vue-next';\nimport { renderContent, renderTNode, TNode, NOOP, useDefault, useVModel } from '../shared';\nimport ClASSNAMES from '../shared/constants';\nimport config from '../config';\nimport RadioProps from './props';\nimport { RadioValue, TdRadioGroupProps, TdRadioProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-radio`;\n\nconst iconDefault = [h(CheckIcon), ''];\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: {\n    ...RadioProps,\n    borderless: {\n      type: Boolean,\n      value: false,\n    },\n  },\n  emits: ['update:checked', 'update:modelValue', 'change'],\n  setup(props, context: SetupContext) {\n    const { checked, modelValue } = toRefs(props);\n    const [innerChecked, setInnerChecked] = useVModel(\n      checked,\n      modelValue,\n      props.defaultChecked,\n      props.onChange,\n      'checked',\n    );\n\n    const rootGroupProps = inject('rootGroupProps', {}) as TdRadioGroupProps;\n    const rootGroupValue = inject<Ref<RadioValue>>('rootGroupValue');\n    const rootGroupChange = inject('rootGroupChange', NOOP) as (val: RadioValue, e: Event) => void;\n    const disabled = computed(() => (rootGroupProps.disabled !== undefined ? rootGroupProps.disabled : props.disabled));\n    const radioChecked = computed(() => (rootGroupValue ? props.value === rootGroupValue.value : innerChecked.value));\n\n    // input props attribute\n    const inputProps = computed(() => ({\n      name: rootGroupProps.name || props.name,\n      checked: radioChecked.value,\n      disabled: disabled.value,\n      value: props.value,\n    }));\n\n    const internalInstance = getCurrentInstance();\n    const labelContent = computed(() => renderContent(internalInstance, 'default', 'label'));\n    const radioContent = computed(() => renderTNode(internalInstance, 'content'));\n    const iconContent = computed(() => {\n      if (!props.icon) {\n        return;\n      }\n      let curContent: any = '';\n      const iconIndex = radioChecked.value ? 0 : 1;\n      const isIconArray = Array.isArray(props.icon);\n      if (isIconArray) {\n        return (curContent = props.icon[iconIndex]);\n      }\n      return iconDefault[iconIndex];\n    });\n\n    const radioClasses = computed(() => [\n      `${name}`,\n      {\n        [ClASSNAMES.STATUS.checked]: radioChecked.value,\n        [ClASSNAMES.STATUS.disabled]: disabled.value,\n      },\n    ]);\n\n    const titleClasses = computed(() => [\n      `${name}__content-title`,\n      {\n        [ClASSNAMES.STATUS.disabled]: disabled.value,\n        [`${name}__content-right-title`]: props.align === 'right',\n      },\n    ]);\n\n    const iconClass = computed(() => [\n      `${name}__icon`,\n      {\n        [`${name}__icon--checked`]: radioChecked.value,\n        [`${name}__icon--disabled`]: disabled.value,\n        [`${name}__icon--strock`]: props.icon === 'stroke-line',\n        [`${name}__icon--custom`]: Array.isArray(props.icon),\n      },\n    ]);\n\n    const radioContentChange = (e: Event) => {\n      if (props.contentDisabled) {\n        return;\n      }\n      radioOrgChange(e);\n    };\n\n    const radioOrgChange = (e: Event) => {\n      if (disabled.value) {\n        return;\n      }\n      if (rootGroupChange !== NOOP && props.value !== undefined) {\n        rootGroupChange(props.value, e);\n      } else {\n        setInnerChecked(!radioChecked.value, { e });\n      }\n    };\n\n    return {\n      name,\n      iconClass,\n      radioContent,\n      labelContent,\n      iconContent,\n      radioContentChange,\n      radioOrgChange,\n      radioClasses,\n      titleClasses,\n      inputProps,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}