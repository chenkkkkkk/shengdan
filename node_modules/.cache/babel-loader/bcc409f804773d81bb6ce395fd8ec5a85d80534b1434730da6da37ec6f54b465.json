{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { defineComponent, ref, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, Fragment, renderList, normalizeStyle, renderSlot, createBlock, resolveDynamicComponent, createVNode, toDisplayString, createCommentVNode } from 'vue';\nimport { StarFilledIcon, StarIcon } from 'tdesign-icons-vue-next';\nimport rateProps from './props.js';\nimport config from '../config.js';\nimport '../shared/index.js';\nimport { useDefault } from '../shared/useDefault/index.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/render.js';\nimport '@babel/runtime/helpers/typeof';\nimport 'lodash/camelCase';\nimport '../shared/render-tnode.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-rate\");\nvar script = defineComponent({\n  name: name,\n  components: {\n    StarFilledIcon: StarFilledIcon,\n    StarIcon: StarIcon\n  },\n  props: rateProps,\n  emits: [\"change\", \"update:value\", \"update:modelValue\"],\n  setup: function setup(props, context) {\n    var rateWrapper = ref(null);\n    var _useDefault = useDefault(props, context.emit, \"value\", \"change\"),\n      _useDefault2 = _slicedToArray(_useDefault, 1),\n      actualVal = _useDefault2[0];\n    var rateText = computed(function () {\n      if (Array.isArray(props.texts) && props.texts.length > 0) {\n        return props.texts[actualVal.value - 1];\n      }\n      return actualVal.value > 0 ? \"\".concat(actualVal.value, \" \\u5206\") : \"\";\n    });\n    var colors = computed(function () {\n      if (Array.isArray(props.color)) return props.color;\n      return [props.color, void 0];\n    });\n    var iconHalfStyle = function iconHalfStyle(n) {\n      return {\n        color: actualVal.value + 0.5 === n || actualVal.value >= n ? colors.value[0] : \"transparent\"\n      };\n    };\n    var iconFullStyle = function iconFullStyle(n) {\n      return {\n        color: actualVal.value >= n ? colors.value[0] : \"transparent\"\n      };\n    };\n    var startComponent = props.variant === \"filled\" ? StarFilledIcon : StarIcon;\n    var classes = function classes(n) {\n      var _ref;\n      return _ref = {}, _defineProperty(_ref, \"\".concat(name, \"--item\"), true), _defineProperty(_ref, \"\".concat(name, \"-full\"), actualVal.value >= n), _defineProperty(_ref, \"\".concat(name, \"-half\"), actualVal.value + 0.5 === n), _ref;\n    };\n    function onClick(current) {\n      if (props.disabled) return;\n      actualVal.value = props.clearable && actualVal.value === current ? 0 : current;\n    }\n    var ranges = [];\n    function onTouchstart() {\n      ranges = [];\n      if (rateWrapper.value) {\n        var items = rateWrapper.value.children;\n        Array.from(items).forEach(function (node, index) {\n          var _node$getBoundingClie = node.getBoundingClientRect(),\n            left = _node$getBoundingClie.left,\n            width = _node$getBoundingClie.width;\n          if (props.allowHalf) {\n            ranges.push({\n              score: index + 0.5,\n              left: left\n            }, {\n              score: index + 1,\n              left: left + width / 2\n            });\n          } else {\n            ranges.push({\n              score: index + 1,\n              left: left\n            });\n          }\n        });\n      }\n    }\n    function onTouchmove(e) {\n      if (props.disabled) return;\n      var clientX = e.touches[0].clientX;\n      var score = props.allowHalf ? 0.5 : 1;\n      for (var i = ranges.length - 1; i >= 0; i--) {\n        if (clientX > ranges[i].left) {\n          score = ranges[i].score;\n          break;\n        } else {\n          score = 0;\n        }\n      }\n      actualVal.value = score;\n    }\n    return {\n      name: ref(name),\n      classes: classes,\n      rateWrapper: rateWrapper,\n      actualVal: actualVal,\n      iconHalfStyle: iconHalfStyle,\n      iconFullStyle: iconFullStyle,\n      colors: colors,\n      startComponent: startComponent,\n      rateText: rateText,\n      onClick: onClick,\n      onTouchstart: onTouchstart,\n      onTouchmove: onTouchmove\n    };\n  }\n});\nvar _hoisted_1 = [\"onClick\"];\nvar _hoisted_2 = [\"onClick\"];\nvar _hoisted_3 = [\"onClick\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_star_filled_icon = resolveComponent(\"star-filled-icon\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name))\n  }, [createElementVNode(\"ul\", {\n    ref: \"rateWrapper\",\n    class: normalizeClass(\"\".concat(_ctx.name, \"--list\")),\n    onTouchstart: _cache[0] || (_cache[0] = function () {\n      return _ctx.onTouchstart && _ctx.onTouchstart.apply(_ctx, arguments);\n    }),\n    onTouchmove: _cache[1] || (_cache[1] = function () {\n      return _ctx.onTouchmove && _ctx.onTouchmove.apply(_ctx, arguments);\n    })\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.count, function (n) {\n    return openBlock(), createElementBlock(\"li\", {\n      key: n,\n      class: normalizeClass(_ctx.classes(n)),\n      style: normalizeStyle({\n        marginRight: \"\".concat(_ctx.count > n ? _ctx.gap : 0, \"px\")\n      })\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass(\"\".concat(_ctx.name, \"--placeholder\"))\n    }, [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.startComponent), {\n        size: _ctx.size,\n        style: normalizeStyle({\n          color: _ctx.colors[1]\n        })\n      }, null, 8, [\"size\", \"style\"]))];\n    })], 2), _ctx.allowHalf ? (openBlock(), createElementBlock(Fragment, {\n      key: 0\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass(\"\".concat(_ctx.name, \"--icon-left\")),\n      onClick: function onClick($event) {\n        return _ctx.onClick(n - 0.5);\n      }\n    }, [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n      return [createVNode(_component_star_filled_icon, {\n        size: _ctx.size,\n        style: normalizeStyle(_ctx.iconHalfStyle(n))\n      }, null, 8, [\"size\", \"style\"])];\n    })], 10, _hoisted_1), createElementVNode(\"span\", {\n      class: normalizeClass(\"\".concat(_ctx.name, \"--icon-right\")),\n      onClick: function onClick($event) {\n        return _ctx.onClick(n);\n      }\n    }, [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n      return [createVNode(_component_star_filled_icon, {\n        size: _ctx.size,\n        style: normalizeStyle(_ctx.iconFullStyle(n))\n      }, null, 8, [\"size\", \"style\"])];\n    })], 10, _hoisted_2)], 64)) : (openBlock(), createElementBlock(\"span\", {\n      key: 1,\n      class: normalizeClass(\"\".concat(_ctx.name, \"--icon\")),\n      onClick: function onClick($event) {\n        return _ctx.onClick(n);\n      }\n    }, [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n      return [createVNode(_component_star_filled_icon, {\n        size: _ctx.size,\n        style: normalizeStyle(_ctx.iconFullStyle(n))\n      }, null, 8, [\"size\", \"style\"])];\n    })], 10, _hoisted_3))], 6);\n  }), 128))], 34), _ctx.showText ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass(\"\".concat(_ctx.name, \"--text\"))\n  }, toDisplayString(_ctx.rateText), 3)) : createCommentVNode(\"\", true)], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAOhB,aAAeG,eAAgB;EAC7BD;EACAE,YAAY;IAAEC;IAAgBC,QAAS,EAATA;GAAS;EACvCC,KAAO;EACPC,KAAO,GAAC,QAAU,kBAAgB,mBAAmB;EACrDC,OAAMF,sBAAOG,OAAuB;IAC5B,kBAAcC,IAAwB,IAAI;IAC1C,IAAcC,yBAAgCL,OAAOG,OAAQ,OAAM,SAAS,QAAQ;MAAAG;MAAnFC,SAAS;IACV,eAAWC,SAAS,YAAM;MAC1B,UAAMC,QAAQT,KAAM,MAAK,KAAKA,KAAM,OAAMU,SAAS,CAAG;QACjD,aAAMC,KAAM,WAAUC,KAAQ;MACvC;MAEA,OAAOL,SAAU,SAAQ,CAAI,aAAGA,UAAUK,KAAY;IACxD,CAAC;IACK,aAASJ,SAAS,YAAM;MACxB,UAAMC,OAAQ,OAAMI,KAAK,GAAG,OAAOb,KAAM;MAEtC,QAACA,KAAM,QAAO,KAAS;IAChC,CAAC;IAEK,oBAAgB,SAAhBc,cAAiBC,CAAe;MAAA;QACpCF,OAAON,SAAU,SAAQ,GAAQ,UAAKA,UAAUK,KAAS,QAAII,MAAO,OAAM,CAAK;OACjF;KAAA;IACM,oBAAgB,SAAhBC,cAAiBF,CAAe;MAAA;QACpCF,OAAON,SAAU,UAASQ,CAAI,UAAOH,MAAM,CAAK;OAClD;KAAA;IAEA,IAAMM,cAAiB,SAAMC,OAAY,gBAAWrB,cAAiB;IAE/D,cAAU,SAAVsB,QAAWL,CAAe;MAAA;MAAA,OAC1BpB,+CAAe,oDACfA,IAAc,sBAAUiB,KAAS,MACjCjB,sCAAc,sBAAUiB,QAAQ,GAAQ;KAC9C;IAEA,SAASS,QAAQC,OAAiB;MAChC,IAAItB,KAAM,WAAU;MACpBO,UAAUK,QAAQZ,KAAM,cAAaO,SAAU,WAAUe,UAAU,CAAI;IACzE;IAEA,IAAIC,SAA4B,EAAC;IACjC,SAASC,YAAe;MACtBD,SAAS,EAAC;MAEV,IAAIE,YAAYb,KAAO;QACf,YAAQa,YAAYb,KAAM;QAChCc,MAAMC,KAAKC,KAAK,EAAEC,OAAQ,WAACC,MAAMC,KAAU;UACzC,IAAwBD,6BAAKE,qBAAsB;YAA3CC;YAAMC,KAAM,yBAANA,KAAM;UACpB,IAAIlC,MAAMmC,SAAW;YACnBZ,OAAOa,IAAK;cAAEC,KAAO,UAAQ;cAAKJ,IAAK,EAALA;YAAK,GAAG;cAAEI,OAAON,QAAQ,CAAG;cAAAE,MAAMA,IAAO,WAAQ;YAAE,CAAC;UACxF,CAAO;YACLV,OAAOa,KAAK;cAAEC,OAAON,KAAQ;cAAGE;YAAK,CAAC;UACxC;QACF,CAAC;MACH;IACF;IAEA,SAASK,YAAYC,CAAe;MAClC,IAAIvC,KAAM,WAAU;MAEpB,IAAQwC,UAAYD,EAAEE,OAAQ,IAAtBD;MAEJ,YAAgBxC,KAAM,aAAY,GAAM;MAE5C,SAAS0C,IAAInB,MAAO,UAAS,CAAG,OAAK,GAAGmB,CAAK;QACvC,cAAUnB,MAAO,IAAGU,IAAM;UAC5BI,QAAQd,OAAOmB,CAAG;UAClB;QACF,CAAO;UACGL;QACV;MACF;MACA9B,UAAUK,KAAQ;IACpB;IAEO;MACLjB,MAAMS,IAAIT,IAAI;MACdyB;MACAK;MACAlB;MACAO;MACAG;MACAD;MACAE;MACAyB;MACAtB;MACAG;MACAc;KACF;EACF;AACF,CAAC;;;;;;oBC1IC,qBA4BK;IA5BCM,sBAAUC,eAAIlD;MAClBmD,mBAyBI;IAzBA1C,GAAI;IAAewC,gCAAUC,KAAIlD;IAAW6B;aAAYqB,KAAYrB;KAAA;IAAGc;aAAWO,KAAWP;IAAA;wBAC/FS,kBAuBI,2BAvBY,MAAKC,iBAAVjC,CAAE;sBAAb,qBAuBI;MAvBoBkC,GAAK;MAAIL,KAAK,iBAAEC,IAAO,SAAC9B,CAAC;MAAImC,OAAyBC;QAAAC,oCAAQrC,CAAI,QAAEsC;OAAA;QAC1FP,mBAIM;MAJCF,sBAAUC,eAAIlD;QACnB2D,WAEMT,yBAFN;MAAA,OAEM,EADJU,yBAA4EC,uBAA5D,MAActC;QAAGuC,MAAMZ,IAAI;QAAGK;iBAAgBL,IAAM;SAAA;;aAGxDA,KAASV,0BAAzBY,mBAWUW;MAAAT;IAAA,IAVRH,mBAIM;MAJCF,gCAAUC,KAAIlD;MAAgB0B,OAAK;QAAA,OAAEwB,IAAO,SAAC9B,IAAE;MAAA;QACpDuC,WAEMT,yBAFN;MAAA,OAEM,CADJc,YAA0DC;QAAvCH,MAAMZ,IAAI;QAAGK,KAAK,iBAAEL,IAAa,eAAC9B,CAAC;;0BAG1D+B,mBAIM;MAJCF,gCAAUC,KAAIlD;MAAiB0B,OAAK;QAAA,OAAEwB,IAAO,SAAC9B,CAAC;MAAA;QACpDuC,WAEMT,yBAFN;MAAA,OAEM,CADJc,YAA0DC;QAAvCH,MAAMZ,IAAI;QAAGK,KAAK,iBAAEL,IAAa,eAAC9B,CAAC;;gDAI5DgC,mBAIM;;MAJQH,gCAAUC,KAAIlD;MAAW0B,OAAK;QAAA,OAAEwB,IAAO,SAAC9B,CAAC;MAAA;QACrDuC,WAEMT,yBAFN;MAAA,OAEM,CADJc,YAA0DC;QAAvCH,MAAMZ,IAAI;QAAGK,KAAK,iBAAEL,IAAa,eAAC9B,CAAC;;;mBAKlD8B,IAAQ,0BAApBE,mBAAmE;;IAA5CH,sBAAUC,eAAIlD;qBAAakD,IAAO","names":["prefix","config","name","defineComponent","components","StarFilledIcon","StarIcon","props","emits","setup","context","ref","useDefault","_useDefault2","actualVal","computed","isArray","length","texts","value","color","iconHalfStyle","n","colors","iconFullStyle","startComponent","variant","classes","onClick","current","ranges","onTouchstart","rateWrapper","Array","from","items","forEach","node","index","getBoundingClientRect","left","width","allowHalf","push","score","onTouchmove","e","clientX","touches","i","rateText","class","_ctx","_createElementVNode","_createElementBlock","count","key","style","_normalizeStyle","marginRight","gap","_renderSlot","_openBlock","_resolveDynamicComponent","size","_Fragment","_createVNode","_component_star_filled_icon"],"sources":["../../src/rate/rate.vue","../../src/rate/rate.vue?vue&type=template&id=40c12d14&lang.js"],"sourcesContent":["<template>\n  <div :class=\"`${name}`\">\n    <ul ref=\"rateWrapper\" :class=\"`${name}--list`\" @touchstart=\"onTouchstart\" @touchmove=\"onTouchmove\">\n      <li v-for=\"n in count\" :key=\"n\" :class=\"classes(n)\" :style=\"{ marginRight: `${count > n ? gap : 0}px` }\">\n        <span :class=\"`${name}--placeholder`\">\n          <slot name=\"icon\">\n            <component :is=\"startComponent\" :size=\"size\" :style=\"{ color: colors[1] }\" />\n          </slot>\n        </span>\n        <template v-if=\"allowHalf\">\n          <span :class=\"`${name}--icon-left`\" @click=\"onClick(n - 0.5)\">\n            <slot name=\"icon\">\n              <star-filled-icon :size=\"size\" :style=\"iconHalfStyle(n)\" />\n            </slot>\n          </span>\n          <span :class=\"`${name}--icon-right`\" @click=\"onClick(n)\">\n            <slot name=\"icon\">\n              <star-filled-icon :size=\"size\" :style=\"iconFullStyle(n)\" />\n            </slot>\n          </span>\n        </template>\n        <span v-else :class=\"`${name}--icon`\" @click=\"onClick(n)\">\n          <slot name=\"icon\">\n            <star-filled-icon :size=\"size\" :style=\"iconFullStyle(n)\" />\n          </slot>\n        </span>\n      </li>\n    </ul>\n    <span v-if=\"showText\" :class=\"`${name}--text`\">{{ rateText }}</span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, SetupContext, defineComponent, ExtractPropTypes, PropType, ComputedRef } from 'vue';\nimport { StarFilledIcon, StarIcon } from 'tdesign-icons-vue-next';\nimport rateProps from './props';\nimport config from '../config';\nimport { TdRateProps } from './type';\nimport { useDefault } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-rate`;\n\ninterface RangeTypes {\n  score: number;\n  left: number;\n}\n\nexport default defineComponent({\n  name,\n  components: { StarFilledIcon, StarIcon },\n  props: rateProps,\n  emits: ['change', 'update:value', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const rateWrapper = ref<HTMLElement | null>(null);\n    const [actualVal] = useDefault<number, TdRateProps>(props, context.emit, 'value', 'change');\n    const rateText = computed(() => {\n      if (Array.isArray(props.texts) && props.texts.length > 0) {\n        return props.texts[actualVal.value - 1];\n      }\n\n      return actualVal.value > 0 ? `${actualVal.value} 分` : '';\n    });\n    const colors = computed(() => {\n      if (Array.isArray(props.color)) return props.color;\n\n      return [props.color, undefined];\n    });\n\n    const iconHalfStyle = (n: number) => ({\n      color: actualVal.value + 0.5 === n || actualVal.value >= n ? colors.value[0] : 'transparent',\n    });\n    const iconFullStyle = (n: number) => ({\n      color: actualVal.value >= n ? colors.value[0] : 'transparent',\n    });\n\n    const startComponent = props.variant === 'filled' ? StarFilledIcon : StarIcon;\n\n    const classes = (n: number) => ({\n      [`${name}--item`]: true,\n      [`${name}-full`]: actualVal.value >= n,\n      [`${name}-half`]: actualVal.value + 0.5 === n,\n    });\n\n    function onClick(current: number) {\n      if (props.disabled) return;\n      actualVal.value = props.clearable && actualVal.value === current ? 0 : current;\n    }\n\n    let ranges: Array<RangeTypes> = [];\n    function onTouchstart() {\n      ranges = [];\n\n      if (rateWrapper.value) {\n        const items = rateWrapper.value.children;\n        Array.from(items).forEach((node, index) => {\n          const { left, width } = node.getBoundingClientRect();\n          if (props.allowHalf) {\n            ranges.push({ score: index + 0.5, left }, { score: index + 1, left: left + width / 2 });\n          } else {\n            ranges.push({ score: index + 1, left });\n          }\n        });\n      }\n    }\n\n    function onTouchmove(e: TouchEvent) {\n      if (props.disabled) return;\n\n      const { clientX } = e.touches[0];\n\n      let score: number = props.allowHalf ? 0.5 : 1;\n\n      for (let i = ranges.length - 1; i >= 0; i--) {\n        if (clientX > ranges[i].left) {\n          score = ranges[i].score;\n          break;\n        } else {\n          score = 0;\n        }\n      }\n      actualVal.value = score;\n    }\n\n    return {\n      name: ref(name),\n      classes,\n      rateWrapper,\n      actualVal,\n      iconHalfStyle,\n      iconFullStyle,\n      colors,\n      startComponent,\n      rateText,\n      onClick,\n      onTouchstart,\n      onTouchmove,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"`${name}`\">\n    <ul ref=\"rateWrapper\" :class=\"`${name}--list`\" @touchstart=\"onTouchstart\" @touchmove=\"onTouchmove\">\n      <li v-for=\"n in count\" :key=\"n\" :class=\"classes(n)\" :style=\"{ marginRight: `${count > n ? gap : 0}px` }\">\n        <span :class=\"`${name}--placeholder`\">\n          <slot name=\"icon\">\n            <component :is=\"startComponent\" :size=\"size\" :style=\"{ color: colors[1] }\" />\n          </slot>\n        </span>\n        <template v-if=\"allowHalf\">\n          <span :class=\"`${name}--icon-left`\" @click=\"onClick(n - 0.5)\">\n            <slot name=\"icon\">\n              <star-filled-icon :size=\"size\" :style=\"iconHalfStyle(n)\" />\n            </slot>\n          </span>\n          <span :class=\"`${name}--icon-right`\" @click=\"onClick(n)\">\n            <slot name=\"icon\">\n              <star-filled-icon :size=\"size\" :style=\"iconFullStyle(n)\" />\n            </slot>\n          </span>\n        </template>\n        <span v-else :class=\"`${name}--icon`\" @click=\"onClick(n)\">\n          <slot name=\"icon\">\n            <star-filled-icon :size=\"size\" :style=\"iconFullStyle(n)\" />\n          </slot>\n        </span>\n      </li>\n    </ul>\n    <span v-if=\"showText\" :class=\"`${name}--text`\">{{ rateText }}</span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, SetupContext, defineComponent, ExtractPropTypes, PropType, ComputedRef } from 'vue';\nimport { StarFilledIcon, StarIcon } from 'tdesign-icons-vue-next';\nimport rateProps from './props';\nimport config from '../config';\nimport { TdRateProps } from './type';\nimport { useDefault } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-rate`;\n\ninterface RangeTypes {\n  score: number;\n  left: number;\n}\n\nexport default defineComponent({\n  name,\n  components: { StarFilledIcon, StarIcon },\n  props: rateProps,\n  emits: ['change', 'update:value', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const rateWrapper = ref<HTMLElement | null>(null);\n    const [actualVal] = useDefault<number, TdRateProps>(props, context.emit, 'value', 'change');\n    const rateText = computed(() => {\n      if (Array.isArray(props.texts) && props.texts.length > 0) {\n        return props.texts[actualVal.value - 1];\n      }\n\n      return actualVal.value > 0 ? `${actualVal.value} 分` : '';\n    });\n    const colors = computed(() => {\n      if (Array.isArray(props.color)) return props.color;\n\n      return [props.color, undefined];\n    });\n\n    const iconHalfStyle = (n: number) => ({\n      color: actualVal.value + 0.5 === n || actualVal.value >= n ? colors.value[0] : 'transparent',\n    });\n    const iconFullStyle = (n: number) => ({\n      color: actualVal.value >= n ? colors.value[0] : 'transparent',\n    });\n\n    const startComponent = props.variant === 'filled' ? StarFilledIcon : StarIcon;\n\n    const classes = (n: number) => ({\n      [`${name}--item`]: true,\n      [`${name}-full`]: actualVal.value >= n,\n      [`${name}-half`]: actualVal.value + 0.5 === n,\n    });\n\n    function onClick(current: number) {\n      if (props.disabled) return;\n      actualVal.value = props.clearable && actualVal.value === current ? 0 : current;\n    }\n\n    let ranges: Array<RangeTypes> = [];\n    function onTouchstart() {\n      ranges = [];\n\n      if (rateWrapper.value) {\n        const items = rateWrapper.value.children;\n        Array.from(items).forEach((node, index) => {\n          const { left, width } = node.getBoundingClientRect();\n          if (props.allowHalf) {\n            ranges.push({ score: index + 0.5, left }, { score: index + 1, left: left + width / 2 });\n          } else {\n            ranges.push({ score: index + 1, left });\n          }\n        });\n      }\n    }\n\n    function onTouchmove(e: TouchEvent) {\n      if (props.disabled) return;\n\n      const { clientX } = e.touches[0];\n\n      let score: number = props.allowHalf ? 0.5 : 1;\n\n      for (let i = ranges.length - 1; i >= 0; i--) {\n        if (clientX > ranges[i].left) {\n          score = ranges[i].score;\n          break;\n        } else {\n          score = 0;\n        }\n      }\n      actualVal.value = score;\n    }\n\n    return {\n      name: ref(name),\n      classes,\n      rateWrapper,\n      actualVal,\n      iconHalfStyle,\n      iconFullStyle,\n      colors,\n      startComponent,\n      rateText,\n      onClick,\n      onTouchstart,\n      onTouchmove,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}