{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _typeof from '@babel/runtime/helpers/typeof';\nimport { toRefs, ref, watch, onMounted } from 'vue';\nimport '../../shared/index.js';\nimport { useChildSlots } from '../../shared/useChildSlots/index.js';\nimport '../../shared/functions.js';\nimport '../../shared/util.js';\nimport '../../shared/component.js';\nimport '../../shared/constants.js';\nimport '../../config.js';\nimport '../../shared/render.js';\nimport 'lodash/camelCase';\nimport '../../shared/render-tnode.js';\nimport '../../shared/useToggle/index.js';\nimport '../../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../../shared/useCountDown/utils.js';\nimport '../../shared/useDefault/index.js';\nimport '../../shared/useEmitEvent/index.js';\nimport '../../shared/useVModel/index.js';\nimport '../../shared/useTouch/index.js';\nimport '../../shared/useScrollParent/index.js';\nimport '../../shared/useExpose/index.js';\nimport '../../shared/useTest/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar getOptionListBySlots = function getOptionListBySlots(nodes) {\n  var arr = [];\n  nodes === null || nodes === void 0 ? void 0 : nodes.forEach(function (node) {\n    var option = node.props;\n    if ((option === null || option === void 0 ? void 0 : option[\"check-all\"]) === \"\" || (option === null || option === void 0 ? void 0 : option[\"check-all\"]) === true) {\n      option.checkAll = true;\n    }\n    option && arr.push(option);\n  });\n  return arr;\n};\nvar getOptions = function getOptions(props, slots) {\n  var _toRefs = toRefs(props),\n    options = _toRefs.options;\n  var optionList = ref([]);\n  watch(options, function (options2) {\n    if (!options2) return [];\n    optionList.value = options2.map(function (item) {\n      var r = {};\n      if (_typeof(item) !== \"object\") {\n        r = {\n          label: String(item),\n          value: item\n        };\n      } else {\n        r = _objectSpread({}, item);\n        r.disabled = r.disabled === void 0 ? props.disabled : r.disabled;\n      }\n      return r;\n    });\n  }, {\n    immediate: true\n  });\n  onMounted(function () {\n    var nodes = slots.default && slots.default();\n    if (nodes !== void 0) {\n      optionList.value = getOptionListBySlots(useChildSlots(\"t-checkbox\"));\n    }\n  });\n  return optionList;\n};\nexport { getOptionListBySlots, getOptions };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKaA,uBAAuB,SAAvBA,qBAAwBC,KAAmB;EACtD,IAAMC,MAAgC,EAAC;EAChCD,4DAAQ,UAACE,IAAS;IACvB,IAAMC,SAASD,IAAK;IACpB,IAAI,OAAS,KAATC,cAAS,uBAATA,MAAS,mBAAiB,EAAM,4DAAS,kBAAiB,IAAM;MAClEA,OAAOC,QAAW;IACpB;IACUD,cAAIE,KAAKF,MAAM;EAC3B,CAAC;EACM;AACT;AAEa,iBAAa,SAAbG,WAAcC,OAAYC,KAAiB;EACtD,IAAoBC,iBAAOF,KAAK;IAAxBG;EACF,iBAAaC,GAAyB,GAAE;EAE9CC,MACEF,SACA,UAACA,QAAY;IACX,IAAI,CAACA,UAAS,OAAO,EAAC;IACtBG,WAAWC,KAAQJ,YAAQK,GAAI,WAACC,IAAyB;MACvD,IAAIC,IAAuB,EAAC;MACxB,WAAOD,MAAS,aAAU;QAC5BC,IAAI;UAAEC,KAAO,SAAOF,IAAI;UAAGF,OAAOE;SAAK;MACzC,CAAO;QACDC,sBAAKD,IAAK;QACdC,EAAEE,WAAWF,CAAE,cAAa,KAAY,UAAME,WAAWF,CAAE;MAC7D;MACO;IACT,CAAC;EACH,GACA;IAAEG,WAAW;EAAK,EACpB;EAEAC,UAAU,YAAM;IACd,IAAMrB,KAAQ,SAAMsB,OAAW,UAAMA,OAAQ;IAC7C,IAAItB,UAAU,KAAW;MACvBa,WAAWC,KAAQ,wBAAqBS,aAAc,aAAY,CAAC;IACrE;EACF,CAAC;EAEM;AACT","names":["getOptionListBySlots","nodes","arr","node","option","checkAll","push","getOptions","props","slots","toRefs","options","ref","watch","optionList","value","map","item","r","label","disabled","immediate","onMounted","default","useChildSlots"],"sources":["../../../src/checkbox/hooks/getOptions.ts"],"sourcesContent":["import { VNode, Ref, ref, watch, onMounted, Slots, toRefs } from 'vue';\n\nimport { CheckboxOption, CheckboxOptionObj, TdCheckboxGroupProps } from '../type';\nimport { useChildSlots } from '../../shared';\n\nexport const getOptionListBySlots = (nodes: VNode[]) => {\n  const arr: Array<CheckboxOptionObj> = [];\n  nodes?.forEach((node) => {\n    const option = node.props as CheckboxOptionObj;\n    if (option?.['check-all'] === '' || option?.['check-all'] === true) {\n      option.checkAll = true;\n    }\n    option && arr.push(option);\n  });\n  return arr;\n};\n\nexport const getOptions = (props: any, slots: Slots) => {\n  const { options } = toRefs(props);\n  const optionList = ref<CheckboxOptionObj[]>([]);\n\n  watch(\n    options,\n    (options) => {\n      if (!options) return [];\n      optionList.value = options.map((item: CheckboxOption) => {\n        let r: CheckboxOptionObj = {};\n        if (typeof item !== 'object') {\n          r = { label: String(item), value: item };\n        } else {\n          r = { ...item };\n          r.disabled = r.disabled === undefined ? props.disabled : r.disabled;\n        }\n        return r;\n      });\n    },\n    { immediate: true },\n  );\n\n  onMounted(() => {\n    const nodes = slots.default && slots.default();\n    if (nodes !== undefined) {\n      optionList.value = getOptionListBySlots(useChildSlots('t-checkbox'));\n    }\n  });\n\n  return optionList;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}