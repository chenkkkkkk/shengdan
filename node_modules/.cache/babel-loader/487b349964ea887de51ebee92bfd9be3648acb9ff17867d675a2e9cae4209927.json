{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nvar DropdownMenuExpandState = /* @__PURE__ */function (DropdownMenuExpandState2) {\n  DropdownMenuExpandState2[\"expanded\"] = \"expanded\";\n  DropdownMenuExpandState2[\"collapsed\"] = \"collapsed\";\n  return DropdownMenuExpandState2;\n}(DropdownMenuExpandState || {});\nvar oldOverflow = null;\nvar context = {\n  expandedMenuControl: null,\n  recordMenuExpanded: function recordMenuExpanded(container, menuControl, action) {\n    var containerDom = container;\n    if (action === \"expanded\" /* expanded */) {\n      var expandedMenuControl = this.expandedMenuControl;\n      if (expandedMenuControl && expandedMenuControl !== menuControl) {\n        expandedMenuControl.collapseMenu();\n      }\n      this.expandedMenuControl = menuControl;\n      if (oldOverflow === null) {\n        oldOverflow = container.style.overflow;\n        containerDom.style.overflow = \"hidden\";\n      }\n    } else if (action === \"collapsed\" /* collapsed */) {\n      if (this.expandedMenuControl === menuControl) {\n        this.expandedMenuControl = null;\n      }\n      if (!this.expandedMenuControl && oldOverflow !== null) {\n        containerDom.style.overflow = oldOverflow;\n        oldOverflow = null;\n      }\n    }\n  }\n};\nexport { DropdownMenuExpandState, context };","map":{"version":3,"mappings":";;;;;;IAaYA,2EAAL;EACLA,mCAAW;EACXA,oCAAY;EAFFA;AAAA;AAUZ,IAAIC,WAA6B;AAE1B,IAAMC,OAA+B;EAC1CC,mBAAqB;EACrBC,gDAAmBC,SAAgB,eAAkCC,MAAiC;IACpG,IAAMC,YAAe;IACrB,IAAID,WAAW,UAAkC;MACzC,IAAEH,sBAAwB,KAAxBA;MACJ,2BAAuBA,wBAAwBK,WAAa;QAC9DL,oBAAoBM,YAAa;MACnC;MACA,KAAKN,mBAAsB;MAC3B,IAAIF,gBAAgB,IAAM;QACxBA,cAAcI,UAAUK,KAAM;QAC9BH,aAAaG,MAAMC,QAAW;MAChC;IACF,WAAWL,WAAW,WAAmC;MACnD,SAAKH,wBAAwBK,WAAa;QAC5C,KAAKL,mBAAsB;MAC7B;MACA,IAAI,CAAC,KAAKA,mBAAuB,oBAAgB,IAAM;QACrDI,aAAaG,MAAMC,QAAW;QAChBV;MAChB;IACF;EACF;AACF","names":["DropdownMenuExpandState","oldOverflow","context","expandedMenuControl","recordMenuExpanded","container","action","containerDom","menuControl","collapseMenu","style","overflow"],"sources":["../../src/dropdown-menu/context.ts"],"sourcesContent":["export type DropdownMenuDo = () => void;\n\nexport type DropdownMenuState = {\n  activeId: number | null;\n  barRect: any;\n  childCount: number;\n};\n\nexport type DropdownMenuControl = {\n  expandMenu: (item: any, idx: number) => void;\n  collapseMenu: () => void;\n};\n\nexport enum DropdownMenuExpandState {\n  expanded = 'expanded',\n  collapsed = 'collapsed',\n}\n\nexport type DropdownMenuContext = {\n  expandedMenuControl: DropdownMenuControl | null;\n  recordMenuExpanded(container: any, menuControl: DropdownMenuControl, action: DropdownMenuExpandState): void;\n};\n\nlet oldOverflow: string | null = null;\n\nexport const context: DropdownMenuContext = {\n  expandedMenuControl: null,\n  recordMenuExpanded(container: any, menuControl: DropdownMenuControl, action: DropdownMenuExpandState) {\n    const containerDom = container;\n    if (action === DropdownMenuExpandState.expanded) {\n      const { expandedMenuControl } = this;\n      if (expandedMenuControl && expandedMenuControl !== menuControl) {\n        expandedMenuControl.collapseMenu();\n      }\n      this.expandedMenuControl = menuControl;\n      if (oldOverflow === null) {\n        oldOverflow = container.style.overflow;\n        containerDom.style.overflow = 'hidden';\n      }\n    } else if (action === DropdownMenuExpandState.collapsed) {\n      if (this.expandedMenuControl === menuControl) {\n        this.expandedMenuControl = null;\n      }\n      if (!this.expandedMenuControl && oldOverflow !== null) {\n        containerDom.style.overflow = oldOverflow as string;\n        oldOverflow = null;\n      }\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}