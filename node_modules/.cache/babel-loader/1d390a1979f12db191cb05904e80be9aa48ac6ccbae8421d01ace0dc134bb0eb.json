{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nvar _excluded = [\"from\", \"to\", \"direction\"];\nfunction getBackgroundColor(color) {\n  if (typeof color === \"string\") {\n    return color;\n  }\n  if (Array.isArray(color)) {\n    if (color[0] && color[0][0] === \"#\") {\n      color.unshift(\"90deg\");\n    }\n    return \"linear-gradient( \".concat(color.join(\",\"), \" )\");\n  }\n  var from = color.from,\n    to = color.to,\n    _color$direction = color.direction,\n    direction = _color$direction === void 0 ? \"to right\" : _color$direction,\n    rest = _objectWithoutProperties(color, _excluded);\n  var keys = Object.keys(rest);\n  if (keys.length) {\n    keys = keys.sort(function (a, b) {\n      return parseFloat(a.substr(0, a.length - 1)) - parseFloat(b.substr(0, b.length - 1));\n    });\n    var tempArr = keys.map(function (key) {\n      return \"\".concat(rest[key], \" \").concat(key);\n    });\n    return \"linear-gradient(\".concat(direction, \", \").concat(tempArr.join(\",\"), \")\");\n  }\n  return \"linear-gradient(\".concat(direction, \", \").concat(from, \", \").concat(to, \")\");\n}\nexport { getBackgroundColor };","map":{"version":3,"mappings":";;;;;;;;;AAGO,SAASA,mBAAmBC,KAAmD;EAChF,WAAOA,UAAU,QAAU;IACtB;EACT;EACI,UAAMC,OAAQ,MAAK,CAAG;IACxB,IAAID,KAAM,OAAMA,KAAM,IAAG,OAAO,GAAK;MACnCA,MAAME,QAAQ,OAAO;IACvB;IACO,kCAAoBF,KAAM,MAAK,GAAG;EAC3C;EACA,IAAQG,IAAM,GAAwCH,MAA9CG,IAAM;IAAAC,KAAwCJ,MAAxCI;IAAAC,gBAAwCL,SAApCM,SAAY;IAAZA,SAAY;IAAeC,gCAASP;EAClD,WAAOQ,MAAO,MAAKD,IAAI;EAC3B,IAAIE,KAAKC,MAAQ;IACRD,YAAKE,KAAK,UAACC,GAAGC;aAAMC,UAAW,GAAEC,MAAO,IAAGH,CAAE,UAAS,CAAC,CAAC,IAAIE,WAAWD,CAAE,QAAO,GAAGA,CAAE,UAAS,CAAC,CAAC,CAAC;KAAA;IAClG,cAAUJ,KAAKO,GAAI,WAACC;uBAAgBV,KAAKU,kBAAQA,GAAK;IAAA;IAC5D,iCAA0BX,WAAcY,oBAAQ,MAAK,GAAG;EAC1D;EACO,iCAAmBZ,wBAAcH,IAAS;AACnD","names":["getBackgroundColor","color","isArray","unshift","from","to","_color$direction","direction","rest","Object","keys","length","sort","a","b","parseFloat","substr","map","key","tempArr"],"sources":["../../src/progress/utils.ts"],"sourcesContent":["export type Gradients = { [percent: string]: string };\nexport type FromTo = { from: string; to: string };\nexport type LinearGradient = { direction?: string } & (Gradients | FromTo);\nexport function getBackgroundColor(color: string | string[] | LinearGradient): string {\n  if (typeof color === 'string') {\n    return color;\n  }\n  if (Array.isArray(color)) {\n    if (color[0] && color[0][0] === '#') {\n      color.unshift('90deg');\n    }\n    return `linear-gradient( ${color.join(',')} )`;\n  }\n  const { from, to, direction = 'to right', ...rest } = color;\n  let keys = Object.keys(rest);\n  if (keys.length) {\n    keys = keys.sort((a, b) => parseFloat(a.substr(0, a.length - 1)) - parseFloat(b.substr(0, b.length - 1)));\n    const tempArr = keys.map((key: any) => `${rest[key]} ${key}`);\n    return `linear-gradient(${direction}, ${tempArr.join(',')})`;\n  }\n  return `linear-gradient(${direction}, ${from}, ${to})`;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}