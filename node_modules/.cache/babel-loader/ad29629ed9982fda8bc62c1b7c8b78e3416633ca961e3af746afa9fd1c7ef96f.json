{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { ref, onMounted } from 'vue';\nimport { inBrowser } from '../util.js';\nvar overflowScrollReg = /scroll|auto/i;\nvar defaultRoot = inBrowser ? window : void 0;\nfunction isElement(node) {\n  var ELEMENT_NODE_TYPE = 1;\n  return node.tagName !== \"HTML\" && node.tagName !== \"BODY\" && node.nodeType === ELEMENT_NODE_TYPE;\n}\nfunction getScrollParent(el) {\n  var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultRoot;\n  var node = el;\n  while (node && node !== root && isElement(node)) {\n    var _window$getComputedSt = window.getComputedStyle(node),\n      overflowY = _window$getComputedSt.overflowY;\n    if (overflowScrollReg.test(overflowY)) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n  return root;\n}\nfunction useScrollParent(el) {\n  var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultRoot;\n  var scrollParent = ref();\n  onMounted(function () {\n    if (el.value) {\n      scrollParent.value = getScrollParent(el.value, root);\n    }\n  });\n  return scrollParent;\n}\nexport { getScrollParent, useScrollParent };","map":{"version":3,"mappings":";;;;;;;;AAKA,IAAMA,iBAAoB;AAC1B,IAAMC,cAAcC,YAAYC,MAAS;AAEzC,SAASC,UAAUC,IAAe;EAChC,IAAMC,iBAAoB;EAC1B,OAAOD,KAAKE,OAAY,eAAUF,KAAKE,OAAY,eAAUF,KAAKG,QAAa;AACjF;AAEgB,yBAAgBC,EAAa,EAA+C;EAAA,IAA/CC,2EAAkCT,WAAa;EAC1F,IAAII,IAAO;EAEX,OAAOA,IAAQ,aAASK,IAAQ,cAAUL,IAAI,CAAG;IAC/C,4BAAsBF,OAAOQ,iBAAiBN,IAAI;MAA1CO;IACJ,sBAAkBC,IAAK,UAAS,CAAG;MAC9B;IACT;IACAR,OAAOA,IAAK;EACd;EAEO;AACT;AAEgB,yBAAgBI,EAA8B,EAA+C;EAAA,IAA/CC,2EAAkCT,WAAa;EAC3G,IAAMa,eAAeC,GAAsB;EAE3CC,UAAU,YAAM;IACd,IAAIP,GAAGQ,KAAO;MACZH,aAAaG,KAAQ,mBAAgBR,EAAG,QAAOC,IAAI;IACrD;EACF,CAAC;EAEM;AACT","names":["overflowScrollReg","defaultRoot","inBrowser","window","isElement","node","ELEMENT_NODE_TYPE","tagName","nodeType","el","root","getComputedStyle","overflowY","test","scrollParent","ref","onMounted","value"],"sources":["../../../src/shared/useScrollParent/index.ts"],"sourcesContent":["import { ref, Ref, onMounted } from 'vue';\nimport { inBrowser } from '../util';\n\ntype ScrollElement = HTMLElement | Window;\n\nconst overflowScrollReg = /scroll|auto/i;\nconst defaultRoot = inBrowser ? window : undefined;\n\nfunction isElement(node: Element) {\n  const ELEMENT_NODE_TYPE = 1;\n  return node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === ELEMENT_NODE_TYPE;\n}\n\nexport function getScrollParent(el: Element, root: ScrollElement | undefined = defaultRoot) {\n  let node = el;\n\n  while (node && node !== root && isElement(node)) {\n    const { overflowY } = window.getComputedStyle(node);\n    if (overflowScrollReg.test(overflowY)) {\n      return node;\n    }\n    node = node.parentNode as Element;\n  }\n\n  return root;\n}\n\nexport function useScrollParent(el: Ref<Element | undefined>, root: ScrollElement | undefined = defaultRoot) {\n  const scrollParent = ref<Element | Window>();\n\n  onMounted(() => {\n    if (el.value) {\n      scrollParent.value = getScrollParent(el.value, root);\n    }\n  });\n\n  return scrollParent;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}