{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SearchIcon, CloseCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport { defineComponent, computed, ref, reactive, toRefs, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, renderSlot, createVNode, withDirectives, toDisplayString, vShow, createBlock, withCtx, createTextVNode, createCommentVNode } from 'vue';\nimport config from '../config.js';\nimport _Button from '../button/index.js';\nimport _Input from '../input/index.js';\nimport '../shared/index.js';\nimport searchProps from './props.js';\nimport { useDefault } from '../shared/useDefault/index.js';\nimport { extendAPI } from '../shared/component.js';\nimport '../button/button.js';\nimport '../shared/constants.js';\nimport '../button/props.js';\nimport '../shared/render-tnode.js';\nimport '../shared/useEmitEvent/index.js';\nimport 'lodash/camelCase';\nimport '../shared/render.js';\nimport '@babel/runtime/helpers/typeof';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport './style/css.js';\nimport '../button/type.js';\nimport '../input/input.js';\nimport '../cell/index.js';\nimport '../cell/cell.js';\nimport '../cell/props.js';\nimport '../cell/type.js';\nimport '../input/props.js';\nimport '../input/type.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-search\");\nvar script = defineComponent({\n  name: name,\n  components: {\n    TIconSearch: SearchIcon,\n    TIconClear: CloseCircleFilledIcon,\n    TButton: _Button,\n    TInput: _Input\n  },\n  props: searchProps,\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var classes = computed(function () {\n      var _ref2;\n      return _ref2 = {}, _defineProperty(_ref2, \"\".concat(name), true), _defineProperty(_ref2, \"\".concat(prefix, \"-is-focused\"), !state.labelActive), _ref2;\n    });\n    var _useDefault = useDefault(props, emit, \"value\", \"change\"),\n      _useDefault2 = _slicedToArray(_useDefault, 1),\n      value = _useDefault2[0];\n    var shapeStyle = computed(function () {\n      return {\n        borderRadius: props.shape === \"square\" ? void 0 : \"50px\"\n      };\n    });\n    var searchInput = ref();\n    var state = reactive({\n      labelActive: !value.value,\n      inputVal: \"\"\n    });\n    var doFocus = function doFocus() {\n      var _searchInput$value;\n      (_searchInput$value = searchInput.value) === null || _searchInput$value === void 0 ? void 0 : _searchInput$value.focus();\n    };\n    var onBlur = function onBlur(value2, context) {\n      var _props$onBlur;\n      state.labelActive = !value2;\n      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, value2, {\n        e: context.e\n      });\n    };\n    var onClick = function onClick() {\n      state.labelActive = !state.labelActive;\n      doFocus();\n    };\n    var onFocus = function onFocus(value2, context) {\n      var _props$onFocus;\n      state.labelActive = false;\n      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, value2, {\n        e: context.e\n      });\n    };\n    var onClear = function onClear(e) {\n      var _props$onClear;\n      searchInput.value.innerValue = \"\";\n      (_props$onClear = props.onClear) === null || _props$onClear === void 0 ? void 0 : _props$onClear.call(props, {\n        e: e\n      });\n    };\n    var onCancel = function onCancel(e) {\n      var _props$onActionClick;\n      state.labelActive = !state.labelActive;\n      (_props$onActionClick = props.onActionClick) === null || _props$onActionClick === void 0 ? void 0 : _props$onActionClick.call(props, {\n        e: e\n      });\n    };\n    var onChange = function onChange(value2, context) {\n      var _props$onChange;\n      (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, value2, {\n        e: context === null || context === void 0 ? void 0 : context.e\n      });\n    };\n    extendAPI({\n      doFocus: doFocus,\n      blur: blur\n    });\n    return _objectSpread(_objectSpread({}, toRefs(props)), {}, {\n      name: ref(name),\n      classes: classes,\n      shapeStyle: shapeStyle,\n      onClick: onClick,\n      onCancel: onCancel,\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onClear: onClear,\n      onChange: onChange,\n      state: state,\n      value: value,\n      searchInput: searchInput\n    });\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_icon_search = resolveComponent(\"t-icon-search\");\n  var _component_t_input = resolveComponent(\"t-input\");\n  var _component_t_icon_clear = resolveComponent(\"t-icon-clear\");\n  var _component_t_button = resolveComponent(\"t-button\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.classes)\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__form\")),\n    style: normalizeStyle(_ctx.shapeStyle)\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__box\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__icon-search\"))\n  }, [renderSlot(_ctx.$slots, \"leftIcon\", {}, function () {\n    return [createVNode(_component_t_icon_search)];\n  })], 2), createVNode(_component_t_input, {\n    ref: \"searchInput\",\n    modelValue: _ctx.value,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.value = $event;\n    }),\n    type: \"search\",\n    class: normalizeClass(\"\".concat(_ctx.name, \"__input\")),\n    autofocus: _ctx.focus,\n    placeholder: _ctx.placeholder,\n    onBlur: _ctx.onBlur,\n    onFocus: _ctx.onFocus,\n    onChange: _ctx.onChange\n  }, null, 8, [\"modelValue\", \"class\", \"autofocus\", \"placeholder\", \"onBlur\", \"onFocus\", \"onChange\"]), createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__icon-close\"))\n  }, [createVNode(_component_t_icon_clear, {\n    onClick: _ctx.onClear\n  }, null, 8, [\"onClick\"])], 2)], 2), withDirectives(createElementVNode(\"label\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__label\")),\n    style: normalizeStyle(_ctx.shapeStyle),\n    onClick: _cache[1] || (_cache[1] = function () {\n      return _ctx.onClick && _ctx.onClick.apply(_ctx, arguments);\n    })\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__label-icon-search\"))\n  }, [renderSlot(_ctx.$slots, \"leftIcon\", {}, function () {\n    return [createVNode(_component_t_icon_search)];\n  })], 2), createElementVNode(\"span\", {\n    class: normalizeClass(\"\".concat(_ctx.name, \"__label-text\"))\n  }, toDisplayString(_ctx.placeholder), 3)], 6), [[vShow, _ctx.state.labelActive]])], 6), renderSlot(_ctx.$slots, \"action\", {}, function () {\n    return [_ctx.action ? withDirectives((openBlock(), createBlock(_component_t_button, {\n      key: 0,\n      variant: \"text\",\n      class: normalizeClass(\"\".concat(_ctx.name, \"__cancel-button\")),\n      onClick: _ctx.onCancel\n    }, {\n      default: withCtx(function () {\n        return [createTextVNode(toDisplayString(_ctx.action), 1)];\n      }),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])), [[vShow, !_ctx.state.labelActive]]) : createCommentVNode(\"\", true)];\n  })], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":"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","names":["prefix","config","name","defineComponent","components","TIconSearch","TIconClear","TButton","TInput","props","setup","_ref","emit","computed","state","useDefault","_useDefault2","value","borderRadius","shape","searchInput","ref","reactive","labelActive","inputVal","doFocus","focus","onBlur","context","_props$onBlur","e","onClick","onFocus","_props$onFocus","onClear","innerValue","onCancel","onChange","_props$onChange","extendAPI","blur","toRefs","classes","shapeStyle","class","_createElementVNode","_ctx","style","_renderSlot","_createVNode","_component_t_icon_search","_component_t_input","type","autofocus","placeholder","_component_t_icon_clear","action","_createBlock","_component_t_button","variant"],"sources":["../../src/search/search.vue","../../src/search/search.vue?vue&type=template&id=4b3de857&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classes\">\n    <div :class=\"`${name}__form`\" :style=\"shapeStyle\">\n      <div :class=\"`${name}__box`\">\n        <div :class=\"`${name}__icon-search`\">\n          <slot name=\"leftIcon\">\n            <t-icon-search />\n          </slot>\n        </div>\n        <t-input\n          ref=\"searchInput\"\n          v-model=\"value\"\n          type=\"search\"\n          :class=\"`${name}__input`\"\n          :autofocus=\"focus\"\n          :placeholder=\"placeholder\"\n          @blur=\"onBlur\"\n          @focus=\"onFocus\"\n          @change=\"onChange\"\n        />\n        <div :class=\"`${name}__icon-close`\">\n          <t-icon-clear @click=\"onClear\" />\n        </div>\n      </div>\n      <label v-show=\"state.labelActive\" :class=\"`${name}__label`\" :style=\"shapeStyle\" @click=\"onClick\">\n        <div :class=\"`${name}__label-icon-search`\">\n          <slot name=\"leftIcon\">\n            <t-icon-search />\n          </slot>\n        </div>\n        <span :class=\"`${name}__label-text`\">{{ placeholder }}</span>\n      </label>\n    </div>\n    <slot name=\"action\">\n      <t-button\n        v-if=\"action\"\n        v-show=\"!state.labelActive\"\n        variant=\"text\"\n        :class=\"`${name}__cancel-button`\"\n        @click=\"onCancel\"\n      >\n        {{ action }}\n      </t-button>\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { SearchIcon as TIconSearch, CloseCircleFilledIcon as TIconClear } from 'tdesign-icons-vue-next';\nimport { ref, reactive, computed, defineComponent, toRefs } from 'vue';\nimport config from '../config';\nimport TButton from '../button';\nimport TInput, { InputValue } from '../input';\nimport { extendAPI } from '../shared';\nimport searchProps from './props';\nimport { useDefault } from '../shared/useDefault';\n\nconst { prefix } = config;\nconst name = `${prefix}-search`;\n\ntype InputBlurContext = { e: FocusEvent };\ntype InputFocusContent = { e: FocusEvent };\ntype InputChangeContext = { e?: MouseEvent | InputEvent | undefined } | undefined;\n\nexport default defineComponent({\n  name,\n  components: { TIconSearch, TIconClear, TButton, TInput },\n  props: searchProps,\n  setup(props, { emit }) {\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${prefix}-is-focused`]: !state.labelActive,\n    }));\n    const [value] = useDefault(props, emit, 'value', 'change');\n    const shapeStyle = computed(() => ({\n      borderRadius: props.shape === 'square' ? undefined : '50px',\n    }));\n    const searchInput = ref();\n\n    const state = reactive({\n      labelActive: !value.value,\n      inputVal: '',\n    });\n\n    const doFocus = () => {\n      searchInput.value?.focus();\n    };\n\n    const onBlur = (value: any, context: InputBlurContext) => {\n      state.labelActive = !value;\n      props.onBlur?.(value, { e: context.e });\n    };\n\n    const onClick = () => {\n      state.labelActive = !state.labelActive;\n      doFocus();\n    };\n\n    const onFocus = (value: InputValue, context: InputFocusContent) => {\n      state.labelActive = false;\n      props.onFocus?.(value as string, { e: context.e });\n    };\n\n    const onClear = (e: MouseEvent) => {\n      searchInput.value.innerValue = '';\n      props.onClear?.({ e });\n    };\n\n    const onCancel = (e: MouseEvent) => {\n      state.labelActive = !state.labelActive;\n      props.onActionClick?.({ e });\n    };\n\n    const onChange = (value: InputValue, context: InputChangeContext) => {\n      props.onChange?.(value as string, { e: context?.e });\n    };\n\n    extendAPI({ doFocus, blur });\n\n    return {\n      ...toRefs(props),\n      name: ref(name),\n      classes,\n      shapeStyle,\n      onClick,\n      onCancel,\n      onBlur,\n      onFocus,\n      onClear,\n      onChange,\n      state,\n      value,\n      searchInput,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"classes\">\n    <div :class=\"`${name}__form`\" :style=\"shapeStyle\">\n      <div :class=\"`${name}__box`\">\n        <div :class=\"`${name}__icon-search`\">\n          <slot name=\"leftIcon\">\n            <t-icon-search />\n          </slot>\n        </div>\n        <t-input\n          ref=\"searchInput\"\n          v-model=\"value\"\n          type=\"search\"\n          :class=\"`${name}__input`\"\n          :autofocus=\"focus\"\n          :placeholder=\"placeholder\"\n          @blur=\"onBlur\"\n          @focus=\"onFocus\"\n          @change=\"onChange\"\n        />\n        <div :class=\"`${name}__icon-close`\">\n          <t-icon-clear @click=\"onClear\" />\n        </div>\n      </div>\n      <label v-show=\"state.labelActive\" :class=\"`${name}__label`\" :style=\"shapeStyle\" @click=\"onClick\">\n        <div :class=\"`${name}__label-icon-search`\">\n          <slot name=\"leftIcon\">\n            <t-icon-search />\n          </slot>\n        </div>\n        <span :class=\"`${name}__label-text`\">{{ placeholder }}</span>\n      </label>\n    </div>\n    <slot name=\"action\">\n      <t-button\n        v-if=\"action\"\n        v-show=\"!state.labelActive\"\n        variant=\"text\"\n        :class=\"`${name}__cancel-button`\"\n        @click=\"onCancel\"\n      >\n        {{ action }}\n      </t-button>\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { SearchIcon as TIconSearch, CloseCircleFilledIcon as TIconClear } from 'tdesign-icons-vue-next';\nimport { ref, reactive, computed, defineComponent, toRefs } from 'vue';\nimport config from '../config';\nimport TButton from '../button';\nimport TInput, { InputValue } from '../input';\nimport { extendAPI } from '../shared';\nimport searchProps from './props';\nimport { useDefault } from '../shared/useDefault';\n\nconst { prefix } = config;\nconst name = `${prefix}-search`;\n\ntype InputBlurContext = { e: FocusEvent };\ntype InputFocusContent = { e: FocusEvent };\ntype InputChangeContext = { e?: MouseEvent | InputEvent | undefined } | undefined;\n\nexport default defineComponent({\n  name,\n  components: { TIconSearch, TIconClear, TButton, TInput },\n  props: searchProps,\n  setup(props, { emit }) {\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${prefix}-is-focused`]: !state.labelActive,\n    }));\n    const [value] = useDefault(props, emit, 'value', 'change');\n    const shapeStyle = computed(() => ({\n      borderRadius: props.shape === 'square' ? undefined : '50px',\n    }));\n    const searchInput = ref();\n\n    const state = reactive({\n      labelActive: !value.value,\n      inputVal: '',\n    });\n\n    const doFocus = () => {\n      searchInput.value?.focus();\n    };\n\n    const onBlur = (value: any, context: InputBlurContext) => {\n      state.labelActive = !value;\n      props.onBlur?.(value, { e: context.e });\n    };\n\n    const onClick = () => {\n      state.labelActive = !state.labelActive;\n      doFocus();\n    };\n\n    const onFocus = (value: InputValue, context: InputFocusContent) => {\n      state.labelActive = false;\n      props.onFocus?.(value as string, { e: context.e });\n    };\n\n    const onClear = (e: MouseEvent) => {\n      searchInput.value.innerValue = '';\n      props.onClear?.({ e });\n    };\n\n    const onCancel = (e: MouseEvent) => {\n      state.labelActive = !state.labelActive;\n      props.onActionClick?.({ e });\n    };\n\n    const onChange = (value: InputValue, context: InputChangeContext) => {\n      props.onChange?.(value as string, { e: context?.e });\n    };\n\n    extendAPI({ doFocus, blur });\n\n    return {\n      ...toRefs(props),\n      name: ref(name),\n      classes,\n      shapeStyle,\n      onClick,\n      onCancel,\n      onBlur,\n      onFocus,\n      onClear,\n      onChange,\n      state,\n      value,\n      searchInput,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}