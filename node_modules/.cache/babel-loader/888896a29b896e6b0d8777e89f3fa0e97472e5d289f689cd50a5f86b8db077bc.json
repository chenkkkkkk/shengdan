{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { _ as _defineProperty } from '../_chunks/dep-6f104017.js';\nimport { h } from 'vue';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction camel2Kebab(camelString) {\n  var covertArr = [\"fillOpacity\", \"fillRule\", \"clipRule\"];\n  if (covertArr.includes(camelString)) {\n    return camelString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\n  }\n  return camelString;\n}\nfunction renderFn(node, props) {\n  var kebabAttrs = Object.keys(node.attrs).reduce((result, key) => {\n    result[camel2Kebab(key)] = node.attrs[key];\n    return result;\n  }, {});\n  return h(node.tag, _objectSpread(_objectSpread({}, kebabAttrs), props), (node.children || []).map(child => renderFn(child, {})));\n}\nexport { renderFn as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGA,qBAAqBA,WAArB,EAAyC;MACjCC,YAAY,CAAC,aAAD,EAAgB,UAAhB,EAA4B,UAA5B;MACdA,UAAUC,QAAV,CAAmBF,WAAnB,GAAiC;WAASA,YAAYG,OAAZ,CAAoB,8BAApB,EAAoD,OAApD,EAA6DC,WAA7D;;SACvCJ;;AAGT,kBAAkBK,IAAlB,EAAiCC,KAAjC,EAAmE;MAC3DC,aAAaC,OAAOC,IAAP,CAAYJ,KAAKK,KAAjB,EAAwBC,MAAxB,CAA+B,CAACC,MAAD,EAASC,GAAT,KAAiB;WAE1DC,YAAYD,QAAQR,KAAKK,KAAL,CAAWG,GAAX;WACpBD;GAHU,EAIhB,EAJgB;SAKZG,EACLV,KAAKW,qCAEAT,aACAD,QAEJ,MAAKW,YAAY,EAAjB,EAAqBC,GAArB,CAA0BC,KAAD,IAAoBC,SAASD,OAAO,GAA7D","names":["camelString","covertArr","includes","replace","toLowerCase","node","props","kebabAttrs","Object","keys","attrs","reduce","result","key","camel2Kebab","h","tag","children","map","child","renderFn"],"sources":["../../src/utils/render-fn.ts"],"sourcesContent":["import { VNode, h } from 'vue';\nimport { SVGJson } from './types';\n\nfunction camel2Kebab(camelString:string) {\n  const covertArr = ['fillOpacity', 'fillRule', 'clipRule'];\n  if (covertArr.includes(camelString)) { return camelString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase(); }\n  return camelString;\n}\n\nfunction renderFn(node: SVGJson, props:Record<string, any>): VNode {\n  const kebabAttrs = Object.keys(node.attrs).reduce((result, key) => {\n    // eslint-disable-next-line no-param-reassign\n    result[camel2Kebab(key)] = node.attrs[key];\n    return result;\n  }, {});\n  return h(\n    node.tag,\n    {\n      ...kebabAttrs,\n      ...props,\n    },\n    (node.children || []).map((child: SVGJson) => renderFn(child, {})),\n  );\n}\n\nexport default renderFn;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}