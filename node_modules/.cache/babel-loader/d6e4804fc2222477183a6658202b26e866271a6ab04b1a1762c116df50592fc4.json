{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { defineComponent, reactive, ref, watch, computed, provide, toRefs, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, Fragment, renderList, toDisplayString, createVNode, renderSlot } from 'vue';\nimport { CaretDownSmallIcon } from 'tdesign-icons-vue-next';\nimport config from '../config.js';\nimport { context, DropdownMenuExpandState } from './context.js';\nimport TransAniControl from './trans-ani-control.js';\nimport { findRelativeRect, findRelativeContainer } from './dom-utils.js';\nimport DropdownMenuProps from './props.js';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '../shared/functions.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-dropdown-menu\");\nvar script = defineComponent({\n  name: name,\n  components: {\n    CaretDownSmallIcon: CaretDownSmallIcon\n  },\n  props: DropdownMenuProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var state = reactive({\n      activeId: null,\n      barRect: {},\n      childCount: 0\n    });\n    var menuItems = ref([]);\n    var updateItems = function updateItems() {\n      if (slots.default) {\n        var itemName = \"\".concat(prefix, \"-dropdown-item\");\n        var children = slots.default();\n        menuItems.value = children.filter(function (child) {\n          var _child$type;\n          var childTypeName = child === null || child === void 0 ? void 0 : (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.name;\n          return (childTypeName === null || childTypeName === void 0 ? void 0 : childTypeName.includes) && childTypeName.includes(itemName);\n        });\n      }\n    };\n    watch(function () {\n      var _slots$default;\n      return slots === null || slots === void 0 ? void 0 : (_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots);\n    }, updateItems, {\n      deep: true,\n      immediate: true\n    });\n    var menuTitles = computed(function () {\n      return menuItems.value.map(function (item) {\n        var _item$props = item.props,\n          label = _item$props.label,\n          disabled = _item$props.disabled;\n        return {\n          label: label,\n          disabled: disabled !== void 0 && disabled !== false\n        };\n      });\n    });\n    var aniControl = new TransAniControl();\n    provide(\"dropdownMenuProps\", props);\n    provide(\"dropdownMenuState\", state);\n    provide(\"dropdownAniControl\", aniControl);\n    var classes = computed(function () {\n      return [\"\".concat(name)];\n    });\n    var refBar = ref(null);\n    var styleBar = computed(function () {\n      return [\"\".concat(name, \"__bar\"), _defineProperty({}, \"\".concat(name, \"__bar \").concat(name, \"__bar--open\"), state.activeId)];\n    });\n    var styleBarItem = computed(function () {\n      return function (item, idx) {\n        var _ref3;\n        return [\"\".concat(name, \"__item\"), (_ref3 = {}, _defineProperty(_ref3, \"\".concat(prefix, \"-is-disabled\"), item.disabled), _defineProperty(_ref3, \"\".concat(prefix, \"-is-active\"), idx === state.activeId), _ref3)];\n      };\n    });\n    var expandMenu = function expandMenu(item, idx) {\n      var disabled = item.disabled;\n      if (disabled) return;\n      if (state.activeId === idx) {\n        collapseMenu();\n        return;\n      }\n      state.activeId = idx;\n      var bar = refBar.value;\n      var barRect = findRelativeRect(bar);\n      state.barRect = barRect;\n      var container = findRelativeContainer(bar) || document.body;\n      context.recordMenuExpanded(container, control, DropdownMenuExpandState.expanded);\n    };\n    var collapseMenu = function collapseMenu() {\n      state.activeId = null;\n      var bar = refBar.value;\n      var container = findRelativeContainer(bar) || document.body;\n      context.recordMenuExpanded(container, control, DropdownMenuExpandState.collapsed);\n    };\n    var control = {\n      expandMenu: expandMenu,\n      collapseMenu: collapseMenu\n    };\n    provide(\"dropdownMenuControl\", control);\n    expose({\n      toggle: function toggle(idx) {\n        if (idx != null) {\n          var item = menuTitles.value[idx];\n          expandMenu(item, idx);\n        } else {\n          collapseMenu();\n        }\n      }\n    });\n    return _objectSpread(_objectSpread({\n      name: ref(name),\n      classes: classes\n    }, toRefs(props)), {}, {\n      refBar: refBar,\n      state: state,\n      styleBar: styleBar,\n      styleBarItem: styleBarItem,\n      menuItems: menuItems,\n      menuTitles: menuTitles,\n      expandMenu: expandMenu\n    });\n  }\n});\nvar _hoisted_1 = [\"onClick\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_caret_down_small_icon = resolveComponent(\"caret-down-small-icon\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.classes)\n  }, [createElementVNode(\"div\", {\n    ref: \"refBar\",\n    class: normalizeClass(_ctx.styleBar)\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.menuTitles, function (item, idx) {\n    return openBlock(), createElementBlock(\"div\", {\n      key: idx,\n      class: normalizeClass(_ctx.styleBarItem(item, idx)),\n      onClick: function onClick($event) {\n        return _ctx.expandMenu(item, idx);\n      }\n    }, [createElementVNode(\"div\", {\n      class: normalizeClass(\"\".concat(_ctx.name, \"__title\"))\n    }, toDisplayString(item.label), 3), createVNode(_component_caret_down_small_icon, {\n      class: normalizeClass(\"\".concat(_ctx.name, \"__arrow\")),\n      size: \"24\"\n    }, null, 8, [\"class\"])], 10, _hoisted_1);\n  }), 128))], 2), renderSlot(_ctx.$slots, \"default\")], 2);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":"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","names":["prefix","config","name","defineComponent","components","CaretDownSmallIcon","props","setup","_ref","slots","expose","state","reactive","activeId","barRect","childCount","ref","updateItems","default","itemName","menuItems","value","filter","child","type","childTypeName","watch","_slots$default","deep","immediate","menuTitles","item","label","disabled","TransAniControl","provide","aniControl","classes","computed","styleBarItem","idx","expandMenu","collapseMenu","bar","refBar","findRelativeRect","container","document","menuContext","recordMenuExpanded","control","expanded","collapsed","toggle","toRefs","styleBar","class","_createElementVNode","_openBlock","key","_normalizeClass","onClick","_ctx","_createVNode","_component_caret_down_small_icon","size","_renderSlot"],"sources":["../../src/dropdown-menu/dropdown-menu.vue","../../src/dropdown-menu/dropdown-menu.vue?vue&type=template&id=f261c384&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classes\">\n    <div ref=\"refBar\" :class=\"styleBar\">\n      <div v-for=\"(item, idx) in menuTitles\" :key=\"idx\" :class=\"styleBarItem(item, idx)\" @click=\"expandMenu(item, idx)\">\n        <div :class=\"`${name}__title`\">\n          {{ item.label }}\n        </div>\n        <caret-down-small-icon :class=\"`${name}__arrow`\" size=\"24\" />\n      </div>\n    </div>\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, toRefs, ref, reactive, watch, provide } from 'vue';\nimport { CaretDownSmallIcon } from 'tdesign-icons-vue-next';\nimport config from '../config';\nimport { context as menuContext, DropdownMenuState, DropdownMenuControl, DropdownMenuExpandState } from './context';\nimport TransAniControl from './trans-ani-control';\nimport { findRelativeRect, findRelativeContainer } from './dom-utils';\nimport DropdownMenuProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-dropdown-menu`;\n\nexport default defineComponent({\n  name,\n  components: { CaretDownSmallIcon },\n  props: DropdownMenuProps,\n  setup(props, { slots, expose }) {\n    // 菜单状态\n    const state = reactive<DropdownMenuState>({\n      activeId: null,\n      barRect: {},\n      childCount: 0,\n    });\n\n    // 子成员处理\n    const menuItems = ref<any>([]);\n    const updateItems = () => {\n      if (slots.default) {\n        const itemName = `${prefix}-dropdown-item`;\n        const children = slots.default();\n        menuItems.value = children.filter((child: any) => {\n          const childTypeName = child?.type?.name;\n          return childTypeName?.includes && childTypeName.includes(itemName);\n        });\n      }\n    };\n    watch(() => slots?.default?.(), updateItems, {\n      deep: true,\n      immediate: true,\n    });\n\n    // 通过 slots.default 子成员，计算标题栏选项\n    const menuTitles = computed(() =>\n      menuItems.value.map((item: any) => {\n        const { label, disabled } = item.props;\n        return {\n          label,\n          disabled: disabled !== undefined && disabled !== false,\n        };\n      }),\n    );\n\n    const aniControl = new TransAniControl();\n    // 提供子组件访问\n    provide('dropdownMenuProps', props);\n    provide('dropdownMenuState', state);\n    provide('dropdownAniControl', aniControl);\n    // 根结点样式\n    const classes = computed(() => [`${name}`]);\n    // 标题栏结点引用\n    const refBar = ref(null);\n    // 标题栏样式\n    const styleBar = computed(() => [\n      `${name}__bar`,\n      {\n        [`${name}__bar ${name}__bar--open`]: state.activeId,\n      },\n    ]);\n    const styleBarItem = computed(() => (item: any, idx: number) => [\n      `${name}__item`,\n      {\n        [`${prefix}-is-disabled`]: item.disabled,\n        [`${prefix}-is-active`]: idx === state.activeId,\n      },\n    ]);\n    // 展开对应项目的菜单\n    const expandMenu = (item: any, idx: number) => {\n      const { disabled } = item;\n\n      if (disabled) return;\n\n      if (state.activeId === idx) {\n        // 再次点击时收起\n        collapseMenu();\n        return;\n      }\n\n      state.activeId = idx;\n\n      // 获取菜单定位\n      const bar = refBar.value as any;\n      const barRect = findRelativeRect(bar);\n      state.barRect = barRect;\n\n      // 记录展开状态\n      const container = findRelativeContainer(bar) || document.body;\n      menuContext.recordMenuExpanded(container, control, DropdownMenuExpandState.expanded);\n    };\n    const collapseMenu = () => {\n      state.activeId = null;\n\n      // 清除已展开状态记录\n      const bar = refBar.value as any;\n      const container = findRelativeContainer(bar) || document.body;\n      menuContext.recordMenuExpanded(container, control, DropdownMenuExpandState.collapsed);\n    };\n    const control: DropdownMenuControl = { expandMenu, collapseMenu };\n    // 提供子组件访问\n    provide('dropdownMenuControl', control);\n    expose({\n      toggle(idx?: number) {\n        if (idx != null) {\n          const item = menuTitles.value[idx];\n          expandMenu(item, idx);\n        } else {\n          collapseMenu();\n        }\n      },\n    });\n    return {\n      name: ref(name),\n      classes,\n      ...toRefs(props),\n      refBar,\n      state,\n      styleBar,\n      styleBarItem,\n      menuItems,\n      menuTitles,\n      expandMenu,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"classes\">\n    <div ref=\"refBar\" :class=\"styleBar\">\n      <div v-for=\"(item, idx) in menuTitles\" :key=\"idx\" :class=\"styleBarItem(item, idx)\" @click=\"expandMenu(item, idx)\">\n        <div :class=\"`${name}__title`\">\n          {{ item.label }}\n        </div>\n        <caret-down-small-icon :class=\"`${name}__arrow`\" size=\"24\" />\n      </div>\n    </div>\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, toRefs, ref, reactive, watch, provide } from 'vue';\nimport { CaretDownSmallIcon } from 'tdesign-icons-vue-next';\nimport config from '../config';\nimport { context as menuContext, DropdownMenuState, DropdownMenuControl, DropdownMenuExpandState } from './context';\nimport TransAniControl from './trans-ani-control';\nimport { findRelativeRect, findRelativeContainer } from './dom-utils';\nimport DropdownMenuProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-dropdown-menu`;\n\nexport default defineComponent({\n  name,\n  components: { CaretDownSmallIcon },\n  props: DropdownMenuProps,\n  setup(props, { slots, expose }) {\n    // 菜单状态\n    const state = reactive<DropdownMenuState>({\n      activeId: null,\n      barRect: {},\n      childCount: 0,\n    });\n\n    // 子成员处理\n    const menuItems = ref<any>([]);\n    const updateItems = () => {\n      if (slots.default) {\n        const itemName = `${prefix}-dropdown-item`;\n        const children = slots.default();\n        menuItems.value = children.filter((child: any) => {\n          const childTypeName = child?.type?.name;\n          return childTypeName?.includes && childTypeName.includes(itemName);\n        });\n      }\n    };\n    watch(() => slots?.default?.(), updateItems, {\n      deep: true,\n      immediate: true,\n    });\n\n    // 通过 slots.default 子成员，计算标题栏选项\n    const menuTitles = computed(() =>\n      menuItems.value.map((item: any) => {\n        const { label, disabled } = item.props;\n        return {\n          label,\n          disabled: disabled !== undefined && disabled !== false,\n        };\n      }),\n    );\n\n    const aniControl = new TransAniControl();\n    // 提供子组件访问\n    provide('dropdownMenuProps', props);\n    provide('dropdownMenuState', state);\n    provide('dropdownAniControl', aniControl);\n    // 根结点样式\n    const classes = computed(() => [`${name}`]);\n    // 标题栏结点引用\n    const refBar = ref(null);\n    // 标题栏样式\n    const styleBar = computed(() => [\n      `${name}__bar`,\n      {\n        [`${name}__bar ${name}__bar--open`]: state.activeId,\n      },\n    ]);\n    const styleBarItem = computed(() => (item: any, idx: number) => [\n      `${name}__item`,\n      {\n        [`${prefix}-is-disabled`]: item.disabled,\n        [`${prefix}-is-active`]: idx === state.activeId,\n      },\n    ]);\n    // 展开对应项目的菜单\n    const expandMenu = (item: any, idx: number) => {\n      const { disabled } = item;\n\n      if (disabled) return;\n\n      if (state.activeId === idx) {\n        // 再次点击时收起\n        collapseMenu();\n        return;\n      }\n\n      state.activeId = idx;\n\n      // 获取菜单定位\n      const bar = refBar.value as any;\n      const barRect = findRelativeRect(bar);\n      state.barRect = barRect;\n\n      // 记录展开状态\n      const container = findRelativeContainer(bar) || document.body;\n      menuContext.recordMenuExpanded(container, control, DropdownMenuExpandState.expanded);\n    };\n    const collapseMenu = () => {\n      state.activeId = null;\n\n      // 清除已展开状态记录\n      const bar = refBar.value as any;\n      const container = findRelativeContainer(bar) || document.body;\n      menuContext.recordMenuExpanded(container, control, DropdownMenuExpandState.collapsed);\n    };\n    const control: DropdownMenuControl = { expandMenu, collapseMenu };\n    // 提供子组件访问\n    provide('dropdownMenuControl', control);\n    expose({\n      toggle(idx?: number) {\n        if (idx != null) {\n          const item = menuTitles.value[idx];\n          expandMenu(item, idx);\n        } else {\n          collapseMenu();\n        }\n      },\n    });\n    return {\n      name: ref(name),\n      classes,\n      ...toRefs(props),\n      refBar,\n      state,\n      styleBar,\n      styleBarItem,\n      menuItems,\n      menuTitles,\n      expandMenu,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}