{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { defineComponent, getCurrentInstance, computed, resolveComponent, openBlock, createElementBlock, createVNode } from 'vue';\nimport '../shared/index.js';\nimport config from '../config.js';\nimport TabPanelProps from './tab-panel-props.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { renderContent } from '../shared/render.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/defineProperty';\nimport '@babel/runtime/helpers/typeof';\nvar prefix = config.prefix;\nvar script = defineComponent({\n  name: \"\".concat(prefix, \"-tab-nav\"),\n  components: {\n    TNode: TNodeComponent\n  },\n  props: {\n    label: TabPanelProps.label\n  },\n  setup: function setup(props) {\n    var internalInstance = getCurrentInstance();\n    var labelContent = computed(function () {\n      return renderContent(internalInstance, \"default\", \"label\");\n    });\n    return {\n      labelContent: labelContent\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  return openBlock(), createElementBlock(\"div\", null, [createVNode(_component_t_node, {\n    content: _ctx.labelContent\n  }, null, 8, [\"content\"])]);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,IAAQA,SAAWC,OAAXD;AAER,aAAeE,eAAgB;EAC7BC,gBAASH;EACTI,YAAY;IAAEC,KAAM,EAANA;GAAM;EACpBC,KAAO;IACLC,OAAOC,aAAc;GACvB;EACAC,sBAAMH,KAAO;IACX,IAAMI,mBAAmBC,kBAAmB;IAC5C,IAAMC,eAAeC,QAAS;MAAA,OAAMC,cAAcJ,gBAAkB,aAAW,OAAO,CAAC;KAAA;IAChF;MACLE;KACF;EACF;AACF,CAAC;;;sBC1BCG,kBAEK,eADHC,YAAwCC;IAA/BC,OAAS,OAAYN;GAAA","names":["prefix","config","defineComponent","name","components","TNode","props","label","TabPanelProps","setup","internalInstance","getCurrentInstance","labelContent","computed","renderContent","_createElementBlock","_createVNode","_component_t_node","content"],"sources":["../../src/tabs/tab-nav-item.vue","../../src/tabs/tab-nav-item.vue?vue&type=template&id=a569b8d6&lang.js"],"sourcesContent":["<template>\n  <div>\n    <t-node :content=\"labelContent\"></t-node>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, getCurrentInstance } from 'vue';\nimport { renderContent, renderTNode, TNode } from '../shared';\nimport config from '../config';\nimport TabPanelProps from './tab-panel-props';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-tab-nav`,\n  components: { TNode },\n  props: {\n    label: TabPanelProps.label,\n  },\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const labelContent = computed(() => renderContent(internalInstance, 'default', 'label'));\n    return {\n      labelContent,\n    };\n  },\n});\n</script>\n","<template>\n  <div>\n    <t-node :content=\"labelContent\"></t-node>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, getCurrentInstance } from 'vue';\nimport { renderContent, renderTNode, TNode } from '../shared';\nimport config from '../config';\nimport TabPanelProps from './tab-panel-props';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-tab-nav`,\n  components: { TNode },\n  props: {\n    label: TabPanelProps.label,\n  },\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const labelContent = computed(() => renderContent(internalInstance, 'default', 'label'));\n    return {\n      labelContent,\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}