{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nvar CheckboxProps = {\n  align: {\n    type: String,\n    default: \"left\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"left\", \"right\"].includes(val);\n    }\n  },\n  checkAll: Boolean,\n  checked: {\n    type: Boolean,\n    default: void 0\n  },\n  modelValue: {\n    type: Boolean,\n    default: void 0\n  },\n  defaultChecked: Boolean,\n  content: {\n    type: [String, Function]\n  },\n  contentDisabled: Boolean,\n  default: {\n    type: [String, Function]\n  },\n  disabled: {\n    type: Boolean,\n    default: void 0\n  },\n  icon: {\n    type: Array\n  },\n  indeterminate: Boolean,\n  label: {\n    type: [String, Function]\n  },\n  maxContentRow: {\n    type: Number,\n    default: 5\n  },\n  maxLabelRow: {\n    type: Number,\n    default: 3\n  },\n  name: {\n    type: String,\n    default: \"\"\n  },\n  readonly: Boolean,\n  value: {\n    type: [String, Number]\n  },\n  onChange: Function\n};\nexport { CheckboxProps as default };","map":{"version":3,"mappings":";;;;;;AASA,oBAAe;EAEbA,KAAO;IACLC,IAAM;IACNC,OAAS;IACTC,8BAAUC,GAAwC;MAChD,IAAI,CAACA,KAAY;MACjB,OAAO,CAAC,QAAQ,OAAO,EAAEC,SAASD,GAAG;IACvC;GACF;EAEAE,QAAU;EAEVC,OAAS;IACPN,IAAM;IACNC,OAAS;GACX;EACAM,UAAY;IACVP,IAAM;IACNC,OAAS;GACX;EAEAO,cAAgB;EAEhBC,OAAS;IACPT,MAAM,CAACU,QAAQC,QAAQ;GACzB;EAEAC,eAAiB;EAEjBX,OAAS;IACPD,MAAM,CAACU,QAAQC,QAAQ;GACzB;EAEAE,QAAU;IACRb,IAAM;IACNC,OAAS;GACX;EAEAa,IAAM;IACJd,IAAM;GACR;EAEAe,aAAe;EAEfC,KAAO;IACLhB,MAAM,CAACU,QAAQC,QAAQ;GACzB;EAEAM,aAAe;IACbjB,IAAM;IACNC,OAAS;GACX;EAEAiB,WAAa;IACXlB,IAAM;IACNC,OAAS;GACX;EAEAkB,IAAM;IACJnB,IAAM;IACNC,OAAS;GACX;EAEAmB,QAAU;EAEVC,KAAO;IACLrB,MAAM,CAACU,QAAQY,MAAM;GACvB;EAEAC,QAAU;AACZ","names":["align","type","default","validator","val","includes","checkAll","checked","modelValue","defaultChecked","content","String","Function","contentDisabled","disabled","icon","indeterminate","label","maxContentRow","maxLabelRow","name","readonly","value","Number","onChange"],"sources":["../../src/checkbox/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdCheckboxProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 复选框和内容相对位置 */\n  align: {\n    type: String as PropType<TdCheckboxProps['align']>,\n    default: 'left' as TdCheckboxProps['align'],\n    validator(val: TdCheckboxProps['align']): boolean {\n      if (!val) return true;\n      return ['left', 'right'].includes(val);\n    },\n  },\n  /** 用于标识是否为「全选选项」。单独使用无效，需在 CheckboxGroup 中使用 */\n  checkAll: Boolean,\n  /** 是否选中 */\n  checked: {\n    type: Boolean,\n    default: undefined,\n  },\n  modelValue: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 是否选中，非受控属性 */\n  defaultChecked: Boolean,\n  /** 复选框内容 */\n  content: {\n    type: [String, Function] as PropType<TdCheckboxProps['content']>,\n  },\n  /** 是否禁用组件内容（content）触发选中 */\n  contentDisabled: Boolean,\n  /** 复选框内容，同 label */\n  default: {\n    type: [String, Function] as PropType<TdCheckboxProps['default']>,\n  },\n  /** 是否禁用组件 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 自定义选中图标和非选中图标。示例：[选中态图标，非选中态图标] */\n  icon: {\n    type: Array as PropType<TdCheckboxProps['icon']>,\n  },\n  /** 是否为半选 */\n  indeterminate: Boolean,\n  /** 主文案 */\n  label: {\n    type: [String, Function] as PropType<TdCheckboxProps['label']>,\n  },\n  /** 内容最大行数限制 */\n  maxContentRow: {\n    type: Number,\n    default: 5,\n  },\n  /** 主文案最大行数限制 */\n  maxLabelRow: {\n    type: Number,\n    default: 3,\n  },\n  /** HTML 元素原生属性 */\n  name: {\n    type: String,\n    default: '',\n  },\n  /** 组件是否只读 */\n  readonly: Boolean,\n  /** 复选框的值 */\n  value: {\n    type: [String, Number] as PropType<TdCheckboxProps['value']>,\n  },\n  /** 值变化时触发 */\n  onChange: Function as PropType<TdCheckboxProps['onChange']>,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}