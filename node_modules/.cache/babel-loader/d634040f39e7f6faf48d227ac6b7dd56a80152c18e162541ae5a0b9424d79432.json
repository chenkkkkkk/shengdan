{"ast":null,"code":"/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport { defineComponent, openBlock, createElementBlock, normalizeStyle, normalizeClass, createElementVNode } from 'vue';\nimport circleAdapter from '../../_common/js/loading/circle-adapter.js';\nimport config from '../../config.js';\nimport '@babel/runtime/helpers/defineProperty';\nimport '../../_common/js/utils/set-style.js';\nimport '../../_common/js/utils/helper.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/slicedToArray';\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-loading__gradient\");\nvar classname = \"\".concat(prefix, \"-icon-loading\");\nvar script = defineComponent({\n  name: name,\n  props: {\n    style: [Object, String]\n  },\n  setup: function setup() {\n    var classes = [name, classname];\n    return {\n      name: name,\n      classes: classes\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$nextTick(function () {\n      _this.updateColor();\n    });\n  },\n  updated: function updated() {\n    this.updateColor();\n  },\n  methods: {\n    updateColor: function updateColor() {\n      var circleElem = this.$refs.circle;\n      circleAdapter(circleElem);\n    }\n  }\n});\nvar _hoisted_1 = {\n  x: \"1\",\n  y: \"1\",\n  width: \"12\",\n  height: \"12\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"svg\", {\n    style: normalizeStyle(_ctx.style),\n    class: normalizeClass(_ctx.classes),\n    viewBox: \"0 0 14 14\",\n    version: \"1.1\",\n    width: \"1em\",\n    height: \"1em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, [(openBlock(), createElementBlock(\"foreignObject\", _hoisted_1, [createElementVNode(\"div\", {\n    ref: \"circle\",\n    class: normalizeClass(\"\".concat(_ctx.name, \"-conic\"))\n  }, null, 2)]))], 6);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAqBA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAChB,IAAMG,YAAeH;AAErB,aAAeI,eAAgB;EAC7BF;EACAG,KAAO;IACLC,OAAO,CAACC,QAAQC,MAAM;GACxB;EACAC,KAAQ;IACA,cAAU,CAACP,MAAMC,SAAS;IACzB;MACLD;MACAQ;KACF;GACF;EACAC,OAAU;IAAA;IACR,KAAKC,UAAU,YAAM;MACnBC,MAAKC,WAAY;IACnB,CAAC;GACH;EACAC,OAAU;IACR,KAAKD,WAAY;GACnB;EACAE,OAAS;IACPF,WAAc;MACN,iBAAa,KAAKG,KAAM;MAC9BC,cAAcC,UAAU;IAC1B;EACF;AACF,CAAC;;ECzCkBC,CAAE;EAAIC,CAAE;EAAIC,KAAM;EAAKC,MAAO;;;oBAT/C,qBAYK;IAXFjB,qBAAO,MAAKA;IACZkB,qBAAO,MAAOd;IACfe,OAAQ;IACRC,OAAQ;IACRJ,KAAM;IACNC,MAAO;IACPI,KAAM;OAENC,+BAEe,kBAFfC,UAEe,GADbC,mBAA4C;IAAvCC,GAAI;IAAUP,sBAAUQ,eAAI9B","names":["prefix","config","name","classname","defineComponent","props","style","Object","String","setup","classes","mounted","$nextTick","_this","updateColor","updated","methods","$refs","circleAdapter","circleElem","x","y","width","height","class","viewBox","version","xmlns","_openBlock","_hoisted_1","_createElementVNode","ref","_ctx"],"sources":["../../../src/loading/icon/gradient.vue","../../../src/loading/icon/gradient.vue?vue&type=template&id=4f50d757&lang.js"],"sourcesContent":["<template>\n  <svg\n    :style=\"style\"\n    :class=\"classes\"\n    viewBox=\"0 0 14 14\"\n    version=\"1.1\"\n    width=\"1em\"\n    height=\"1em\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <foreignObject x=\"1\" y=\"1\" width=\"12\" height=\"12\">\n      <div ref=\"circle\" :class=\"`${name}-conic`\" />\n    </foreignObject>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport circleAdapter from '../../_common/js/loading/circle-adapter';\nimport config from '../../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-loading__gradient`;\nconst classname = `${prefix}-icon-loading`;\n\nexport default defineComponent({\n  name,\n  props: {\n    style: [Object, String],\n  },\n  setup() {\n    const classes = [name, classname];\n    return {\n      name,\n      classes,\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.updateColor();\n    });\n  },\n  updated() {\n    this.updateColor();\n  },\n  methods: {\n    updateColor() {\n      const circleElem = this.$refs.circle as HTMLElement;\n      circleAdapter(circleElem);\n    },\n  },\n});\n</script>\n","<template>\n  <svg\n    :style=\"style\"\n    :class=\"classes\"\n    viewBox=\"0 0 14 14\"\n    version=\"1.1\"\n    width=\"1em\"\n    height=\"1em\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <foreignObject x=\"1\" y=\"1\" width=\"12\" height=\"12\">\n      <div ref=\"circle\" :class=\"`${name}-conic`\" />\n    </foreignObject>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport circleAdapter from '../../_common/js/loading/circle-adapter';\nimport config from '../../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-loading__gradient`;\nconst classname = `${prefix}-icon-loading`;\n\nexport default defineComponent({\n  name,\n  props: {\n    style: [Object, String],\n  },\n  setup() {\n    const classes = [name, classname];\n    return {\n      name,\n      classes,\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.updateColor();\n    });\n  },\n  updated() {\n    this.updateColor();\n  },\n  methods: {\n    updateColor() {\n      const circleElem = this.$refs.circle as HTMLElement;\n      circleAdapter(circleElem);\n    },\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}