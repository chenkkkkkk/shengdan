{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { _ as _defineProperty } from '../_chunks/dep-6f104017.js';\nimport { defineComponent, computed, onMounted, h } from 'vue';\nimport ConfigContext from '../utils/config-context.js';\nimport useSizeProps from '../utils/use-size-props.js';\nimport { checkScriptAndLoad } from '../utils/check-url-and-load.js';\nimport props from './props/props.js';\nimport '../style/css.js';\nimport '../utils/use-common-classname.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar {\n  classPrefix\n} = ConfigContext;\nvar CDN_ICONFONT_URL = \"https://tdesign.gtimg.com/icon/0.1.3/fonts/index.js\";\nvar _Icon = defineComponent({\n  name: \"Icon\",\n  props,\n  setup(props2, _ref) {\n    var {\n      attrs\n    } = _ref;\n    var propsSize = computed(() => props2.size);\n    var name = computed(() => props2.name || \"\");\n    var {\n      className: sizeClassName,\n      style: sizeStyle\n    } = useSizeProps(propsSize);\n    var finalUrl = computed(() => {\n      var url = [];\n      url = props2.url instanceof Array ? props2.url.concat() : [props2.url];\n      if (props2.loadDefaultIcons) url.push(CDN_ICONFONT_URL);\n      return url;\n    });\n    var classNames = computed(() => [\"\".concat(classPrefix, \"-icon\"), \"\".concat(classPrefix, \"-icon-\").concat(name.value), sizeClassName.value]);\n    var finalStyle = computed(() => _objectSpread(_objectSpread({}, sizeStyle.value), attrs.style));\n    onMounted(() => {\n      Array.from(new Set(finalUrl.value)).forEach(url => {\n        checkScriptAndLoad(url, \"\".concat(classPrefix, \"-svg-js-stylesheet--unique-class\"));\n      });\n    });\n    var finalProps = computed(() => ({\n      class: classNames.value,\n      style: finalStyle.value,\n      onClick: e => {\n        var _props2$onClick;\n        return (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 ? void 0 : _props2$onClick.call(props2, {\n          e\n        });\n      }\n    }));\n    return () => h(\"svg\", finalProps.value, h(\"use\", {\n      href: props2.url ? \"#\".concat(name.value) : \"#t-icon-\".concat(name.value)\n    }));\n  }\n});\nexport { _Icon as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,IAAM;EAAEA;AAAF,IAAkBC,aAAxB;AAEA,IAAMC,mBAAmB,qDAAzB;AAEA,YAAeC,gBAAgB;EAC7BC,MAAM,MADuB;EAE7BC,KAF6B;EAG7BC,MAAMC,cAAkB;IAAA,IAAX;MAAEC;IAAF,CAAW;QAChBC,YAAYC,SAAS,MAAMH,OAAMI;QACjCP,OAAOM,SAAS,MAAMH,OAAMH,IAAN,IAAc;QAEpC;MAAEQ,WAAWC,aAAb;MAA4BC,OAAOC;IAAnC,IAAiDC,aAAaP;QAE9DQ,WAAWP,SAAS,MAAM;UAC1BQ,MAAM;YACJX,OAAMW,GAAN,YAAqBC,KAArB,GAA6BZ,OAAMW,GAAN,CAAUE,MAAV,EAA7B,GAAkD,CAACb,OAAMW,GAAP;UACpDX,OAAMc,sBAAsBC,KAAKpB;aAC9BgB;;QAGHK,aAAab,SAAS,MAAM,WAC7BV,WAD6B,sBAE7BA,WAF6B,mBAETI,KAAKoB,KAFI,GAGhCX,cAAcW,KAHkB;QAO5BC,aAAaf,SAAS,sCAAYK,UAAUS,KAAtB,GAAiChB,MAAMM,KAAvC;cAElB,MAAM;YACRY,KAAK,IAAIC,GAAJ,CAAQV,SAASO,KAAjB,GAAqCI,QAASV,GAAD,IAAiB;2BACpDA,eAAQlB;;;QAIzB6B,aAAanB,SAAS;MAC1BoB,OAAOP,WAAWC;MAClBV,OAAOW,WAAWD;MAClBO,SAAUC,CAAD;QAAA;QAAA,0BAAkBzB,OAAMwB,OAAxB,oDAAkBE,6BAAgB;UAAED;QAAF,EAAlC;MAAA;KAHiB;WAMrB,MAAME,EAAE,OAAOL,WAAWL,OAAOU,EAAE,OAAO;MAAEC,MAAM5B,OAAMW,GAAN,cAAgBd,KAAKoB,KAArB,sBAA0CpB,KAAKoB,KAA/C;IAAR;;AArCtB,EAA/B","names":["classPrefix","ConfigContext","CDN_ICONFONT_URL","defineComponent","name","props","setup","props2","attrs","propsSize","computed","size","className","sizeClassName","style","sizeStyle","useSizeProps","finalUrl","url","Array","concat","loadDefaultIcons","push","classNames","value","finalStyle","from","Set","forEach","finalProps","class","onClick","e","_props2$onClick","h","href"],"sources":["../../src/svg-sprite/svg-sprite.tsx"],"sourcesContent":["import {\n  computed, defineComponent, h, onMounted,\n} from 'vue';\n\nimport ConfigContext from '../utils/config-context';\nimport useSizeProps from '../utils/use-size-props';\nimport { checkScriptAndLoad } from '../utils/check-url-and-load';\n\nimport props from './props/props';\n\nimport '../style/css';\n\nconst { classPrefix } = ConfigContext;\n\nconst CDN_ICONFONT_URL = 'https://tdesign.gtimg.com/icon/0.1.3/fonts/index.js';\n\nexport default defineComponent({\n  name: 'Icon',\n  props,\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n    const name = computed(() => props.name || '');\n\n    const { className: sizeClassName, style: sizeStyle } = useSizeProps(propsSize);\n\n    const finalUrl = computed(() => {\n      let url = [];\n      url = props.url instanceof Array ? props.url.concat() : [props.url];\n      if (props.loadDefaultIcons) url.push(CDN_ICONFONT_URL);\n      return url;\n    });\n\n    const classNames = computed(() => [\n      `${classPrefix}-icon`,\n      `${classPrefix}-icon-${name.value}`,\n      sizeClassName.value,\n\n    ]);\n\n    const finalStyle = computed(() => ({ ...sizeStyle.value, ...(attrs.style as Styles) }));\n\n    onMounted(() => {\n      Array.from(new Set(finalUrl.value as string[])).forEach((url: string) => {\n        checkScriptAndLoad(url, `${classPrefix}-svg-js-stylesheet--unique-class`);\n      });\n    });\n\n    const finalProps = computed(() => ({\n      class: classNames.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n\n    return () => h('svg', finalProps.value, h('use', { href: props.url ? `#${name.value}` : `#t-icon-${name.value}` }));\n  },\n\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}