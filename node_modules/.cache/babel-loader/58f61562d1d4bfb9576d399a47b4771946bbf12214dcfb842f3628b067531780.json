{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _typeof from '@babel/runtime/helpers/typeof';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { defineComponent, ref, computed, toRaw, watch, openBlock, createElementBlock, createVNode, unref, withCtx, createElementVNode, normalizeClass, renderSlot, createTextVNode, toDisplayString, Fragment, renderList, normalizeStyle, createCommentVNode, createBlock, mergeProps } from 'vue';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\nimport _Popup from '../popup/index.js';\nimport _Button from '../button/index.js';\nimport config from '../config.js';\nimport calendarProps from './props.js';\nimport '../popup/popup.js';\nimport '../popup/props.js';\nimport '../overlay/index.js';\nimport '../shared/index.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/render.js';\nimport 'lodash/camelCase';\nimport '../shared/render-tnode.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '../overlay/overlay.js';\nimport '../overlay/props.js';\nimport './style/css.js';\nimport '../popup/type.js';\nimport '../button/button.js';\nimport '../button/props.js';\nimport '../button/type.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar _hoisted_1 = [\"onClick\"];\nvar _hoisted_2 = {\n  class: \"t-calendar__footer\"\n};\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-calendar\");\nvar __default__ = {\n  name: name,\n  components: {\n    TPopup: _Popup,\n    TButton: _Button\n  }\n};\nvar script = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: calendarProps,\n  emits: [\"select\", \"confirm\", \"update:modelValue\", \"update:value\", \"update:visible\"],\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var getYearMonthDay = function getYearMonthDay(date) {\n      return {\n        year: date.getFullYear(),\n        month: date.getMonth(),\n        date: date.getDate()\n      };\n    };\n    var popup = ref(props.visible);\n    var valueRef = ref(props.value);\n    var selectedDate = ref();\n    var firstDayOfWeek = computed(function () {\n      return props.firstDayOfWeek;\n    });\n    var type = computed(function () {\n      return props.type;\n    });\n    var days = computed(function () {\n      var raw = \"\\u65E5\\u4E00\\u4E8C\\u4E09\\u56DB\\u4E94\\u516D\";\n      var ans = [];\n      var i = firstDayOfWeek.value % 7;\n      while (ans.length < 7) {\n        ans.push(raw[i]);\n        i = (i + 1) % 7;\n      }\n      return ans;\n    });\n    var today = new Date();\n    var minDate = props.minDate ? new Date(props.minDate) : today;\n    var maxDate = props.maxDate ? new Date(props.maxDate) : new Date(today.getFullYear(), today.getMonth() + 6, today.getDate());\n    var getDate = function getDate(year, month, day) {\n      return new Date(year, month, day);\n    };\n    var handleSelect = function handleSelect(year, month, date, dateItem) {\n      var _props$onSelect;\n      if (dateItem.type === \"disabled\") return;\n      var selected = new Date(year, month, date);\n      if (type.value === \"range\" && Array.isArray(selectedDate.value)) {\n        if (selectedDate.value.length === 1) {\n          if (selectedDate.value[0] > selected) {\n            selectedDate.value = [selected];\n          } else {\n            selectedDate.value = [selectedDate.value[0], selected];\n          }\n        } else {\n          selectedDate.value = [selected];\n        }\n      } else if (props.type === \"multiple\") {\n        var newVal = _toConsumableArray(selectedDate.value);\n        var index = selectedDate.value.findIndex(function (item) {\n          return isSameDate(item, selected);\n        });\n        if (index > -1) {\n          newVal.splice(index, 1);\n        } else {\n          newVal.push(selected);\n        }\n        selectedDate.value = newVal;\n      } else {\n        selectedDate.value = selected;\n      }\n      (_props$onSelect = props.onSelect) === null || _props$onSelect === void 0 ? void 0 : _props$onSelect.call(props, toRaw(selectedDate.value));\n    };\n    var handleConfirm = function handleConfirm() {\n      var _props$onConfirm;\n      popup.value = false;\n      (_props$onConfirm = props.onConfirm) === null || _props$onConfirm === void 0 ? void 0 : _props$onConfirm.call(props, toRaw(selectedDate.value));\n    };\n    var getMonthDates = function getMonthDates(date) {\n      var _getYearMonthDay = getYearMonthDay(date),\n        year = _getYearMonthDay.year,\n        month = _getYearMonthDay.month;\n      var firstDay = getDate(year, month, 1);\n      var weekdayOfFirstDay = firstDay.getDay();\n      var lastDate = new Date(+getDate(year, month + 1, 1) - 24 * 3600 * 1e3).getDate();\n      return {\n        year: year,\n        month: month,\n        weekdayOfFirstDay: weekdayOfFirstDay,\n        lastDate: lastDate\n      };\n    };\n    var isSameDate = function isSameDate(date1, date2) {\n      if (date1 instanceof Date) date1 = getYearMonthDay(date1);\n      if (date2 instanceof Date) date2 = getYearMonthDay(date2);\n      var keys = [\"year\", \"month\", \"date\"];\n      return keys.every(function (key) {\n        return date1[key] === date2[key];\n      });\n    };\n    var months = computed(function () {\n      var ans = [];\n      var _getYearMonthDay2 = getYearMonthDay(minDate),\n        minYear = _getYearMonthDay2.year,\n        minMonth = _getYearMonthDay2.month;\n      var _getYearMonthDay3 = getYearMonthDay(maxDate),\n        maxYear = _getYearMonthDay3.year,\n        maxMonth = _getYearMonthDay3.month;\n      var calcType = function calcType(year, month, date) {\n        var curDate = new Date(year, month, date, 23, 59, 59);\n        if (type.value === \"single\") {\n          if (isSameDate({\n            year: year,\n            month: month,\n            date: date\n          }, selectedDate.value)) return \"selected\";\n        }\n        if (type.value === \"multiple\") {\n          var hit = selectedDate.value.some(function (item) {\n            return isSameDate({\n              year: year,\n              month: month,\n              date: date\n            }, item);\n          });\n          if (hit) {\n            return \"selected\";\n          }\n        }\n        if (type.value === \"range\") {\n          if (Array.isArray(selectedDate.value)) {\n            var _selectedDate$value = _slicedToArray(selectedDate.value, 2),\n              startDate = _selectedDate$value[0],\n              endDate = _selectedDate$value[1];\n            if (startDate && isSameDate({\n              year: year,\n              month: month,\n              date: date\n            }, startDate)) return \"start\";\n            if (endDate && isSameDate({\n              year: year,\n              month: month,\n              date: date\n            }, endDate)) return \"end\";\n            if (startDate && endDate && curDate.getTime() > startDate.getTime() && curDate.getTime() < endDate.getTime()) return \"centre\";\n          }\n        }\n        var minCurDate = new Date(year, month, date, 0, 0, 0);\n        if (curDate.getTime() < minDate.getTime() || minCurDate.getTime() > maxDate.getTime()) {\n          return \"disabled\";\n        }\n        return \"\";\n      };\n      while (minYear < maxYear || minYear === maxYear && minMonth <= maxMonth) {\n        var target = getMonthDates(getDate(minYear, minMonth, 1));\n        var months2 = [];\n        for (var i = 1; i <= 31; i++) {\n          if (i > target.lastDate) break;\n          var dateObj = {\n            date: getDate(minYear, minMonth, i),\n            day: i,\n            type: calcType(minYear, minMonth, i)\n          };\n          months2.push(props.format ? props.format(dateObj) : dateObj);\n        }\n        ans.push({\n          year: minYear,\n          month: minMonth,\n          months: months2,\n          weekdayOfFirstDay: target.weekdayOfFirstDay\n        });\n        var curDate = getYearMonthDay(getDate(minYear, minMonth + 1, 1));\n        minYear = curDate.year;\n        minMonth = curDate.month;\n      }\n      return ans;\n    });\n    var confirmBtn = computed(function () {\n      if (typeof props.confirmBtn === \"string\" || props.confirmBtn === \"\") return {\n        content: props.confirmBtn || \"\\u786E\\u8BA4\"\n      };\n      return props.confirmBtn;\n    });\n    watch(function () {\n      return props.visible;\n    }, function (val) {\n      popup.value = val;\n    });\n    watch(function () {\n      return popup.value;\n    }, function (val) {\n      emit(\"update:visible\", val);\n    });\n    watch(valueRef, function () {\n      if (Array.isArray(valueRef.value)) {\n        selectedDate.value = valueRef.value.map(function (item) {\n          return new Date(item);\n        });\n      } else if (valueRef.value) {\n        selectedDate.value = new Date(valueRef.value);\n      } else {\n        selectedDate.value = props.type === \"multiple\" ? [new Date()] : new Date();\n      }\n    }, {\n      immediate: true\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", null, [createVNode(unref(_Popup), {\n        modelValue: popup.value,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return popup.value = $event;\n        }),\n        placement: \"bottom\"\n      }, {\n        default: withCtx(function () {\n          return [createElementVNode(\"div\", {\n            class: normalizeClass(name)\n          }, [createElementVNode(\"div\", {\n            class: normalizeClass(\"\".concat(name, \"__title\"))\n          }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n            return [createTextVNode(toDisplayString(_ctx.title || \"\\u8BF7\\u9009\\u62E9\\u65E5\\u671F\"), 1)];\n          })], 2), createVNode(unref(CloseIcon), {\n            class: normalizeClass(\"\".concat(name, \"__close-btn\")),\n            size: \"24\",\n            onClick: _cache[0] || (_cache[0] = function ($event) {\n              return popup.value = false;\n            })\n          }, null, 8, [\"class\"]), createElementVNode(\"div\", {\n            class: normalizeClass(\"\".concat(name, \"__days\"))\n          }, [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(days), function (item, index) {\n            return openBlock(), createElementBlock(\"div\", {\n              key: index,\n              class: normalizeClass(\"\".concat(name, \"__days-item\"))\n            }, toDisplayString(item), 3);\n          }), 128))], 2), createElementVNode(\"div\", {\n            class: normalizeClass(\"\".concat(name, \"__months\"))\n          }, [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(months), function (item, index) {\n            return openBlock(), createElementBlock(Fragment, {\n              key: index\n            }, [createElementVNode(\"div\", {\n              class: normalizeClass(\"\".concat(name, \"__month\"))\n            }, toDisplayString(item.year) + \" \\u5E74 \" + toDisplayString(item.month + 1) + \" \\u6708\", 3), createElementVNode(\"div\", {\n              class: normalizeClass(\"\".concat(name, \"__dates\"))\n            }, [(openBlock(true), createElementBlock(Fragment, null, renderList(item.months, function (dateItem, dateIndex) {\n              var _dateItem$className, _normalizeClass2;\n              return openBlock(), createElementBlock(\"div\", {\n                key: dateIndex,\n                class: normalizeClass((_normalizeClass2 = {}, _defineProperty(_normalizeClass2, \"\".concat(name, \"__dates-item\"), true), _defineProperty(_normalizeClass2, \"\".concat(name, \"__dates-item--\").concat(dateItem.type), !!dateItem.type), _defineProperty(_normalizeClass2, \"\".concat((_dateItem$className = dateItem.className) !== null && _dateItem$className !== void 0 ? _dateItem$className : \"\"), true), _normalizeClass2)),\n                style: normalizeStyle({\n                  marginLeft: dateIndex === 0 ? \"\".concat(49 * ((item.weekdayOfFirstDay - unref(firstDayOfWeek) + 7) % 7), \"px\") : 0\n                }),\n                onClick: function onClick($event) {\n                  return handleSelect(item.year, item.month, dateItem.day, dateItem);\n                }\n              }, [renderSlot(_ctx.$slots, \"cell\", {\n                item: dateItem\n              }, function () {\n                var _normalizeClass3;\n                return [dateItem.prefix ? (openBlock(), createElementBlock(\"div\", {\n                  key: 0,\n                  class: normalizeClass(\"\".concat(name, \"__dates-item-prefix\"))\n                }, toDisplayString(dateItem.prefix), 3)) : createCommentVNode(\"\", true), createTextVNode(\" \" + toDisplayString(dateItem.day) + \" \", 1), dateItem.suffix ? (openBlock(), createElementBlock(\"div\", {\n                  key: 1,\n                  class: normalizeClass((_normalizeClass3 = {}, _defineProperty(_normalizeClass3, \"\".concat(name, \"__dates-item-suffix\"), true), _defineProperty(_normalizeClass3, \"\".concat(name, \"__dates-item-suffix--\").concat(dateItem.type), !!dateItem.type), _normalizeClass3))\n                }, toDisplayString(dateItem.suffix), 3)) : createCommentVNode(\"\", true)];\n              })], 14, _hoisted_1);\n            }), 128))], 2)], 64);\n          }), 128))], 2), createElementVNode(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"confirmBtn\", {}, function () {\n            return [unref(confirmBtn) && _typeof(unref(confirmBtn)) === \"object\" ? (openBlock(), createBlock(unref(_Button), mergeProps({\n              key: 0,\n              block: \"\",\n              theme: \"primary\"\n            }, unref(confirmBtn), {\n              onClick: handleConfirm\n            }), null, 16)) : createCommentVNode(\"\", true)];\n          })])])];\n        }),\n        _: 3\n      }, 8, [\"modelValue\"])]);\n    };\n  }\n}));\nexport { script as default };","map":{"version":3,"mappings":"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","names":["prefix","config","name","components","TPopup","TButton","getYearMonthDay","date","year","getFullYear","month","getMonth","getDate","ref","visible","value","selectedDate","firstDayOfWeek","props","type","computed","raw","ans","length","i","Date","minDate","maxDate","today","day","handleSelect","dateItem","selected","Array","isArray","newVal","item","index","push","onSelect","_props$onSelect","toRaw","handleConfirm","popup","onConfirm","_props$onConfirm","getMonthDates","firstDay","getDay","lastDate","weekdayOfFirstDay","isSameDate","date1","date2","keys","every","key","minYear","minMonth","maxYear","maxMonth","calcType","hit","startDate","endDate","curDate","getTime","target","months","dateObj","format","confirmBtn","content","watch","val","emit","valueRef","immediate"],"sources":["../../src/calendar/calendar.vue"],"sourcesContent":["<template>\n  <div>\n    <t-popup v-model=\"popup\" placement=\"bottom\">\n      <div :class=\"name\">\n        <div :class=\"`${name}__title`\">\n          <slot name=\"title\">{{ title || '请选择日期' }}</slot>\n        </div>\n        <CloseIcon :class=\"`${name}__close-btn`\" size=\"24\" @click=\"popup = false\" />\n        <div :class=\"`${name}__days`\">\n          <div v-for=\"(item, index) in days\" :key=\"index\" :class=\"`${name}__days-item`\">{{ item }}</div>\n        </div>\n        <div :class=\"`${name}__months`\">\n          <template v-for=\"(item, index) in months\" :key=\"index\">\n            <div :class=\"`${name}__month`\">{{ item.year }} 年 {{ item.month + 1 }} 月</div>\n            <div :class=\"`${name}__dates`\">\n              <template v-for=\"(dateItem, dateIndex) in item.months\" :key=\"dateIndex\">\n                <div\n                  :class=\"{\n                    [`${name}__dates-item`]: true,\n                    [`${name}__dates-item--${dateItem.type}`]: !!dateItem.type,\n                    [`${dateItem.className ?? ''}`]: true,\n                  }\"\n                  :style=\"{\n                    marginLeft: dateIndex === 0 ? `${49 * ((item.weekdayOfFirstDay - firstDayOfWeek + 7) % 7)}px` : 0,\n                  }\"\n                  @click=\"handleSelect(item.year, item.month, dateItem.day, dateItem)\"\n                >\n                  <slot name=\"cell\" :item=\"dateItem\">\n                    <div v-if=\"dateItem.prefix\" :class=\"`${name}__dates-item-prefix`\">{{ dateItem.prefix }}</div>\n                    {{ dateItem.day }}\n                    <div\n                      v-if=\"dateItem.suffix\"\n                      :class=\"{\n                        [`${name}__dates-item-suffix`]: true,\n                        [`${name}__dates-item-suffix--${dateItem.type}`]: !!dateItem.type,\n                      }\"\n                    >\n                      {{ dateItem.suffix }}\n                    </div>\n                  </slot>\n                </div>\n              </template>\n            </div>\n          </template>\n        </div>\n        <div class=\"t-calendar__footer\">\n          <slot name=\"confirmBtn\">\n            <template v-if=\"confirmBtn && typeof confirmBtn === 'object'\">\n              <t-button block theme=\"primary\" v-bind=\"confirmBtn\" @click=\"handleConfirm\" />\n            </template>\n          </slot>\n        </div>\n      </div>\n    </t-popup>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineEmits, defineProps, computed, watch, ref, toRaw } from 'vue';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\nimport TPopup from '../popup';\nimport TButton from '../button';\nimport config from '../config';\nimport calendarProps from './props';\nimport { TDate, TDateType } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-calendar`;\n\nexport default {\n  name,\n  components: {\n    TPopup,\n    TButton,\n  },\n};\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps(calendarProps);\nconst emit = defineEmits(['select', 'confirm', 'update:modelValue', 'update:value', 'update:visible']);\n\n// 获取时间年月日起\nconst getYearMonthDay = (date: Date) => {\n  return {\n    year: date.getFullYear(),\n    month: date.getMonth(),\n    date: date.getDate(),\n  };\n};\n\nconst popup = ref<boolean>(props.visible);\nconst valueRef = ref(props.value);\nconst selectedDate = ref();\nconst firstDayOfWeek = computed(() => props.firstDayOfWeek);\nconst type = computed(() => props.type);\nconst days = computed(() => {\n  const raw = '日一二三四五六';\n  const ans = [];\n  let i = firstDayOfWeek.value % 7;\n\n  while (ans.length < 7) {\n    ans.push(raw[i]);\n    i = (i + 1) % 7;\n  }\n\n  return ans;\n});\nconst today = new Date();\nconst minDate = props.minDate ? new Date(props.minDate) : today;\nconst maxDate = props.maxDate\n  ? new Date(props.maxDate)\n  : new Date(today.getFullYear(), today.getMonth() + 6, today.getDate());\n\n// 获取日期\nconst getDate = (year: number, month: number, day: number) => new Date(year, month, day);\n\n// 选择日期\nconst handleSelect = (year: number, month: number, date: number, dateItem: TDate) => {\n  if (dateItem.type === 'disabled') return;\n  const selected = new Date(year, month, date);\n\n  if (type.value === 'range' && Array.isArray(selectedDate.value)) {\n    if (selectedDate.value.length === 1) {\n      if (selectedDate.value[0] > selected) {\n        selectedDate.value = [selected];\n      } else {\n        selectedDate.value = [selectedDate.value[0], selected];\n      }\n    } else {\n      selectedDate.value = [selected];\n    }\n  } else if (props.type === 'multiple') {\n    const newVal = [...selectedDate.value];\n    const index = selectedDate.value.findIndex((item: Date) => isSameDate(item, selected));\n    if (index > -1) {\n      newVal.splice(index, 1);\n    } else {\n      newVal.push(selected);\n    }\n    selectedDate.value = newVal;\n  } else {\n    selectedDate.value = selected;\n  }\n  props.onSelect?.(toRaw(selectedDate.value));\n};\n// 确认\nconst handleConfirm = () => {\n  popup.value = false;\n  props.onConfirm?.(toRaw(selectedDate.value));\n};\nconst getMonthDates = (date: Date) => {\n  const { year, month } = getYearMonthDay(date);\n  const firstDay = getDate(year, month, 1);\n  const weekdayOfFirstDay = firstDay.getDay();\n  const lastDate = new Date(+getDate(year, month + 1, 1) - 24 * 3600 * 1000).getDate();\n\n  return {\n    year,\n    month,\n    weekdayOfFirstDay,\n    lastDate,\n  };\n};\ntype CompareDate = Date | number | { year: number; month: number; date: number };\nconst isSameDate = (date1: CompareDate, date2: CompareDate) => {\n  if (date1 instanceof Date) date1 = getYearMonthDay(date1);\n  if (date2 instanceof Date) date2 = getYearMonthDay(date2);\n  const keys = ['year', 'month', 'date'];\n  return keys.every((key) => date1[key] === date2[key]);\n};\n\nconst months = computed(() => {\n  const ans = [];\n  let { year: minYear, month: minMonth } = getYearMonthDay(minDate);\n  const { year: maxYear, month: maxMonth } = getYearMonthDay(maxDate);\n  const calcType = (year: number, month: number, date: number): TDateType => {\n    const curDate = new Date(year, month, date, 23, 59, 59);\n\n    if (type.value === 'single') {\n      if (isSameDate({ year, month, date }, selectedDate.value)) return 'selected';\n    }\n    if (type.value === 'multiple') {\n      const hit = selectedDate.value.some((item: Date) => isSameDate({ year, month, date }, item));\n      if (hit) {\n        return 'selected';\n      }\n    }\n    if (type.value === 'range') {\n      if (Array.isArray(selectedDate.value)) {\n        const [startDate, endDate] = selectedDate.value;\n\n        if (startDate && isSameDate({ year, month, date }, startDate)) return 'start';\n        if (endDate && isSameDate({ year, month, date }, endDate)) return 'end';\n        if (startDate && endDate && curDate.getTime() > startDate.getTime() && curDate.getTime() < endDate.getTime())\n          return 'centre';\n      }\n    }\n\n    const minCurDate = new Date(year, month, date, 0, 0, 0);\n    if (curDate.getTime() < minDate.getTime() || minCurDate.getTime() > maxDate.getTime()) {\n      return 'disabled';\n    }\n    return '';\n  };\n\n  while (minYear < maxYear || (minYear === maxYear && minMonth <= maxMonth)) {\n    const target = getMonthDates(getDate(minYear, minMonth, 1));\n    const months: TDate[] = [];\n    for (let i = 1; i <= 31; i++) {\n      if (i > target.lastDate) break;\n      const dateObj: TDate = {\n        date: getDate(minYear, minMonth, i),\n        day: i,\n        type: calcType(minYear, minMonth, i),\n      };\n      months.push(props.format ? props.format(dateObj) : dateObj);\n    }\n    ans.push({\n      year: minYear,\n      month: minMonth,\n      months,\n      weekdayOfFirstDay: target.weekdayOfFirstDay,\n    });\n    const curDate = getYearMonthDay(getDate(minYear, minMonth + 1, 1));\n    minYear = curDate.year;\n    minMonth = curDate.month;\n  }\n\n  return ans;\n});\n\nconst confirmBtn = computed(() => {\n  if (typeof props.confirmBtn === 'string' || props.confirmBtn === '') return { content: props.confirmBtn || '确认' };\n  return props.confirmBtn;\n});\n\nwatch(\n  () => props.visible,\n  (val) => {\n    popup.value = val;\n  },\n);\nwatch(\n  () => popup.value,\n  (val) => {\n    emit('update:visible', val);\n  },\n);\n\nwatch(\n  valueRef,\n  () => {\n    if (Array.isArray(valueRef.value)) {\n      selectedDate.value = valueRef.value.map((item) => new Date(item));\n    } else if (valueRef.value) {\n      selectedDate.value = new Date(valueRef.value);\n    } else {\n      selectedDate.value = props.type === 'multiple' ? [new Date()] : new Date();\n    }\n  },\n  { immediate: true },\n);\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}