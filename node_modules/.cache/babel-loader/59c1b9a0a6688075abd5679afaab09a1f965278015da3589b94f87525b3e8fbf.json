{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport config from '../config.js';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar prefix = config.prefix;\nvar quartEaseOut = function quartEaseOut(t, b, c, d) {\n  var tempT = t;\n  return -c * ((tempT = tempT / d - 1) * tempT * tempT * tempT - 1) + b;\n};\nvar DEFAULT_ITEM_HEIGHT = 40;\nvar DEFAULT_HOLDER_HEIGHT = 200;\nvar OFFSET_OF_BOUND = 60;\nvar ANIMATION_TIME_LIMIT = 460;\nvar ANIMATION_DURATION = 150;\nvar Picker = /*#__PURE__*/function () {\n  function Picker(options) {\n    _classCallCheck(this, Picker);\n    _defineProperty(this, \"holder\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"list\", null);\n    _defineProperty(this, \"elementItems\", []);\n    _defineProperty(this, \"height\", DEFAULT_HOLDER_HEIGHT);\n    _defineProperty(this, \"curIndex\", 0);\n    _defineProperty(this, \"itemClassName\", \"\");\n    _defineProperty(this, \"itemSelectedClassName\", \"\");\n    _defineProperty(this, \"itemHeight\", DEFAULT_ITEM_HEIGHT);\n    _defineProperty(this, \"lastMoveTime\", 0);\n    _defineProperty(this, \"lastMoveStart\", 0);\n    _defineProperty(this, \"stopInertiaMove\", false);\n    _defineProperty(this, \"startY\", 0);\n    _defineProperty(this, \"isPicking\", false);\n    _defineProperty(this, \"offsetYOfStartBound\", OFFSET_OF_BOUND);\n    _defineProperty(this, \"offsetYOfEndBound\", -OFFSET_OF_BOUND);\n    _defineProperty(this, \"offsetY\", 0);\n    _defineProperty(this, \"offsetYOfStart\", 0);\n    _defineProperty(this, \"offsetYOfEnd\", 0);\n    _defineProperty(this, \"onChange\", void 0);\n    if (!options.el) throw new Error(\"options el needed!\");\n    this.holder = options.el;\n    this.options = options || {};\n    this.onChange = options.onChange;\n    this.init();\n  }\n  _createClass(Picker, [{\n    key: \"init\",\n    value: function init() {\n      this.initScrollParams();\n      this.setSelectedClassName();\n      this.bindEvent();\n    }\n  }, {\n    key: \"updateItems\",\n    value: function updateItems() {\n      this.elementItems = _toConsumableArray(this.holder.querySelectorAll(\"li\"));\n      var itemLen = this.elementItems.length;\n      this.offsetYOfEnd = -this.itemHeight * (itemLen - 3);\n      this.offsetYOfEndBound = -(this.itemHeight * (itemLen - 3) + OFFSET_OF_BOUND);\n    }\n  }, {\n    key: \"initScrollParams\",\n    value: function initScrollParams() {\n      var _this$holder$querySel;\n      this.list = this.holder.querySelector(\"ul\");\n      this.elementItems = _toConsumableArray(this.holder.querySelectorAll(\"li\"));\n      this.itemHeight = ((_this$holder$querySel = this.holder.querySelector(\"li\")) === null || _this$holder$querySel === void 0 ? void 0 : _this$holder$querySel.offsetHeight) || DEFAULT_ITEM_HEIGHT;\n      this.height = this.holder.offsetHeight || DEFAULT_HOLDER_HEIGHT;\n      this.curIndex = this.options.defaultIndex || 0;\n      this.itemClassName = \"\".concat(prefix, \"-picker-item__item\");\n      this.itemSelectedClassName = \"\".concat(prefix, \"-picker-item__item--selected\");\n      this.itemHeight = DEFAULT_ITEM_HEIGHT;\n      this.startY = 0;\n      this.isPicking = false;\n      this.lastMoveTime = 0;\n      this.lastMoveStart = 0;\n      this.stopInertiaMove = false;\n      var startOffsetY = (-this.curIndex + 2) * this.itemHeight;\n      var itemLen = this.elementItems.length;\n      this.setOffsetY(startOffsetY);\n      this.offsetYOfStart = startOffsetY;\n      this.offsetYOfEnd = -this.itemHeight * (itemLen - 3);\n      this.offsetYOfStartBound = this.itemHeight * 2 + OFFSET_OF_BOUND;\n      this.offsetYOfEndBound = -(this.itemHeight * (itemLen - 3) + OFFSET_OF_BOUND);\n    }\n  }, {\n    key: \"bindEvent\",\n    value: function bindEvent() {\n      var _this = this;\n      this.holder.addEventListener(\"touchstart\", function (e) {\n        return _this.touchStartHandler(e);\n      }, false);\n      this.holder.addEventListener(\"touchmove\", function (e) {\n        return _this.touchMoveHandler(e);\n      }, false);\n      this.holder.addEventListener(\"touchend\", function (e) {\n        return _this.touchEndHandler(e);\n      }, false);\n      this.holder.addEventListener(\"touchcancel\", function (e) {\n        return _this.touchEndHandler(e);\n      }, false);\n    }\n  }, {\n    key: \"touchStartHandler\",\n    value: function touchStartHandler(event) {\n      event.preventDefault();\n      this.isPicking = true;\n      if (!this.holder) return;\n      if (this.list) this.list.style.transition = \"\";\n      this.startY = event.changedTouches[0].pageY;\n      this.updateInertiaParams(event, true);\n    }\n  }, {\n    key: \"touchMoveHandler\",\n    value: function touchMoveHandler(event) {\n      event.preventDefault();\n      if (!this.isPicking || !this.holder) return;\n      var endY = event.changedTouches[0].pageY;\n      var dragRange = endY - this.startY;\n      this.updateInertiaParams(event, false);\n      var moveOffsetY = (-this.curIndex + 2) * this.itemHeight + dragRange;\n      this.setOffsetY(moveOffsetY);\n    }\n  }, {\n    key: \"touchEndHandler\",\n    value: function touchEndHandler(event) {\n      event.preventDefault();\n      this.isPicking = false;\n      if (!this.holder) return;\n      var point = event.changedTouches[0];\n      var nowTime = event.timeStamp || Date.now();\n      var moveTime = nowTime - this.lastMoveTime;\n      if (moveTime > ANIMATION_TIME_LIMIT) {\n        this.stopInertiaMove = false;\n        this.endScroll();\n        return;\n      }\n      var v = (point.pageY - this.lastMoveStart) / moveTime;\n      var dir = v > 0 ? -1 : 1;\n      var dampingCoefficient = 8e-4;\n      var deceleration = -1 * dir * dampingCoefficient;\n      var duration = Math.abs(v / deceleration);\n      var endY = event.changedTouches[0].pageY;\n      var dragRange = endY - this.startY;\n      var dist = v * duration - Math.pow(duration, 2) * deceleration / 2 + dragRange;\n      if (dist === 0) {\n        this.stopInertiaMove = false;\n        this.endScroll();\n        return;\n      }\n      this.scrollDist(nowTime, this.offsetY, dist, duration);\n    }\n  }, {\n    key: \"updateInertiaParams\",\n    value: function updateInertiaParams(event, isStart) {\n      var point = event.changedTouches[0];\n      if (isStart) {\n        this.lastMoveStart = point.pageY;\n        this.lastMoveTime = event.timeStamp || Date.now();\n      }\n      this.stopInertiaMove = true;\n    }\n  }, {\n    key: \"scrollDist\",\n    value: function scrollDist(now, startOffsetY, dist, duration) {\n      var _this2 = this;\n      this.stopInertiaMove = false;\n      var start = null;\n      var inertiaMove = function inertiaMove(timestamp) {\n        if (_this2.stopInertiaMove) {\n          return;\n        }\n        if (!start) start = timestamp;\n        var progress = timestamp - start;\n        var newOffsetY = quartEaseOut(progress, startOffsetY, dist, duration);\n        _this2.setOffsetY(newOffsetY);\n        if (progress > duration || newOffsetY > _this2.offsetYOfStartBound || newOffsetY < _this2.offsetYOfEndBound) {\n          _this2.endScroll();\n        } else {\n          window.requestAnimationFrame(inertiaMove);\n        }\n      };\n      window.requestAnimationFrame(inertiaMove);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.updateItems();\n      var updateIndex = this.curIndex > this.elementItems.length - 1 ? 0 : this.curIndex;\n      this.updateIndex(updateIndex);\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(index, options) {\n      var realOptions = _objectSpread({\n        duration: 460,\n        isChange: true\n      }, options);\n      this.curIndex = index;\n      this.setSelectedClassName();\n      var moveOffsetY = (-index + 2) * this.itemHeight;\n      if (this.list) {\n        this.list.style.transform = \"translate(0,\".concat(moveOffsetY, \"px) translateZ(0)\");\n        this.list.style.transitionDuration = \"\".concat(realOptions.duration, \"ms\");\n        this.list.style.transitionTimingFunction = \"ease-out\";\n      }\n      realOptions.isChange && this.onChange(index);\n    }\n  }, {\n    key: \"getCurIndex\",\n    value: function getCurIndex() {\n      return this.curIndex;\n    }\n  }, {\n    key: \"fix3d\",\n    value: function fix3d(index) {\n      for (var i = 0; i < this.elementItems.length; i++) {\n        var deg = 25 * (-index + i);\n        this.elementItems[i].style.transform = \"rotateX(\".concat(deg, \"deg)\");\n        this.elementItems[i].style.webkitTransform = \"rotateX(\".concat(deg, \"deg)\");\n      }\n    }\n  }, {\n    key: \"setSelectedClassName\",\n    value: function setSelectedClassName() {\n      var _this3 = this;\n      var regClass = new RegExp(this.itemClassName, \"i\");\n      var regSelected = new RegExp(this.itemSelectedClassName, \"i\");\n      this.elementItems.forEach(function (item, i) {\n        var tempItem = item;\n        var itemClass = tempItem.className;\n        if (itemClass === \"\" || !itemClass) {\n          tempItem.className = _this3.itemClassName;\n        } else {\n          if (!regClass.test(itemClass)) {\n            tempItem.classList.add(_this3.itemClassName);\n          }\n          if (regSelected.test(itemClass)) {\n            tempItem.classList.remove(_this3.itemSelectedClassName);\n          }\n        }\n        if (_this3.curIndex === i) {\n          tempItem.classList.add(_this3.itemSelectedClassName);\n        }\n      });\n    }\n  }, {\n    key: \"setOffsetY\",\n    value: function setOffsetY(offsetY) {\n      this.offsetY = offsetY;\n      if (this.list) {\n        this.list.style.transform = \"translate3d(0, \".concat(offsetY, \"px, 0)\");\n      }\n    }\n  }, {\n    key: \"endScroll\",\n    value: function endScroll() {\n      if (this.stopInertiaMove) return;\n      var curIndex = 0;\n      if (this.offsetY > this.offsetYOfStartBound) {\n        curIndex = 0;\n        if (this.list) {\n          this.list.style.transition = \"\".concat(ANIMATION_DURATION, \"ms ease-out\");\n        }\n      } else if (this.offsetY < this.offsetYOfEndBound) {\n        curIndex = this.elementItems.length - 1;\n        if (this.list) {\n          this.list.style.transition = \"\".concat(ANIMATION_DURATION, \"ms ease-out\");\n        }\n      } else {\n        if (this.list) {\n          this.list.style.transition = \"\".concat(ANIMATION_DURATION, \"ms ease-out\");\n        }\n        curIndex = 2 - Math.round(this.offsetY / this.itemHeight);\n        if (curIndex < 0) curIndex = 0;\n        if (curIndex > this.elementItems.length - 1) curIndex = this.elementItems.length - 1;\n      }\n      var offsetY = (-curIndex + 2) * this.itemHeight;\n      this.setOffsetY(offsetY);\n      if (curIndex !== this.curIndex) {\n        this.curIndex = curIndex;\n        this.setSelectedClassName();\n        this.onChange(this.curIndex);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.holder;\n    }\n  }]);\n  return Picker;\n}();\nexport { ANIMATION_TIME_LIMIT, DEFAULT_ITEM_HEIGHT, Picker as default };","map":{"version":3,"mappings":"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","names":["prefix","config","quartEaseOut","t","c","d","tempT","DEFAULT_ITEM_HEIGHT","DEFAULT_HOLDER_HEIGHT","OFFSET_OF_BOUND","ANIMATION_TIME_LIMIT","ANIMATION_DURATION","Picker","options","_classCallCheck","_defineProperty","Error","holder","onChange","init","_createClass","key","value","initScrollParams","setSelectedClassName","bindEvent","updateItems","elementItems","offsetYOfEnd","itemLen","offsetYOfEndBound","list","itemHeight","querySelector","_this$holder$querySel","offsetHeight","defaultIndex","itemClassName","itemSelectedClassName","startY","isPicking","lastMoveTime","lastMoveStart","stopInertiaMove","startOffsetY","setOffsetY","offsetYOfStart","addEventListener","e","_this","event","preventDefault","style","transition","endY","moveOffsetY","curIndex","changedTouches","nowTime","timeStamp","now","moveTime","endScroll","v","pageY","dampingCoefficient","dir","duration","abs","deceleration","dist","Math","scrollDist","isStart","point","start","inertiaMove","timestamp","_this2","progress","newOffsetY","offsetYOfStartBound","window","requestAnimationFrame","update","length","updateIndex","index","realOptions","isChange","transitionDuration","transitionTimingFunction","getCurIndex","i","deg","regClass","RegExp","regSelected","item","tempItem","itemClass","className","_this3","test","add","remove","offsetY","destroy"],"sources":["../../src/picker/picker.class.ts"],"sourcesContent":["import config from '../config';\n\nconst { prefix } = config;\n\nexport interface PickerOptions {\n  defaultIndex?: number;\n  el: HTMLElement | HTMLDivElement | HTMLUListElement;\n  onChange: (index: number) => void;\n}\n\nconst quartEaseOut = function (t: number, b: number, c: number, d: number) {\n  let tempT = t;\n  return -c * ((tempT = tempT / d - 1) * tempT * tempT * tempT - 1) + b;\n};\n\n/**\n * constant var\n */\nexport const DEFAULT_ITEM_HEIGHT = 40;\nconst DEFAULT_HOLDER_HEIGHT = 200;\nconst OFFSET_OF_BOUND = 60;\nexport const ANIMATION_TIME_LIMIT = 460;\nconst ANIMATION_DURATION = 150;\n\n/**\n * @name picker\n * @description 阻尼参数来源iscroll5，灵感来自mui.picker\n * @param {[HTMLDivElement]} el   [picker-item的DOM元素]\n * @param {[Function]} onChange   [发生change事件时候的回调]\n * @param {[Number]} defaultIndex [picker-item开始的索引值]\n */\nclass Picker {\n  holder: HTMLElement | HTMLDivElement | HTMLUListElement;\n\n  options: PickerOptions;\n\n  list: HTMLUListElement | null = null;\n\n  elementItems: HTMLLIElement[] = [];\n\n  height: number = DEFAULT_HOLDER_HEIGHT;\n\n  curIndex = 0;\n\n  itemClassName = '';\n\n  itemSelectedClassName = '';\n\n  itemHeight: number = DEFAULT_ITEM_HEIGHT;\n\n  lastMoveTime = 0;\n\n  lastMoveStart = 0;\n\n  stopInertiaMove = false;\n\n  startY = 0;\n\n  isPicking = false;\n\n  offsetYOfStartBound: number = OFFSET_OF_BOUND;\n\n  offsetYOfEndBound: number = -OFFSET_OF_BOUND;\n\n  offsetY = 0;\n\n  offsetYOfStart = 0;\n\n  offsetYOfEnd = 0;\n\n  onChange: (index: number) => void;\n\n  constructor(options: PickerOptions) {\n    if (!options.el) throw new Error('options el needed!');\n    this.holder = options.el;\n    this.options = options || {};\n    this.onChange = options.onChange;\n    this.init();\n  }\n\n  init(): void {\n    // 惯性滚动\n    this.initScrollParams();\n    // item 样式\n    this.setSelectedClassName();\n    // 绑定事件\n    this.bindEvent();\n  }\n\n  /**\n   * @description 获取所有的列表DOM元素\n   */\n  updateItems(): void {\n    this.elementItems = [...this.holder.querySelectorAll('li')];\n    const itemLen = this.elementItems.length;\n    this.offsetYOfEnd = -this.itemHeight * (itemLen - 3);\n    this.offsetYOfEndBound = -(this.itemHeight * (itemLen - 3) + OFFSET_OF_BOUND);\n  }\n\n  /**\n   * @description 初始化滚动参数\n   */\n  initScrollParams(): void {\n    this.list = this.holder.querySelector('ul');\n    this.elementItems = [...this.holder.querySelectorAll('li')];\n    this.itemHeight = this.holder.querySelector('li')?.offsetHeight || DEFAULT_ITEM_HEIGHT;\n    this.height = this.holder.offsetHeight || DEFAULT_HOLDER_HEIGHT;\n    this.curIndex = this.options.defaultIndex || 0;\n    this.itemClassName = `${prefix}-picker-item__item`;\n    this.itemSelectedClassName = `${prefix}-picker-item__item--selected`;\n    this.itemHeight = DEFAULT_ITEM_HEIGHT;\n    this.startY = 0;\n    this.isPicking = false;\n    this.lastMoveTime = 0;\n    this.lastMoveStart = 0;\n    this.stopInertiaMove = false;\n    const startOffsetY = (-this.curIndex + 2) * this.itemHeight;\n    const itemLen = this.elementItems.length;\n    this.setOffsetY(startOffsetY);\n    this.offsetYOfStart = startOffsetY;\n    this.offsetYOfEnd = -this.itemHeight * (itemLen - 3);\n    this.offsetYOfStartBound = this.itemHeight * 2 + OFFSET_OF_BOUND;\n    this.offsetYOfEndBound = -(this.itemHeight * (itemLen - 3) + OFFSET_OF_BOUND);\n  }\n\n  bindEvent(): void {\n    this.holder.addEventListener('touchstart', (e) => this.touchStartHandler(e as TouchEvent), false);\n    this.holder.addEventListener('touchmove', (e) => this.touchMoveHandler(e as TouchEvent), false);\n    this.holder.addEventListener('touchend', (e) => this.touchEndHandler(e as TouchEvent), false);\n    this.holder.addEventListener('touchcancel', (e) => this.touchEndHandler(e as TouchEvent), false);\n  }\n\n  touchStartHandler(event: TouchEvent): void {\n    event.preventDefault();\n    this.isPicking = true;\n    if (!this.holder) return;\n    if (this.list) this.list.style.transition = '';\n    this.startY = event.changedTouches[0].pageY;\n    // 更新惯性参数\n    this.updateInertiaParams(event, true);\n  }\n\n  touchMoveHandler(event: TouchEvent): void {\n    event.preventDefault();\n    if (!this.isPicking || !this.holder) return;\n    const endY = event.changedTouches[0].pageY;\n    const dragRange = endY - this.startY;\n    this.updateInertiaParams(event, false);\n    const moveOffsetY = (-this.curIndex + 2) * this.itemHeight + dragRange;\n    this.setOffsetY(moveOffsetY);\n  }\n\n  touchEndHandler(event: TouchEvent): void {\n    event.preventDefault();\n    this.isPicking = false;\n    if (!this.holder) return;\n    const point = event.changedTouches[0];\n    const nowTime = event.timeStamp || Date.now();\n    // move time gap\n    const moveTime = nowTime - this.lastMoveTime;\n    // 超出一定时间不再惯性滚动\n    if (moveTime > ANIMATION_TIME_LIMIT) {\n      this.stopInertiaMove = false;\n      this.endScroll();\n      return;\n    }\n    // 手指滑动的速度\n    const v = (point.pageY - this.lastMoveStart) / moveTime;\n    // 加速度方向\n    const dir = v > 0 ? -1 : 1;\n    // 摩擦系数，参考iscroll的阻尼系数\n    const dampingCoefficient = 0.0008;\n    // 加速度\n    const deceleration = -1 * dir * dampingCoefficient;\n    // 滚动持续时间\n    const duration = Math.abs(v / deceleration);\n    const endY = event.changedTouches[0].pageY;\n    const dragRange = endY - this.startY;\n    // 滚动距离\n    const dist = v * duration - (duration ** 2 * deceleration) / 2 + dragRange;\n    if (dist === 0) {\n      this.stopInertiaMove = false;\n      this.endScroll();\n      return;\n    }\n    this.scrollDist(nowTime, this.offsetY, dist, duration);\n  }\n\n  /**\n   * @description 更新惯性参数\n   * @param event\n   * @param isStart\n   */\n  updateInertiaParams(event: TouchEvent, isStart: boolean): void {\n    const point = event.changedTouches[0];\n    if (isStart) {\n      this.lastMoveStart = point.pageY;\n      this.lastMoveTime = event.timeStamp || Date.now();\n    }\n    this.stopInertiaMove = true;\n  }\n\n  /**\n   * @description 根据计算的物理惯性距离滚动\n   * @param now\n   * @param startOffsetY\n   * @param dist\n   * @param duration\n   */\n  scrollDist(now: number, startOffsetY: number, dist: number, duration: number): void {\n    this.stopInertiaMove = false;\n    let start: any = null;\n    const inertiaMove = (timestamp: number) => {\n      if (this.stopInertiaMove) {\n        return;\n      }\n      if (!start) start = timestamp;\n      const progress = timestamp - start;\n      const newOffsetY = quartEaseOut(progress, startOffsetY, dist, duration);\n      this.setOffsetY(newOffsetY);\n      if (progress > duration || newOffsetY > this.offsetYOfStartBound || newOffsetY < this.offsetYOfEndBound) {\n        this.endScroll();\n      } else {\n        window.requestAnimationFrame(inertiaMove);\n      }\n    };\n    window.requestAnimationFrame(inertiaMove);\n  }\n\n  /**\n   * @description 更新picker，一般当数据变化需要ui更新的时候调用\n   */\n  update(): void {\n    this.updateItems();\n    const updateIndex = this.curIndex > this.elementItems.length - 1 ? 0 : this.curIndex;\n    this.updateIndex(updateIndex);\n  }\n\n  /**\n   * @description 更新picker索引，数据变化时调用\n   * @param index\n   * @param duration\n   */\n  updateIndex(index: number, options?: any): void {\n    const realOptions = {\n      duration: 460,\n      isChange: true,\n      ...options,\n    };\n    this.curIndex = index;\n    this.setSelectedClassName();\n    const moveOffsetY = (-index + 2) * this.itemHeight;\n    if (this.list) {\n      this.list.style.transform = `translate(0,${moveOffsetY}px) translateZ(0)`;\n      this.list.style.transitionDuration = `${realOptions.duration}ms`;\n      this.list.style.transitionTimingFunction = 'ease-out';\n    }\n    realOptions.isChange && this.onChange(index);\n  }\n\n  /**\n   * @description 获取当前索引\n   */\n  getCurIndex(): number {\n    return this.curIndex;\n  }\n\n  /**\n   * @description 适配3d， TBD\n   * @param index\n   */\n  fix3d(index: number): void {\n    for (let i = 0; i < this.elementItems.length; i++) {\n      const deg = 25 * (-index + i);\n      this.elementItems[i].style.transform = `rotateX(${deg}deg)`;\n      this.elementItems[i].style.webkitTransform = `rotateX(${deg}deg)`;\n    }\n  }\n\n  /**\n   * @description 设置item样式\n   */\n  setSelectedClassName(): void {\n    const regClass = new RegExp(this.itemClassName, 'i');\n    const regSelected = new RegExp(this.itemSelectedClassName, 'i');\n    this.elementItems.forEach((item, i) => {\n      const tempItem = item;\n      const itemClass = tempItem.className;\n      if (itemClass === '' || !itemClass) {\n        tempItem.className = this.itemClassName;\n      } else {\n        if (!regClass.test(itemClass)) {\n          tempItem.classList.add(this.itemClassName);\n        }\n        if (regSelected.test(itemClass)) {\n          tempItem.classList.remove(this.itemSelectedClassName);\n        }\n      }\n      if (this.curIndex === i) {\n        tempItem.classList.add(this.itemSelectedClassName);\n      }\n    });\n  }\n\n  /**\n   * 设置当前picker的滚动位移\n   * @param offsetY\n   */\n  setOffsetY(offsetY: number): void {\n    this.offsetY = offsetY;\n    if (this.list) {\n      this.list.style.transform = `translate3d(0, ${offsetY}px, 0)`;\n    }\n  }\n\n  /**\n   * @description 结束滚动时的回调\n   */\n  endScroll(): void {\n    if (this.stopInertiaMove) return;\n    let curIndex = 0;\n    if (this.offsetY > this.offsetYOfStartBound) {\n      curIndex = 0;\n      if (this.list) {\n        this.list.style.transition = `${ANIMATION_DURATION}ms ease-out`;\n      }\n    } else if (this.offsetY < this.offsetYOfEndBound) {\n      curIndex = this.elementItems.length - 1;\n      if (this.list) {\n        this.list.style.transition = `${ANIMATION_DURATION}ms ease-out`;\n      }\n    } else {\n      if (this.list) {\n        this.list.style.transition = `${ANIMATION_DURATION}ms ease-out`;\n      }\n      curIndex = 2 - Math.round(this.offsetY / this.itemHeight);\n      if (curIndex < 0) curIndex = 0;\n      if (curIndex > this.elementItems.length - 1) curIndex = this.elementItems.length - 1;\n    }\n    const offsetY = (-curIndex + 2) * this.itemHeight;\n    this.setOffsetY(offsetY);\n    if (curIndex !== this.curIndex) {\n      // 防止事件重复触发\n      this.curIndex = curIndex;\n      this.setSelectedClassName();\n      this.onChange(this.curIndex);\n    }\n  }\n\n  destroy(): void {\n    // @ts-ignore: TODO\n    delete this.holder;\n  }\n}\n\nexport default Picker;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}