{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v0.14.1\n * (c) 2022 TDesign Group\n * @license MIT\n */\n\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { defineComponent, inject, computed, getCurrentInstance, toRefs, resolveComponent, withDirectives, openBlock, createElementBlock, normalizeClass, renderSlot, createVNode, vShow, createCommentVNode } from 'vue';\nimport '../shared/index.js';\nimport config from '../config.js';\nimport TabPanelProps from './tab-panel-props.js';\nimport TNodeComponent from '../shared/render-tnode.js';\nimport { renderContent } from '../shared/render.js';\nimport '../shared/functions.js';\nimport '../shared/util.js';\nimport '../shared/component.js';\nimport '../shared/constants.js';\nimport '../shared/useToggle/index.js';\nimport '../shared/useCountDown/index.js';\nimport '@babel/runtime/helpers/asyncToGenerator';\nimport '@babel/runtime/regenerator';\nimport '@vueuse/core';\nimport '../shared/useCountDown/utils.js';\nimport '../shared/useDefault/index.js';\nimport 'lodash/camelCase';\nimport '../shared/useEmitEvent/index.js';\nimport '../shared/useChildSlots/index.js';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../shared/useVModel/index.js';\nimport '../shared/useTouch/index.js';\nimport '../shared/useScrollParent/index.js';\nimport '../shared/useExpose/index.js';\nimport '../shared/useTest/index.js';\nimport '@babel/runtime/helpers/typeof';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar prefix = config.prefix;\nvar name = \"\".concat(prefix, \"-tab-panel\");\nvar script = defineComponent({\n  name: name,\n  components: {\n    TNode: TNodeComponent\n  },\n  props: TabPanelProps,\n  setup: function setup(props) {\n    var currentValue = inject(\"currentValue\", \"\");\n    var isActive = computed(function () {\n      return currentValue.value === props.value;\n    });\n    var internalInstance = getCurrentInstance();\n    var panelContent = computed(function () {\n      return renderContent(internalInstance, \"default\", \"panel\");\n    });\n    var tabPanelClass = computed(function () {\n      return [\"\".concat(name), \"\".concat(prefix, \"-tabs__panel\")];\n    });\n    return _objectSpread({\n      prefix: prefix,\n      name: name,\n      isActive: isActive,\n      panelContent: panelContent,\n      tabPanelClass: tabPanelClass\n    }, toRefs(props));\n  }\n});\nvar _hoisted_1 = [\"value\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_t_node = resolveComponent(\"t-node\");\n  return _ctx.destroyOnHide || _ctx.isActive ? withDirectives((openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.tabPanelClass),\n    value: _ctx.value\n  }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [createVNode(_component_t_node, {\n      content: _ctx.panelContent\n    }, null, 8, [\"content\"])];\n  })], 10, _hoisted_1)), [[vShow, _ctx.isActive]]) : createCommentVNode(\"\", true);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAQA,SAAWC,OAAXD;AACR,IAAME,OAAUF;AAEhB,aAAeG,eAAgB;EAC7BD;EACAE,YAAY;IAAEC,KAAM,EAANA;GAAM;EACpBC,KAAO;EACPC,sBAAMD,KAAO;IACL,mBAAeE,MAAO,iBAAgB,EAAE;IAC9C,IAAMC,WAAWC,QAAS;MAAA,OAAMC,YAAa,WAAUL,MAAMM,KAAK;KAAA;IAClE,IAAMC,mBAAmBC,kBAAmB;IAC5C,IAAMC,eAAeL,QAAS;MAAA,OAAMM,cAAcH,gBAAkB,aAAW,OAAO,CAAC;KAAA;IACjF,oBAAgBH,SAAS;MAAA,OAAM,CAAIR,cAAQ,CAAGF,oBAAqB;KAAA;IAClE;MACLA;MACAE;MACAO;MACAM;MACAE;KACGC,SAAOZ,KAAK;EAEnB;AACF,CAAC;;;;ECnCY,6BAAiBa,IAAQ,yCAApCC,mBAIK;;IAJoDC,qBAAO,MAAaJ;IAAGL,OAAOO,IAAK;MAC1FG,WAEMH,4BAFN;IAAA,OAEM,CADJI,YAAwCC;MAA/BC,OAAS,OAAYV;KAAA;gCAFY,OAAQN","names":["prefix","config","name","defineComponent","components","TNode","props","setup","inject","isActive","computed","currentValue","value","internalInstance","getCurrentInstance","panelContent","renderContent","tabPanelClass","toRefs","_ctx","_createElementBlock","class","_renderSlot","_createVNode","_component_t_node","content"],"sources":["../../src/tabs/tab-panel.vue","../../src/tabs/tab-panel.vue?vue&type=template&id=019e82b6&lang.js"],"sourcesContent":["<template>\n  <div v-if=\"destroyOnHide || isActive\" v-show=\"isActive\" :class=\"tabPanelClass\" :value=\"value\">\n    <slot>\n      <t-node :content=\"panelContent\"></t-node>\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, toRefs, Ref, computed, getCurrentInstance } from 'vue';\nimport { renderContent, renderTNode, TNode } from '../shared';\nimport config from '../config';\nimport TabPanelProps from './tab-panel-props';\n\nconst { prefix } = config;\nconst name = `${prefix}-tab-panel`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: TabPanelProps,\n  setup(props) {\n    const currentValue = inject('currentValue', '') as unknown as Ref<string>;\n    const isActive = computed(() => currentValue.value === props.value);\n    const internalInstance = getCurrentInstance();\n    const panelContent = computed(() => renderContent(internalInstance, 'default', 'panel'));\n    const tabPanelClass = computed(() => [`${name}`, `${prefix}-tabs__panel`]);\n    return {\n      prefix,\n      name,\n      isActive,\n      panelContent,\n      tabPanelClass,\n      ...toRefs(props),\n    };\n  },\n});\n</script>\n","<template>\n  <div v-if=\"destroyOnHide || isActive\" v-show=\"isActive\" :class=\"tabPanelClass\" :value=\"value\">\n    <slot>\n      <t-node :content=\"panelContent\"></t-node>\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, toRefs, Ref, computed, getCurrentInstance } from 'vue';\nimport { renderContent, renderTNode, TNode } from '../shared';\nimport config from '../config';\nimport TabPanelProps from './tab-panel-props';\n\nconst { prefix } = config;\nconst name = `${prefix}-tab-panel`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: TabPanelProps,\n  setup(props) {\n    const currentValue = inject('currentValue', '') as unknown as Ref<string>;\n    const isActive = computed(() => currentValue.value === props.value);\n    const internalInstance = getCurrentInstance();\n    const panelContent = computed(() => renderContent(internalInstance, 'default', 'panel'));\n    const tabPanelClass = computed(() => [`${name}`, `${prefix}-tabs__panel`]);\n    return {\n      prefix,\n      name,\n      isActive,\n      panelContent,\n      tabPanelClass,\n      ...toRefs(props),\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}