{"version":3,"file":"navbar.js","sources":["../../src/navbar/navbar.vue","../../src/navbar/navbar.vue?vue&type=template&id=422b0e7d&lang.js"],"sourcesContent":["<template>\n  <div v-show=\"visible\" :class=\"name\" :style=\"`${navStyle}`\">\n    <div v-if=\"homeContent || leftContent\" :class=\"`${name}__back`\">\n      <span v-if=\"leftIcon === true\" :class=\"`${name}__back--arrow`\" @click=\"handleLeftClick\">\n        <t-chevron-left-icon />\n      </span>\n      <span v-if=\"homeIcon === true\" :class=\"`${name}__back--arrow`\">\n        <t-home-icon />\n      </span>\n      <t-node :content=\"homeContent\"></t-node>\n      <t-node :content=\"leftContent\"></t-node>\n    </div>\n\n    <div :class=\"`${name}__text`\">\n      <t-node :content=\"titleContent\"></t-node>\n    </div>\n\n    <div :class=\"`${name}__right`\" @click=\"handleRightClick\">\n      <t-node :content=\"rightContent\"></t-node>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, SetupContext, toRefs } from 'vue';\nimport { ChevronLeftIcon as TChevronLeftIcon, HomeIcon as THomeIcon } from 'tdesign-icons-vue-next';\nimport config from '../config';\nimport { renderTNode, TNode, useEmitEvent } from '../shared';\nimport NavbarProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-navbar`;\n\nexport default defineComponent({\n  name,\n  components: { TChevronLeftIcon, TNode, THomeIcon },\n  props: NavbarProps,\n  emits: ['left-click', 'right-click'],\n  setup(props, context: SetupContext) {\n    const internalInstance = getCurrentInstance();\n    const { title, titleMaxLength, fixed, background } = toRefs(props);\n\n    const navStyle = computed(\n      () => `position: ${fixed.value ? 'fixed' : 'relative'}; background: ${background.value || ''};`,\n    );\n\n    const titleContent = computed(() => {\n      if (titleMaxLength.value != null && title.value) {\n        if (titleMaxLength.value <= 0) {\n          console.warn('titleMaxLength must be greater than 0');\n        } else {\n          return title.value.length <= titleMaxLength.value\n            ? props.title\n            : `${(title.value as string).slice(0, titleMaxLength.value)}...`;\n        }\n      }\n\n      return renderTNode(internalInstance, 'title');\n    });\n\n    const leftContent = computed(() => renderTNode(internalInstance, 'left-icon'));\n    const rightContent = computed(() => renderTNode(internalInstance, 'right-icon'));\n    const homeContent = computed(() => renderTNode(internalInstance, 'home-icon'));\n\n    const emitEvent = useEmitEvent(props, context.emit);\n\n    const handleLeftClick = () => {\n      emitEvent('left-click');\n    };\n\n    const handleRightClick = () => {\n      emitEvent('right-click');\n    };\n\n    return {\n      name,\n      titleContent,\n      leftContent,\n      rightContent,\n      navStyle,\n      homeContent,\n      handleLeftClick,\n      handleRightClick,\n    };\n  },\n});\n</script>\n","<template>\n  <div v-show=\"visible\" :class=\"name\" :style=\"`${navStyle}`\">\n    <div v-if=\"homeContent || leftContent\" :class=\"`${name}__back`\">\n      <span v-if=\"leftIcon === true\" :class=\"`${name}__back--arrow`\" @click=\"handleLeftClick\">\n        <t-chevron-left-icon />\n      </span>\n      <span v-if=\"homeIcon === true\" :class=\"`${name}__back--arrow`\">\n        <t-home-icon />\n      </span>\n      <t-node :content=\"homeContent\"></t-node>\n      <t-node :content=\"leftContent\"></t-node>\n    </div>\n\n    <div :class=\"`${name}__text`\">\n      <t-node :content=\"titleContent\"></t-node>\n    </div>\n\n    <div :class=\"`${name}__right`\" @click=\"handleRightClick\">\n      <t-node :content=\"rightContent\"></t-node>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, SetupContext, toRefs } from 'vue';\nimport { ChevronLeftIcon as TChevronLeftIcon, HomeIcon as THomeIcon } from 'tdesign-icons-vue-next';\nimport config from '../config';\nimport { renderTNode, TNode, useEmitEvent } from '../shared';\nimport NavbarProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-navbar`;\n\nexport default defineComponent({\n  name,\n  components: { TChevronLeftIcon, TNode, THomeIcon },\n  props: NavbarProps,\n  emits: ['left-click', 'right-click'],\n  setup(props, context: SetupContext) {\n    const internalInstance = getCurrentInstance();\n    const { title, titleMaxLength, fixed, background } = toRefs(props);\n\n    const navStyle = computed(\n      () => `position: ${fixed.value ? 'fixed' : 'relative'}; background: ${background.value || ''};`,\n    );\n\n    const titleContent = computed(() => {\n      if (titleMaxLength.value != null && title.value) {\n        if (titleMaxLength.value <= 0) {\n          console.warn('titleMaxLength must be greater than 0');\n        } else {\n          return title.value.length <= titleMaxLength.value\n            ? props.title\n            : `${(title.value as string).slice(0, titleMaxLength.value)}...`;\n        }\n      }\n\n      return renderTNode(internalInstance, 'title');\n    });\n\n    const leftContent = computed(() => renderTNode(internalInstance, 'left-icon'));\n    const rightContent = computed(() => renderTNode(internalInstance, 'right-icon'));\n    const homeContent = computed(() => renderTNode(internalInstance, 'home-icon'));\n\n    const emitEvent = useEmitEvent(props, context.emit);\n\n    const handleLeftClick = () => {\n      emitEvent('left-click');\n    };\n\n    const handleRightClick = () => {\n      emitEvent('right-click');\n    };\n\n    return {\n      name,\n      titleContent,\n      leftContent,\n      rightContent,\n      navStyle,\n      homeContent,\n      handleLeftClick,\n      handleRightClick,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TChevronLeftIcon","TNode","THomeIcon","props","NavbarProps","emits","setup","context","internalInstance","getCurrentInstance","toRefs","title","titleMaxLength","fixed","background","navStyle","computed","value","titleContent","console","warn","length","slice","renderTNode","leftContent","rightContent","homeContent","emitEvent","useEmitEvent","emit","handleLeftClick","handleRightClick","_createElementBlock","class","_ctx","style","leftIcon","onClick","_createVNode","_component_t_chevron_left_icon","homeIcon","_component_t_home_icon","_component_t_node","content","_createElementVNode","visible"],"mappings":"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"}