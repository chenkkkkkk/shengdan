import { h } from 'vue';
import { NoticeBarTrigger, DrawMarquee } from './type';
declare const _default: import("vue").DefineComponent<{
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    extra: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    marquee: {
        type: import("vue").PropType<boolean | DrawMarquee | undefined>;
        default: boolean;
    };
    prefixIcon: {
        type: import("vue").PropType<boolean | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
        default: boolean;
    };
    suffixIcon: {
        type: import("vue").PropType<((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    theme: {
        type: import("vue").PropType<"error" | "success" | "info" | "warning" | undefined>;
        default: "error" | "success" | "info" | "warning" | undefined;
        validator(val: "error" | "success" | "info" | "warning" | undefined): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultVisible: BooleanConstructor;
    onChange: import("vue").PropType<((value: boolean) => void) | undefined>;
    onClick: import("vue").PropType<((trigger: NoticeBarTrigger) => void) | undefined>;
}, {
    rootClasses: import("vue").ComputedRef<string[]>;
    prefixIconContent: import("vue").ComputedRef<any>;
    suffixIconContent: import("vue").ComputedRef<any>;
    showExtraText: import("vue").ComputedRef<any>;
    showContent: import("vue").ComputedRef<any>;
    isShow: import("vue").Ref<boolean | undefined>;
    handleClick: (trigger: NoticeBarTrigger) => void;
    listDOM: import("vue").Ref<any>;
    itemDOM: import("vue").Ref<any>;
    animateStyle: import("vue").ComputedRef<{
        transform: string;
        transitionDuration: string;
        transitionTimingFunction: string;
    }>;
    handleScrolling: () => void;
    handleTransitionend: () => void;
    duration: import("vue").Ref<number>;
    offset: import("vue").Ref<number>;
    listWidth: import("vue").Ref<number>;
    itemWidth: import("vue").Ref<number>;
    timer: import("vue").Ref<null>;
    nextTimer: import("vue").Ref<null>;
    scroll: import("vue").Ref<{
        marquee: boolean;
        speed: number;
        loop: number;
        delay: number;
    }>;
    defaultVisible: import("vue").Ref<boolean>;
    theme: import("vue").Ref<"error" | "success" | "info" | "warning" | undefined>;
    marquee: import("vue").Ref<boolean | DrawMarquee | undefined>;
    prefixIcon: import("vue").Ref<boolean | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    content: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    onChange: import("vue").Ref<((value: boolean) => void) | undefined>;
    modelValue: import("vue").Ref<boolean | undefined>;
    onClick: import("vue").Ref<((trigger: NoticeBarTrigger) => void) | undefined>;
    visible: import("vue").Ref<boolean | undefined>;
    suffixIcon: import("vue").Ref<((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    extra: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    name: string;
} | {
    rootClasses: import("vue").ComputedRef<string[]>;
    prefixIconContent: import("vue").ComputedRef<any>;
    suffixIconContent: import("vue").ComputedRef<any>;
    showExtraText: import("vue").ComputedRef<any>;
    showContent: import("vue").ComputedRef<any>;
    isShow: import("vue").Ref<boolean | undefined>;
    handleClick: (trigger: NoticeBarTrigger) => void;
    listDOM: import("vue").Ref<any>;
    itemDOM: import("vue").Ref<any>;
    animateStyle: import("vue").ComputedRef<{
        transform: string;
        transitionDuration: string;
        transitionTimingFunction: string;
    }>;
    handleScrolling: () => void;
    handleTransitionend: () => void;
    duration: import("vue").Ref<number>;
    offset: import("vue").Ref<number>;
    listWidth: import("vue").Ref<number>;
    itemWidth: import("vue").Ref<number>;
    timer: import("vue").Ref<null>;
    nextTimer: import("vue").Ref<null>;
    scroll: import("vue").Ref<{
        marquee: boolean;
        speed: number;
        loop: number;
        delay: number;
    }>;
    defaultVisible: import("vue").Ref<boolean>;
    theme: import("vue").Ref<"error" | "success" | "info" | "warning" | undefined>;
    marquee: import("vue").Ref<boolean | DrawMarquee | undefined>;
    prefixIcon: import("vue").Ref<boolean | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    content: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    onChange: import("vue").Ref<((value: boolean) => void) | undefined>;
    modelValue: import("vue").Ref<boolean | undefined>;
    onClick: import("vue").Ref<((trigger: NoticeBarTrigger) => void) | undefined>;
    visible: import("vue").Ref<boolean | undefined>;
    suffixIcon: import("vue").Ref<((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    extra: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    name: string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "click" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    extra: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    marquee: {
        type: import("vue").PropType<boolean | DrawMarquee | undefined>;
        default: boolean;
    };
    prefixIcon: {
        type: import("vue").PropType<boolean | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
        default: boolean;
    };
    suffixIcon: {
        type: import("vue").PropType<((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    theme: {
        type: import("vue").PropType<"error" | "success" | "info" | "warning" | undefined>;
        default: "error" | "success" | "info" | "warning" | undefined;
        validator(val: "error" | "success" | "info" | "warning" | undefined): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultVisible: BooleanConstructor;
    onChange: import("vue").PropType<((value: boolean) => void) | undefined>;
    onClick: import("vue").PropType<((trigger: NoticeBarTrigger) => void) | undefined>;
}>>, {
    modelValue: boolean;
    visible: boolean;
    defaultVisible: boolean;
    theme: "error" | "success" | "info" | "warning" | undefined;
    marquee: boolean | DrawMarquee | undefined;
    prefixIcon: boolean | ((h: typeof h) => import("../common").SlotReturnValue) | undefined;
}>;
export default _default;
