{"version":3,"file":"util.js","sources":["../../src/shared/util.ts"],"sourcesContent":["export function toCamel(str: string): string {\n  return str.replace(/^\\S/, (m) => m.toUpperCase());\n}\n\nexport const inBrowser = typeof window !== 'undefined';\n\n/**\n * 计算字符串字符的长度并可以截取字符串。\n * @param str 传入字符串\n * @param maxCharacter 规定最大字符串长度\n * @returns 当没有传入maxCharacter时返回字符串字符长度，当传入maxCharacter时返回截取之后的字符串和长度。\n */\nexport function getCharacterLength(str: string, maxCharacter?: number) {\n  const hasMaxCharacter = typeof maxCharacter === 'number';\n  if (!str || str.length === 0) {\n    if (hasMaxCharacter) {\n      return {\n        length: 0,\n        characters: str,\n      };\n    }\n    return 0;\n  }\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    let currentStringLength = 0;\n    if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {\n      currentStringLength = 2;\n    } else {\n      currentStringLength = 1;\n    }\n    if (hasMaxCharacter && len + currentStringLength > maxCharacter) {\n      return {\n        length: len,\n        characters: str.slice(0, i),\n      };\n    }\n    len += currentStringLength;\n  }\n  if (hasMaxCharacter) {\n    return {\n      length: len,\n      characters: str,\n    };\n  }\n  return len;\n}\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms)); // eslint-disable-line\n"],"names":["toCamel","str","replace","m","toUpperCase","inBrowser","window","getCharacterLength","maxCharacter","hasMaxCharacter","length","characters","len","i","currentStringLength","charCodeAt","slice","sleep","ms","Promise","resolve","setTimeout"],"mappings":";;;;;;AAAO,SAASA,QAAQC,GAAqB,EAAA;AAC3C,EAAA,OAAOA,IAAIC,OAAQ,CAAA,KAAA,EAAO,UAACC,CAAM,EAAA;IAAA,OAAAA,CAAA,CAAEC,aAAa,CAAA;GAAA,CAAA,CAAA;AAClD,CAAA;IAEaC,SAAA,GAAY,OAAOC,MAAW,KAAA,YAAA;AAQ3B,SAAAC,kBAAA,CAAmBN,KAAaO,YAAuB,EAAA;AAC/D,EAAA,IAAAC,eAAA,GAAkB,OAAOD,YAAiB,KAAA,QAAA,CAAA;EAChD,IAAI,CAACP,GAAA,IAAOA,GAAI,CAAAS,MAAA,KAAW,CAAG,EAAA;AAC5B,IAAA,IAAID,eAAiB,EAAA;MACZ,OAAA;AACLC,QAAAA,MAAQ,EAAA,CAAA;AACRC,QAAAA,UAAY,EAAAV,GAAAA;OACd,CAAA;AACF,KAAA;AACO,IAAA,OAAA,CAAA,CAAA;AACT,GAAA;EACA,IAAIW,GAAM,GAAA,CAAA,CAAA;AACV,EAAA,KAAA,IAASC,CAAI,GAAA,CAAA,EAAGA,CAAI,GAAAZ,GAAA,CAAIS,QAAQG,CAAK,EAAA,EAAA;IACnC,IAAIC,mBAAsB,GAAA,CAAA,CAAA;AACtB,IAAA,IAAAb,GAAA,CAAIc,WAAWF,CAAC,CAAA,GAAI,OAAOZ,GAAI,CAAAc,UAAA,CAAWF,CAAC,CAAA,KAAM,EAAI,EAAA;AACjCC,MAAAA,mBAAA,GAAA,CAAA,CAAA;AACxB,KAAO,MAAA;AACiBA,MAAAA,mBAAA,GAAA,CAAA,CAAA;AACxB,KAAA;AACI,IAAA,IAAAL,eAAA,IAAmBG,GAAM,GAAAE,mBAAA,GAAsBN,YAAc,EAAA;MACxD,OAAA;AACLE,QAAAA,MAAQ,EAAAE,GAAA;AACRD,QAAAA,UAAY,EAAAV,GAAA,CAAIe,KAAM,CAAA,CAAA,EAAGH,CAAC,CAAA;OAC5B,CAAA;AACF,KAAA;AACOD,IAAAA,GAAA,IAAAE,mBAAA,CAAA;AACT,GAAA;AACA,EAAA,IAAIL,eAAiB,EAAA;IACZ,OAAA;AACLC,MAAAA,MAAQ,EAAAE,GAAA;AACRD,MAAAA,UAAY,EAAAV,GAAAA;KACd,CAAA;AACF,GAAA;AACO,EAAA,OAAAW,GAAA,CAAA;AACT,CAAA;IAEaK,KAAA,GAAQ,SAARA,KAAA,CAASC,EAAA,EAAA;AAAA,EAAA,OAAe,IAAIC,OAAA,CAAQ,UAACC,OAAY,EAAA;AAAA,IAAA,OAAAC,UAAA,CAAWD,OAAS,EAAAF,EAAE,CAAC,CAAA;GAAA,CAAA,CAAA;AAAA;;;;"}