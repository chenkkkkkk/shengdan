{"version":3,"file":"notice-bar.js","sources":["../../src/notice-bar/notice-bar.vue","../../src/notice-bar/notice-bar.vue?vue&type=template&id=a46bc1e6&lang.js"],"sourcesContent":["<template>\n  <div v-if=\"isShow\" :class=\"rootClasses\">\n    <div :class=\"`${name}__inner`\">\n      <div v-if=\"prefixIconContent\" :class=\"`${name}__hd`\" @click=\"() => handleClick('prefix-icon')\">\n        <t-node :content=\"prefixIconContent\"></t-node>\n      </div>\n\n      <div :class=\"`${name}__bd`\">\n        <div ref=\"listDOM\" :class=\"`${name}__list ${scroll.marquee ? `${name}__list--scrolling` : ''}`\">\n          <div\n            ref=\"itemDOM\"\n            :class=\"`${name}__item ${showExtraText ? `${name}__item-detail` : ''}`\"\n            :style=\"scroll.marquee ? animateStyle : ''\"\n            @transitionend=\"handleTransitionend()\"\n          >\n            <span :class=\"`${name}__text`\" @click=\"() => handleClick('content')\">\n              <t-node v-if=\"showContent\" :content=\"showContent\"></t-node>\n              <span :class=\"`${name}__text-detail`\" @click.stop=\"() => handleClick('extra')\">\n                <t-node v-if=\"showExtraText\" :content=\"showExtraText\"></t-node>\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"suffixIconContent !== undefined\" :class=\"`${name}__ft`\" @click=\"() => handleClick('suffix-icon')\">\n        <t-node :content=\"suffixIconContent\"></t-node>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  reactive,\n  ref,\n  toRefs,\n  SetupContext,\n  computed,\n  onMounted,\n  nextTick,\n  defineComponent,\n  h,\n  getCurrentInstance,\n  watch,\n  watchEffect,\n} from 'vue';\nimport { InfoCircleFilledIcon, CheckCircleFilledIcon, CloseCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport isFunction from 'lodash/isFunction';\nimport NoticeBarProps from './props';\nimport { NoticeBarTrigger, DrawMarquee } from './type';\nimport config from '../config';\nimport { useEmitEvent, renderTNode, TNode, useVModel } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-notice-bar`;\nconst iconDefault = {\n  info: h(InfoCircleFilledIcon),\n  success: h(CheckCircleFilledIcon),\n  warning: h(InfoCircleFilledIcon),\n  error: h(CloseCircleFilledIcon),\n};\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: NoticeBarProps,\n  emits: ['click', 'change'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const internalInstance = getCurrentInstance();\n    // 初始化数据\n    const state = reactive({\n      duration: 0,\n      offset: 0,\n      listWidth: 0,\n      itemWidth: 0,\n      timer: null,\n      nextTimer: null,\n      scroll: {\n        marquee: false,\n        speed: 50,\n        loop: -1, // 值为 -1 表示循环播放，值为 0 表示不循环播放\n        delay: 0,\n      },\n    });\n\n    const rootClasses = computed(() => [`${name}`, `${name}--${props.theme}`]);\n\n    // prefix-icon\n    const prefixIconContent = computed(() => {\n      let iconContent = null;\n      if (isFunction(props.prefixIcon) || context.slots.prefixIcon) {\n        iconContent = renderTNode(internalInstance, 'prefixIcon');\n      } else if (props.prefixIcon) {\n        const key = props.theme as string;\n        iconContent = iconDefault?.[key] || null;\n      }\n      return iconContent;\n    });\n\n    // suffix-icon\n    const suffixIconContent = computed(() => renderTNode(internalInstance, 'suffixIcon'));\n    // extra\n    const showExtraText = computed(() => renderTNode(internalInstance, 'extra'));\n    // content\n    const showContent = computed(() => renderTNode(internalInstance, 'content'));\n    // click\n    function handleClick(trigger: NoticeBarTrigger) {\n      emitEvent('click', trigger);\n    }\n    // 动画 i\n    const animateStyle = computed(() => ({\n      transform: state.offset ? `translateX(${state.offset}px)` : '',\n      transitionDuration: `${state.duration}s`,\n      transitionTimingFunction: 'linear',\n    }));\n\n    const listDOM = ref();\n    const itemDOM = ref();\n\n    const { visible, modelValue } = toRefs(props);\n    const [isShow, setStatusValue] = useVModel(\n      visible,\n      modelValue,\n      props.defaultVisible,\n      props.onChange as (value: boolean | undefined) => void,\n    );\n    function handleScrolling() {\n      if (!props?.marquee || (props?.marquee as DrawMarquee)?.loop === 0) {\n        return;\n      }\n      // 初始化动画参数\n      if (typeof props.marquee === 'boolean') {\n        state.scroll = { ...state.scroll, marquee: props.marquee };\n      }\n      const marquee = props.marquee as DrawMarquee;\n      state.scroll = {\n        marquee: true,\n        loop: typeof marquee?.loop === 'undefined' ? state.scroll.loop : marquee.loop,\n        speed: marquee.speed ?? state.scroll.speed,\n        delay: marquee.delay ?? state.scroll.delay,\n      };\n      // 设置动画\n      setTimeout(() => {\n        const listDOMWidth = listDOM.value?.getBoundingClientRect().width;\n        const itemDOMWidth = itemDOM.value?.getBoundingClientRect().width;\n        if (itemDOMWidth > listDOMWidth) {\n          state.offset = -itemDOMWidth;\n          state.duration = itemDOMWidth / state.scroll.speed;\n          state.listWidth = listDOMWidth;\n          state.itemWidth = itemDOMWidth;\n        }\n      }, state.scroll.delay);\n    }\n    // 动画结束后，初始化动画\n    function handleTransitionend() {\n      // 触发再次滚的\n      state.scroll.loop = --state.scroll.loop;\n      if (state.scroll.loop === 0) {\n        state.scroll = {\n          ...state.scroll,\n          marquee: false,\n        };\n        return;\n      }\n      state.offset = state.listWidth;\n      state.duration = 0;\n\n      setTimeout(() => {\n        state.offset = -state.itemWidth;\n        state.duration = (state.itemWidth + state.listWidth) / state.scroll.speed;\n      }, 0);\n    }\n    onMounted(() => {\n      nextTick(() => {\n        if (isShow.value) {\n          handleScrolling();\n        }\n      });\n    });\n    watch(\n      () => isShow.value,\n      () => {\n        emitEvent('change', isShow.value);\n        nextTick(() => {\n          if (isShow.value) {\n            state.offset = state.listWidth;\n            state.duration = 0;\n            handleScrolling();\n          }\n        });\n      },\n    );\n\n    return {\n      name,\n      ...toRefs(props),\n      ...toRefs(state),\n      rootClasses,\n      prefixIconContent,\n      suffixIconContent,\n      showExtraText,\n      showContent,\n      isShow,\n      handleClick,\n      listDOM,\n      itemDOM,\n      animateStyle,\n      handleScrolling,\n      handleTransitionend,\n    };\n  },\n});\n</script>\n","<template>\n  <div v-if=\"isShow\" :class=\"rootClasses\">\n    <div :class=\"`${name}__inner`\">\n      <div v-if=\"prefixIconContent\" :class=\"`${name}__hd`\" @click=\"() => handleClick('prefix-icon')\">\n        <t-node :content=\"prefixIconContent\"></t-node>\n      </div>\n\n      <div :class=\"`${name}__bd`\">\n        <div ref=\"listDOM\" :class=\"`${name}__list ${scroll.marquee ? `${name}__list--scrolling` : ''}`\">\n          <div\n            ref=\"itemDOM\"\n            :class=\"`${name}__item ${showExtraText ? `${name}__item-detail` : ''}`\"\n            :style=\"scroll.marquee ? animateStyle : ''\"\n            @transitionend=\"handleTransitionend()\"\n          >\n            <span :class=\"`${name}__text`\" @click=\"() => handleClick('content')\">\n              <t-node v-if=\"showContent\" :content=\"showContent\"></t-node>\n              <span :class=\"`${name}__text-detail`\" @click.stop=\"() => handleClick('extra')\">\n                <t-node v-if=\"showExtraText\" :content=\"showExtraText\"></t-node>\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"suffixIconContent !== undefined\" :class=\"`${name}__ft`\" @click=\"() => handleClick('suffix-icon')\">\n        <t-node :content=\"suffixIconContent\"></t-node>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  reactive,\n  ref,\n  toRefs,\n  SetupContext,\n  computed,\n  onMounted,\n  nextTick,\n  defineComponent,\n  h,\n  getCurrentInstance,\n  watch,\n  watchEffect,\n} from 'vue';\nimport { InfoCircleFilledIcon, CheckCircleFilledIcon, CloseCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport isFunction from 'lodash/isFunction';\nimport NoticeBarProps from './props';\nimport { NoticeBarTrigger, DrawMarquee } from './type';\nimport config from '../config';\nimport { useEmitEvent, renderTNode, TNode, useVModel } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-notice-bar`;\nconst iconDefault = {\n  info: h(InfoCircleFilledIcon),\n  success: h(CheckCircleFilledIcon),\n  warning: h(InfoCircleFilledIcon),\n  error: h(CloseCircleFilledIcon),\n};\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: NoticeBarProps,\n  emits: ['click', 'change'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const internalInstance = getCurrentInstance();\n    // 初始化数据\n    const state = reactive({\n      duration: 0,\n      offset: 0,\n      listWidth: 0,\n      itemWidth: 0,\n      timer: null,\n      nextTimer: null,\n      scroll: {\n        marquee: false,\n        speed: 50,\n        loop: -1, // 值为 -1 表示循环播放，值为 0 表示不循环播放\n        delay: 0,\n      },\n    });\n\n    const rootClasses = computed(() => [`${name}`, `${name}--${props.theme}`]);\n\n    // prefix-icon\n    const prefixIconContent = computed(() => {\n      let iconContent = null;\n      if (isFunction(props.prefixIcon) || context.slots.prefixIcon) {\n        iconContent = renderTNode(internalInstance, 'prefixIcon');\n      } else if (props.prefixIcon) {\n        const key = props.theme as string;\n        iconContent = iconDefault?.[key] || null;\n      }\n      return iconContent;\n    });\n\n    // suffix-icon\n    const suffixIconContent = computed(() => renderTNode(internalInstance, 'suffixIcon'));\n    // extra\n    const showExtraText = computed(() => renderTNode(internalInstance, 'extra'));\n    // content\n    const showContent = computed(() => renderTNode(internalInstance, 'content'));\n    // click\n    function handleClick(trigger: NoticeBarTrigger) {\n      emitEvent('click', trigger);\n    }\n    // 动画 i\n    const animateStyle = computed(() => ({\n      transform: state.offset ? `translateX(${state.offset}px)` : '',\n      transitionDuration: `${state.duration}s`,\n      transitionTimingFunction: 'linear',\n    }));\n\n    const listDOM = ref();\n    const itemDOM = ref();\n\n    const { visible, modelValue } = toRefs(props);\n    const [isShow, setStatusValue] = useVModel(\n      visible,\n      modelValue,\n      props.defaultVisible,\n      props.onChange as (value: boolean | undefined) => void,\n    );\n    function handleScrolling() {\n      if (!props?.marquee || (props?.marquee as DrawMarquee)?.loop === 0) {\n        return;\n      }\n      // 初始化动画参数\n      if (typeof props.marquee === 'boolean') {\n        state.scroll = { ...state.scroll, marquee: props.marquee };\n      }\n      const marquee = props.marquee as DrawMarquee;\n      state.scroll = {\n        marquee: true,\n        loop: typeof marquee?.loop === 'undefined' ? state.scroll.loop : marquee.loop,\n        speed: marquee.speed ?? state.scroll.speed,\n        delay: marquee.delay ?? state.scroll.delay,\n      };\n      // 设置动画\n      setTimeout(() => {\n        const listDOMWidth = listDOM.value?.getBoundingClientRect().width;\n        const itemDOMWidth = itemDOM.value?.getBoundingClientRect().width;\n        if (itemDOMWidth > listDOMWidth) {\n          state.offset = -itemDOMWidth;\n          state.duration = itemDOMWidth / state.scroll.speed;\n          state.listWidth = listDOMWidth;\n          state.itemWidth = itemDOMWidth;\n        }\n      }, state.scroll.delay);\n    }\n    // 动画结束后，初始化动画\n    function handleTransitionend() {\n      // 触发再次滚的\n      state.scroll.loop = --state.scroll.loop;\n      if (state.scroll.loop === 0) {\n        state.scroll = {\n          ...state.scroll,\n          marquee: false,\n        };\n        return;\n      }\n      state.offset = state.listWidth;\n      state.duration = 0;\n\n      setTimeout(() => {\n        state.offset = -state.itemWidth;\n        state.duration = (state.itemWidth + state.listWidth) / state.scroll.speed;\n      }, 0);\n    }\n    onMounted(() => {\n      nextTick(() => {\n        if (isShow.value) {\n          handleScrolling();\n        }\n      });\n    });\n    watch(\n      () => isShow.value,\n      () => {\n        emitEvent('change', isShow.value);\n        nextTick(() => {\n          if (isShow.value) {\n            state.offset = state.listWidth;\n            state.duration = 0;\n            handleScrolling();\n          }\n        });\n      },\n    );\n\n    return {\n      name,\n      ...toRefs(props),\n      ...toRefs(state),\n      rootClasses,\n      prefixIconContent,\n      suffixIconContent,\n      showExtraText,\n      showContent,\n      isShow,\n      handleClick,\n      listDOM,\n      itemDOM,\n      animateStyle,\n      handleScrolling,\n      handleTransitionend,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","iconDefault","info","h","InfoCircleFilledIcon","success","CheckCircleFilledIcon","warning","error","CloseCircleFilledIcon","defineComponent","components","TNode","props","NoticeBarProps","emits","setup","context","emitEvent","useEmitEvent","emit","internalInstance","getCurrentInstance","state","reactive","duration","offset","listWidth","itemWidth","timer","nextTimer","scroll","marquee","speed","loop","delay","rootClasses","computed","theme","prefixIconContent","iconContent","isFunction","prefixIcon","slots","renderTNode","key","suffixIconContent","showExtraText","showContent","handleClick","trigger","animateStyle","transform","transitionDuration","transitionTimingFunction","listDOM","ref","itemDOM","toRefs","visible","modelValue","useVModel","defaultVisible","onChange","_slicedToArray","isShow","handleScrolling","setTimeout","listDOMWidth","value","getBoundingClientRect","width","itemDOMWidth","handleTransitionend","onMounted","nextTick","watch","_ctx","_createElementBlock","class","_createElementVNode","onClick","_createVNode","_component_t_node","content","_normalizeClass","style","_normalizeStyle","onTransitionend","_createBlock"],"mappings":"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"}