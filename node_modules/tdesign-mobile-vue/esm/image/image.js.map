{"version":3,"file":"image.js","sources":["../../src/image/image.vue","../../src/image/image.vue?vue&type=template&id=0a2c36d2&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classes\">\n    <div v-if=\"loadingValue || errorValue\" :class=\"`${name}__status`\">\n      <t-node :content=\"statusContent\" />\n    </div>\n    <img\n      ref=\"imageDOM\"\n      :class=\"`${name}__img`\"\n      :style=\"imageStyles\"\n      :src=\"realSrc\"\n      :alt=\"alt\"\n      @load=\"handleImgLoadCompleted\"\n      @error=\"handleImgLoadError\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, SetupContext, getCurrentInstance, h, watchEffect } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { EllipsisIcon, CloseIcon } from 'tdesign-icons-vue-next';\nimport { useEmitEvent, renderTNode, TNode } from '../shared';\nimport ImageProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-image`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: ImageProps,\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n\n    // 默认loading和error状态展示，slot支持Node和Function\n    const internalInstance = getCurrentInstance();\n\n    const closeIcon = h(CloseIcon);\n    const ellipsisIcon = h(EllipsisIcon);\n    const statusContent = computed(() => {\n      if (context.slots?.loading && loadingValue.value) {\n        return renderTNode(internalInstance, 'loading');\n      }\n      if (!context.slots?.loading && loadingValue.value) {\n        return ellipsisIcon;\n      }\n      if (context.slots?.error && errorValue.value) {\n        return renderTNode(internalInstance, 'error');\n      }\n      if (!context.slots?.error && errorValue.value) {\n        return closeIcon;\n      }\n      return '';\n    });\n\n    // 记录图片的loading、error状态\n    const loadingValue = ref(true);\n    const errorValue = ref(false);\n\n    // 图片自定义样式\n    const imageStyles = computed(() => {\n      return {\n        objectFit: props.fit,\n        objectPosition: props.position,\n      };\n    });\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${name}--${props.shape}`]: true,\n    }));\n\n    // 图片懒加载\n    const imageDOM = ref();\n    const realSrc = ref('');\n    watchEffect(() => {\n      realSrc.value = props.lazy ? '' : props.src;\n    });\n    const { stop } = useIntersectionObserver(imageDOM, ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting && props.lazy) {\n        // 停止监听\n        stop();\n        realSrc.value = props.src;\n      }\n    });\n\n    // 图片加载完成回调\n    const handleImgLoadCompleted = (e: Event) => {\n      emitEvent('load', e);\n      loadingValue.value = false;\n    };\n\n    // 图片加载失败回调\n    const handleImgLoadError = (e: Event) => {\n      if (realSrc.value === '') {\n        return;\n      }\n      emitEvent('error', e);\n      loadingValue.value = false;\n      errorValue.value = true;\n    };\n    return {\n      imageDOM,\n      statusContent,\n      name,\n      classes,\n      imageStyles,\n      loadingValue,\n      realSrc,\n      errorValue,\n      handleImgLoadCompleted,\n      handleImgLoadError,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"classes\">\n    <div v-if=\"loadingValue || errorValue\" :class=\"`${name}__status`\">\n      <t-node :content=\"statusContent\" />\n    </div>\n    <img\n      ref=\"imageDOM\"\n      :class=\"`${name}__img`\"\n      :style=\"imageStyles\"\n      :src=\"realSrc\"\n      :alt=\"alt\"\n      @load=\"handleImgLoadCompleted\"\n      @error=\"handleImgLoadError\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, SetupContext, getCurrentInstance, h, watchEffect } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { EllipsisIcon, CloseIcon } from 'tdesign-icons-vue-next';\nimport { useEmitEvent, renderTNode, TNode } from '../shared';\nimport ImageProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-image`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: ImageProps,\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n\n    // 默认loading和error状态展示，slot支持Node和Function\n    const internalInstance = getCurrentInstance();\n\n    const closeIcon = h(CloseIcon);\n    const ellipsisIcon = h(EllipsisIcon);\n    const statusContent = computed(() => {\n      if (context.slots?.loading && loadingValue.value) {\n        return renderTNode(internalInstance, 'loading');\n      }\n      if (!context.slots?.loading && loadingValue.value) {\n        return ellipsisIcon;\n      }\n      if (context.slots?.error && errorValue.value) {\n        return renderTNode(internalInstance, 'error');\n      }\n      if (!context.slots?.error && errorValue.value) {\n        return closeIcon;\n      }\n      return '';\n    });\n\n    // 记录图片的loading、error状态\n    const loadingValue = ref(true);\n    const errorValue = ref(false);\n\n    // 图片自定义样式\n    const imageStyles = computed(() => {\n      return {\n        objectFit: props.fit,\n        objectPosition: props.position,\n      };\n    });\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${name}--${props.shape}`]: true,\n    }));\n\n    // 图片懒加载\n    const imageDOM = ref();\n    const realSrc = ref('');\n    watchEffect(() => {\n      realSrc.value = props.lazy ? '' : props.src;\n    });\n    const { stop } = useIntersectionObserver(imageDOM, ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting && props.lazy) {\n        // 停止监听\n        stop();\n        realSrc.value = props.src;\n      }\n    });\n\n    // 图片加载完成回调\n    const handleImgLoadCompleted = (e: Event) => {\n      emitEvent('load', e);\n      loadingValue.value = false;\n    };\n\n    // 图片加载失败回调\n    const handleImgLoadError = (e: Event) => {\n      if (realSrc.value === '') {\n        return;\n      }\n      emitEvent('error', e);\n      loadingValue.value = false;\n      errorValue.value = true;\n    };\n    return {\n      imageDOM,\n      statusContent,\n      name,\n      classes,\n      imageStyles,\n      loadingValue,\n      realSrc,\n      errorValue,\n      handleImgLoadCompleted,\n      handleImgLoadError,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TNode","props","ImageProps","setup","context","emitEvent","useEmitEvent","emit","internalInstance","getCurrentInstance","closeIcon","h","CloseIcon","ellipsisIcon","EllipsisIcon","statusContent","computed","slots","loading","loadingValue","value","renderTNode","error","errorValue","ref","imageStyles","objectFit","fit","objectPosition","position","classes","shape","imageDOM","realSrc","watchEffect","lazy","src","useIntersectionObserver","observerElement","isIntersecting","stop","handleImgLoadCompleted","e","handleImgLoadError","_createElementBlock","class","_ctx","_createVNode","_component_t_node","content","_createElementVNode","style","alt","onLoad","onError"],"mappings":"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"}