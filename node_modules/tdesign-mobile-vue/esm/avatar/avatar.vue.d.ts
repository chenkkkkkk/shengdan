declare const _default: import("vue").DefineComponent<{
    imageProps: {
        type: import("vue").PropType<object | undefined>;
    };
    alt: {
        type: StringConstructor;
        default: string;
    };
    badgeProps: {
        type: import("vue").PropType<import("../badge").TdBadgeProps | undefined>;
    };
    hideOnLoadFailed: BooleanConstructor;
    icon: {
        type: import("vue").PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    image: {
        type: StringConstructor;
        default: string;
    };
    shape: {
        type: import("vue").PropType<import("./type").ShapeEnum | undefined>;
        default: import("./type").ShapeEnum | undefined;
        validator(val: import("./type").ShapeEnum | undefined): boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    onError: import("vue").PropType<(() => void) | undefined>;
}, {
    iconContent: import("vue").ComputedRef<any>;
    avatarContent: import("vue").ComputedRef<any>;
    avatarClass: import("vue").ComputedRef<any[]>;
    customSize: import("vue").ComputedRef<{
        height: string | undefined;
        width: string | undefined;
    } | {
        height?: undefined;
        width?: undefined;
    }>;
    handleImgLoadCompleted: (e: any) => void;
    handleImgLoadError: (e: any) => void;
    customImageProps: import("vue").ComputedRef<{
        src: string;
        alt: string;
    }>;
    image: import("vue").Ref<string>;
    shape: import("vue").Ref<import("./type").ShapeEnum | undefined>;
    size: import("vue").Ref<string>;
    alt: import("vue").Ref<string>;
    hideOnLoadFailed: import("vue").Ref<boolean>;
    onError: import("vue").Ref<(() => void) | undefined>;
    badgeProps: import("vue").Ref<import("../badge").TdBadgeProps | undefined>;
    imageProps: import("vue").Ref<object | undefined>;
    icon: import("vue").Ref<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    name: string;
} | {
    iconContent: import("vue").ComputedRef<any>;
    avatarContent: import("vue").ComputedRef<any>;
    avatarClass: import("vue").ComputedRef<any[]>;
    customSize: import("vue").ComputedRef<{
        height: string | undefined;
        width: string | undefined;
    } | {
        height?: undefined;
        width?: undefined;
    }>;
    handleImgLoadCompleted: (e: any) => void;
    handleImgLoadError: (e: any) => void;
    customImageProps: import("vue").ComputedRef<{
        src: string;
        alt: string;
    }>;
    image: import("vue").Ref<string>;
    shape: import("vue").Ref<import("./type").ShapeEnum | undefined>;
    size: import("vue").Ref<string>;
    alt: import("vue").Ref<string>;
    hideOnLoadFailed: import("vue").Ref<boolean>;
    onError: import("vue").Ref<(() => void) | undefined>;
    badgeProps: import("vue").Ref<import("../badge").TdBadgeProps | undefined>;
    imageProps: import("vue").Ref<object | undefined>;
    icon: import("vue").Ref<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    name: string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "error", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    imageProps: {
        type: import("vue").PropType<object | undefined>;
    };
    alt: {
        type: StringConstructor;
        default: string;
    };
    badgeProps: {
        type: import("vue").PropType<import("../badge").TdBadgeProps | undefined>;
    };
    hideOnLoadFailed: BooleanConstructor;
    icon: {
        type: import("vue").PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    image: {
        type: StringConstructor;
        default: string;
    };
    shape: {
        type: import("vue").PropType<import("./type").ShapeEnum | undefined>;
        default: import("./type").ShapeEnum | undefined;
        validator(val: import("./type").ShapeEnum | undefined): boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    onError: import("vue").PropType<(() => void) | undefined>;
}>>, {
    image: string;
    shape: import("./type").ShapeEnum | undefined;
    size: string;
    alt: string;
    hideOnLoadFailed: boolean;
}>;
export default _default;
